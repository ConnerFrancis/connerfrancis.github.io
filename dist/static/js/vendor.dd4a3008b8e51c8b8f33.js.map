{"version":3,"sources":["webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/@firebase/storage/dist/index.esm.js","webpack:///./node_modules/@firebase/polyfill/dist/index.esm.js","webpack:///./node_modules/@firebase/webchannel-wrapper/dist/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@firebase/app/dist/index.cjs.js","webpack:///./node_modules/@firebase/util/dist/index.cjs.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/@firebase/auth/dist/auth.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/@firebase/firestore/dist/index.cjs.js","webpack:///./node_modules/@firebase/functions/dist/index.cjs.js","webpack:///./node_modules/@firebase/messaging/dist/index.esm.js","webpack:///./node_modules/@firebase/logger/dist/index.esm.js","webpack:///./node_modules/vuefire/dist/vuefire.esm.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/firebase/dist/index.cjs.js","webpack:///./node_modules/whatwg-fetch/fetch.js"],"names":["warn","condition","message","isError","err","Object","prototype","toString","call","indexOf","View","name","functional","props","type","String","default","render","_","ref","children","parent","data","routerView","h","$createElement","route","$route","cache","_routerViewCache","depth","inactive","_routerRoot","$vnode","_inactive","$parent","routerViewDepth","matched","component","components","registerRouteInstance","vm","val","current","instances","hook","prepatch","vnode","componentInstance","propsToPass","config","params","undefined","resolveProps","to","from","key","extend","attrs","encodeReserveRE","encodeReserveReplacer","c","charCodeAt","commaRE","encode","str","encodeURIComponent","replace","decode","decodeURIComponent","parseQuery","query","res","trim","split","forEach","param","parts","shift","length","join","Array","isArray","push","stringifyQuery","obj","keys","map","result","val2","filter","x","trailingSlashRE","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","options","clone","e","meta","path","hash","fullPath","getFullPath","unshift","formatMatch","freeze","value","START","_stringifyQuery","isSameRoute","a","b","isObjectEqual","aKeys","bKeys","every","aVal","bVal","_Vue","toTypes","eventTypes","Link","required","tag","exact","Boolean","append","activeClass","exactActiveClass","event","this$1","this","$router","resolve","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","target","queryIncludes","isIncludedRoute","handler","guardEvent","on","click","class","findAnchor","child","i","$slots","isStatic","util","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","getAttribute","test","preventDefault","install","Vue","installed","isDef","v","registerInstance","callVal","$options","_parentVnode","mixin","beforeCreate","_router","init","defineReactive","history","destroyed","defineProperty","get","_route","strats","optionMergeStrategies","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","created","inBrowser","window","resolvePath","relative","base","firstChar","charAt","stack","pop","segments","segment","cleanPath","isarray","arr","pathToRegexp_1","pathToRegexp","parse_1","parse","compile_1","tokensToFunction","tokensToFunction_1","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","RegExp","tokens","index","defaultDelimiter","delimiter","exec","m","escaped","offset","slice","next","prefix","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","toUpperCase","matches","opts","pretty","token","TypeError","JSON","stringify","j","attachKeys","re","flags","sensitive","strict","end","endsWithDelimiter","groups","source","match","regexpToRegexp","arrayToRegexp","stringToRegexp","compile","regexpCompileCache","create","fillParams","routeMsg","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","beforeEnter","childMatchAs","alias","aliases","aliasRoute","l","splice","normalizeLocation","raw","_normalized","assign","rawPath","parsedPath","hashIndex","queryIndex","parsePath","basePath","extraQuery","_parseQuery","parsedQuery","resolveQuery","createMatcher","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","hasOwnProperty","resolveRecordPath","aliasedMatch","aliasedRecord","addRoutes","len","positionStore","setupScroll","replaceState","getStateKey","addEventListener","saveScrollPosition","state","_key","handleScroll","isPop","app","behavior","scrollBehavior","$nextTick","position","getScrollPosition","shouldScroll","then","scrollToPosition","catch","pageXOffset","y","pageYOffset","isValidPosition","isNumber","normalizePosition","isObject","selector","el","document","querySelector","docRect","documentElement","getBoundingClientRect","elRect","left","top","getElementPosition","scrollTo","ua","supportsPushState","navigator","userAgent","Time","performance","now","Date","genKey","toFixed","pushState","url","runQueue","queue","fn","cb","step","resolveAsyncComponents","hasAsync","pending","error","flatMapComponents","def","cid","once","resolvedDef","__esModule","hasSymbol","Symbol","toStringTag","resolved","reject","reason","msg","Error","comp","flatten","concat","apply","called","args","arguments","History","baseEl","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","extractGuards","records","bind","reverse","guards","instance","guard","extractGuard","bindGuard","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","console","max","Math","updated","activated","deactivated","resolveQueue","extractLeaveGuards","beforeHooks","extractUpdateHooks","iterator","postEnterCbs","cbs","isValid","poll","setTimeout","bindEnterGuard","extractEnterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","initLocation","getLocation","__proto__","constructor","go","n","fromRoute","getCurrentLocation","pathname","search","HashHistory","fallback","checkFallback","ensureSlash","setupListeners","supportsScroll","getHash","replaceHash","pushHash","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","mode","prototypeAccessors","configurable","registerHook","list","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","createHref","normalizedTo","defineProperties","version","use","__webpack_exports__","global","emptyObject","isUndef","isTrue","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","parseFloat","floor","isFinite","toNumber","isNaN","makeMap","expectsLowerCase","toLowerCase","isBuiltInTag","isReservedAttribute","remove","item","hasOwn","cached","camelizeRE","camelize","capitalize","hyphenateRE","hyphenate","Function","ctx","boundFn","_length","toArray","start","ret","_from","toObject","noop","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","keysA","keysB","looseIndexOf","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","silent","productionTip","devtools","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","enumerable","writable","bailRE","_isServer","hasProto","inWeex","WXEnvironment","platform","weexPlatform","UA","isIE","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","Reflect","ownKeys","Set","set","has","add","clear","uid","Dep","id","subs","addSub","sub","removeSub","depend","addDep","notify","update","targetStack","pushTarget","_target","popTarget","VNode","text","elm","context","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","createEmptyVNode","node","createTextVNode","cloneVNode","cloned","arrayProto","arrayMethods","method","original","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","protoAugment","copyAugment","walk","src","observe","asRootData","isExtensible","_isVue","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","del","items","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","mergeAssets","key$1","methods","inject","computed","provide","defaultStrat","mergeOptions","normalizeProps","normalized","normalizeInject","dirs","directives","normalizeDirectives","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","stringIndex","_props","getType","getPropDefaultValue","prevShouldObserve","isSameType","expectedTypes","handleError","info","cur","hooks","errorCaptured","globalHandleError","logError","microTimerFunc","macroTimerFunc","callbacks","flushCallbacks","copies","useMacroTask","setImmediate","MessageChannel","channel","port","port2","port1","onmessage","postMessage","Promise","p","nextTick","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","old","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","last","isTextNode","_isVList","ensureCtor","getFirstComponentChild","$once","$on","remove$1","$off","updateComponentListeners","listeners","oldListeners","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","isInInactiveTree","activateChildComponent","direct","_directInactive","$children","callHook","handlers","_hasHookEvent","$emit","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","_watcher","_isMounted","callUpdatedHooks","emit","uid$1","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","sync","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","queueWatcher","oldValue","evaluate","teardown","_isBeingDestroyed","sharedPropertyDefinition","proxy","sourceKey","initState","propsOptions","_propKeys","loop","initProps","initMethods","_data","getData","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","createWatcher","initWatch","shouldCache","createComputedGetter","$watch","resolveInject","provideKey","_provided","provideDefault","renderList","renderSlot","bindObject","nodes","scopedSlotFn","$scopedSlots","slotNodes","_rendered","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","scopedSlots","_scopeId","_c","d","createElement","cloneAndMarkFunctionalResult","mergeProps","componentVNodeHooks","hydrating","parentElm","refElm","_isDestroyed","keepAlive","mountedNode","_isComponent","_parentElm","_refElm","inlineTemplate","createComponentInstanceForVnode","$mount","oldVnode","parentVnode","renderChildren","hasChildren","_renderChildren","_vnode","$attrs","$listeners","propKeys","_parentListeners","$forceUpdate","updateChildComponent","insert","destroy","deactivateChildComponent","$destroy","hooksToMerge","createComponent","baseCtor","_base","factory","errorComp","loading","loadingComp","contexts","forceRender","delay","timeout","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","callback","transformModel","extractPropsFromVNodeData","renderContext","vnodes","createFunctionalComponent","nativeOn","abstract","installComponentHooks","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","applyNS","force","style","registerDeepBindings","_createElement","uid$3","super","superOptions","modifiedOptions","modified","latest","extended","extendOptions","sealed","sealedOptions","dedupe","resolveModifiedOptions","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","Comp","initProps$1","initComputed$1","getComponentName","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","initMixin","dataDef","propsDef","$set","$delete","immediate","stateMixin","hookRE","i$1","eventsMixin","_update","prevEl","$el","prevVnode","prevActiveInstance","__patch__","__vue__","lifecycleMixin","_render","renderMixin","patternTypes","builtInComponents","KeepAlive","include","exclude","Number","mounted","parseInt","configDef","delete","plugin","installedPlugins","_installedPlugins","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","acceptValue","attr","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","parentNode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","selected","nodeOps","tagName","multiple","setAttribute","createElementNS","namespace","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","removeAttribute","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","baseWarn","pluckModuleFunction","modules","addProp","plain","addAttr","addRawAttr","attrsMap","attrsList","addDirective","arg","addHandler","important","events","right","middle","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","genComponentModel","number","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","add$1","_withTask","onceHandler","remove$2","createOnceHandler","updateDOMListeners","change","normalizeEvents","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","notInFocus","activeElement","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","cssText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","addClass","classList","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","appearClass","appearToClass","appearActiveClass","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","patchable","i$2","createPatchFunction","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","dispatchEvent","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","dx","dy","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","cloneNode","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","open","close","parseText","tagRE","tokenValue","rawTokens","@binding","klass$1","staticKeys","transformNode","classBinding","genData","decoder","style$1","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","attribute","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","comment","conditionalComment","IS_REGEX_CAPTURING_BROKEN","g","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","argRE","bindRE","modifierRE","decodeHTMLCached","createASTElement","makeAttrsMap","template","isPreTag","root","currentParent","preserveWhitespace","inPre","closeElement","element","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","all","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","substring","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","ieNSBug","ieNSPrefix","guardIESVGBug","forbidden","checkRootConstraints","processPre","processRawAttrs","processed","processFor","if","addIfCondition","block","else","elseif","processIf","processOnce","processElement","findPrevElement","processIfConditions","slotScope","slotTarget","lastNode","for","checkInFor","processRef","slotName","processSlot","processComponent","isProp","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","iteratorMatch","iterator1","iterator2","parseFor","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","baseOptions","_warn","code","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","reduce","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","stop","prevent","self","ctrl","alt","genHandlers","genHandler","isMethodPath","isFunctionExpression","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyCode","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","altGen","altHelper","genFor","ifProcessed","genIf","genChildren","bind$$1","genSlot","componentName","genData$2","genComponent","altEmpty","genIfConditions","conditions","genTernaryExp","needRuntime","hasRuntime","gen","genDirectives","genProps","genScopedSlot","inlineRenderFns","genInlineTemplate","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","createFunction","errors","baseCompile","div","compileToFunctions","finalOptions","tips","tip","compiled","fnGenErrors","createCompileToFunctionFn","getShouldDecode","idToTemplate","mount","outerHTML","container","getOuterHTML","domainBase","downloadBase","apiBaseUrl","apiUploadBaseUrl","defaultMaxOperationRetryTime","defaultMaxUploadRetryTime","minSafeInteger","FirebaseStorageError","code_","prependCode","message_","serverResponse_","name_","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","unknown","canceled","cannotSliceBlob","invalidArgument","fnName","appDeleted","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","StringData","opt_contentType","contentType","dataFromString","string","utf8Bytes_","base64Bytes_","DataURLParts","base64","decoded","percentEncodedBytes_","dataURLBytes_","dataURLContentType_","Uint8Array","hasMinus","hasUnder","hasPlus","hasSlash","bytes","atob","array","dataURL","ErrorCode","TaskEvent","STATE_CHANGED","InternalTaskState","RUNNING","PAUSING","PAUSED","SUCCESS","CANCELING","ERROR","TaskState","taskStateFromInternalTaskState","contains","f","make","resolver","isJustDef","isFunction","isNonNullObject","isString","isNativeBlob","isNativeBlobDefined","Blob","NetworkXhrIo","_this","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","resolve$$1","reject$$1","ABORT","NETWORK_ERROR","send","opt_body","opt_headers","setRequestHeader","getErrorCode","getStatus","status","getResponseText","responseText","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","XhrIoPool","createXhrIo","jsonObjectOrNull","Location","bucket","path_","fullServerUrl","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","indices","postModify","loc","captures","bucketValue","pathValue","invalidUrl","lastComponent","makeNormalUrl","urlPart","makeUploadUrl","makeQueryString","queryPart","nextPart","noXform_","metadata","Mapping","server","opt_local","opt_writable","opt_xform","local","xform","mappings_","getMappings","mappings","nameMapping","xformPath","sizeMapping","size","fromResource","authWrapper","resource","mapping","makeStorageReference","addRef","fromResourceString","resourceString","downloadUrlFromResourceString","makeDownloadUrl","toResourceString","metadataValidator","validate","specs","passed","minArgs","maxArgs","argMin","argMax","real","countPart","plural","validator","ArgSpec","opt_optional","stringSpec","opt_validator","stringValidator","v1","v2","metadataSpec","nonNegativeNumberSpec","looseObjectSpec","nullFunctionSpec","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","FbsBlob","opt_elideCopy","blobType","data_","ArrayBuffer","byteLength","size_","type_","startByte","endByte","realBlob","sliced","blob","webkitSlice","mozSlice","buffer","getBlob","var_args","blobby","bb","uint8Arrays","finalLength_1","merged_1","index_1","uploadData","contains$1","elem","RequestInfo","urlParams","headers","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","sharedErrorHandler","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","getDownloadUrl","downloadUrlHandler","metadataForUpload_","opt_metadata","determineContentType_","ResumableUploadStatus","total","finalized","checkResumeHeader_","opt_allowed","continueResumableUpload","chunkSize","opt_status","opt_progressCallback","bytesLeft","bytesToUpload","min","X-Goog-Upload-Command","X-Goog-Upload-Offset","maxUploadRetryTime","uploadStatus","newCurrent","nextOrObserver","opt_error","opt_complete","complete","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","async","argsToForward","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","ref_","authWrapper_","location_","blob_","metadata_","resumable_","shouldDoResumable_","state_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","start_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","getAuthToken","authToken","X-Goog-Upload-Protocol","X-Goog-Upload-Header-Content-Length","X-Goog-Upload-Header-Content-Type","Content-Type","createResumableUpload","createRequest","makeRequest","getPromise","sizeString","getResumableUploadStatus","statusRequest","uploadRequest","newStatus","increaseMultiplier_","metadataRequest","boundary","random","genBoundary","preBlobPart","postBlobPart","multipartUpload","multipartRequest","transferred","notifyObservers_","cancel","wasPaused","externalState","completed","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","_p","makeBinder","addObserver_","removeObserver_","binderSpecs","onFulfilled","onRejected","notifyObserver_","arraylike","finishPromise_","triggered","snapshot","resume","valid","pause","Reference","newRef","childPath","newPath","canonicalChildPath","service","put","throwIfRoot_","putString","deleteObject","updateMetadata","getDownloadURL","invalidRootOperation","FailRequest","appDelete","RequestMap","map_","id_","addRequest","r","unmap","AuthWrapper","maker","requestMaker","pool","bucket_","deleted_","app_","extractBucket_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","maxUploadRetryTime_","requestMap_","INTERNAL","getToken","response","accessToken","_error","request","deleteApp","setMaxUploadRetryTime","time","setMaxOperationRetryTime","NetworkRequest","errorCallback","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","backoffDone","requestWentThrough","wasSuccessCode","RequestEndStatus","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","success","waitMillis","stopped","wasTimeout","clearTimeout","backoffCallback","canceled$$1","progressListener","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","lengthComputable","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","opt_canceled","addAuthHeader_","__WEBPACK_IMPORTED_MODULE_0__firebase_app___default","SDK_VERSION","addVersionHeader_","Service","authWrapperBucket","internals_","ServiceInternals","refFromURL","STORAGE_TYPE","unused","opt_url","registerStorage","namespaceExports","Storage","registerService","setTimeoutFunc","_state","_handled","_deferreds","doResolve","handle","deferred","_immediateFn","promise","newValue","finale","thisArg","_unhandledRejectionFn","done","ex","prom","remaining","race","values","globalNS","createCommonjsModule","module","exports","_global","__g","_core","core","__e","_isObject","it","_anObject","_fails","_descriptors","_ie8DomDefine","dP","_objectDp","O","P","Attributes","S","valueOf","_toPrimitive","_hide","object","bitmap","_propertyDesc","_has","px","_redefine","SRC","$toString","TPL","inspectSource","safe","_ctx","that","_aFunction","$export","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","expProto","U","W","R","_export","_cof","_iobject","propertyIsEnumerable","_defined","ceil","_toInteger","_toLength","_isArray","store","_shared","_wks","USE_SYMBOL","SPECIES","_arraySpeciesCreate","C","_arrayMethods","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","UNSCOPABLES","ArrayProto","_addToUnscopables","$find","forced","find","$find$1","forced$1","findIndex","MATCH","_stringContext","searchString","NAME","MATCH$1","$startsWith","KEY","_failsIsRegexp","startsWith","count","Infinity","RangeError","goog","k","aa","ba","ca","da","ea","q","fa","ha","ia","ja","t","u","H","Ib","ka","captureStackTrace","la","ma","w","na","pa","$","qa","ra","sa","ta","va","wa","xa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","z","Ma","Na","Oa","Pa","Ra","Qa","documentMode","Sa","Ta","Ua","Wa","Va","Xa","compatMode","Ya","Za","$a","ab","A","relatedTarget","screenY","screenX","clientY","clientX","pointerId","pointerType","changedTouches","srcElement","nodeName","fromElement","toElement","pageX","pageY","2","3","4","returnValue","db","eb","fb","ga","Z","gb","hb","jb","ib","kb","lb","mb","nb","pb","qb","rb","sb","attachEvent","tb","addListener","removeListener","ub","vb","wb","detachEvent","xb","yb","zb","handleEvent","N","J","Ab","Bb","Cb","eval","Db","Eb","Fb","Gb","Hb","\"","\\","/","\b","\f","\n","\r","\t","\u000b","Jb","Kb","Nb","Lb","reset","Rb","Tb","Ob","Pb","Qb","Sb","contentWindow","write","protocol","host","origin","onreadystatechange","Ub","Vb","Window","Wb","Xb","Yb","Zb","$b","ac","Y","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","log","oc","pc","qc","D","rc","E","sc","tc","I","X","Mb","uc","vc","wc","xc","yc","zc","Ac","Bc","K","Cc","Dc","Ec","Fc","TIMEOUT","Gc","Hc","Ic","Jc","Kc","Lc","OPEN","Oc","Mc","Nc","Pc","Qc","ActiveXObject","L","T","Rc","Sc","Tc","Uc","Vc","Wc","M","Xc","Yc","Zc","$c","ad","V","bd","cd","dd","ed","fd","gd","hd","jd","kd","ld","md","od","pd","nd","qd","rd","Q","sd","td","ud","vd","wd","xd","yd","Ed","zd","Fd","Gd","abs","Hd","Id","decodeURI","Jd","Ad","Bd","Cd","Dd","Ld","Kd","Md","Nd","Od","Pd","Qd","Rd","Sd","Td","Ud","Wd","Xd","Yd","Zd","$d","ae","PerformanceNavigationTiming","getEntriesByType","nextHopProtocol","oa","Vd","be","ce","de","ee","fe","ge","ie","je","ke","le","Image","onload","me","onerror","onabort","ontimeout","ne","oe","pe","se","qe","te","ue","ve","readyState","we","xe","ye","supportsCrossDomainXhr","concurrentRequestLimit","backgroundChannelTest","fastHandshake","ze","Ae","Be","sendBeacon","Ce","De","Ee","Fe","Ge","He","Je","Ie","round","Ke","Le","Me","Ne","hostname","Oe","Pe","Qe","testUrl","messageUrlParams","messageHeaders","clientProtocolHeaderRequired","X-Client-Protocol","initMessageHeaders","messageContentType","X-WebChannel-Content-Type","X-WebChannel-Client-Profile","httpHeadersOverwriteParam","sendRawJson","httpSessionIdParam","Re","Se","__sm__","Te","FormData","responseType","withCredentials","statusText","__data__","Ue","Ve","We","Xe","Ye","Ze","af","$e","bf","cf","df","ef","createWebChannel","HTTP_ERROR","COMPLETE","EventType","CLOSE","MESSAGE","getObject","releaseObject","listenOnce","getLastError","getLastErrorCode","getStatusText","getResponseJson","createWebChannelTransport","WebChannel","__webpack_require__","DEFAULT_ENTRY_NAME","tokenListeners","FirebaseAppImpl","firebase_","isDeleted_","services_","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","deepCopy","getUid","addAuthTokenListener","removeAuthTokenListener","checkDestroyed_","removeApp","services","serviceKey","instanceKey","_getService","instanceIdentifier","instanceSpecifier","factories","extendApp","deepExtend","appErrors","ErrorFactory","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","firebase","createFirebaseNamespace","apps_","appHooks","initializeApp","rawConfig","name_1","callAppHooks","createService","serviceProperties","appHook","allowMultipleInstances","getApps","serviceNamespace","appArg","extendNamespace","createSubscribe","useAsService","eventName","serviceName","factoryName","useService","patchProperty","tslib_1","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assert","assertion","assertionError","stringToByteArray","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","encodeByteArray","input","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","c1","fromCharCode","c2","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","base64Decode","getTime","Deferred","wrapCallback","getUA","ERROR_NAME","FirebaseError","fullCode","jsonEval","claims","signature","objTo","objFrom","findKey","opt_this","Sha1","_super","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","__extends","compress_","buf","opt_offset","opt_length","lengthMinusBlock","inbuf","digest","totalBits","ObserverProxy","executor","onNoObservers","observers","unsubscribes","observerCount","forEachObserver","subscribe","methods_1","implementsAnyMethods","unsub","unsubscribeOne","finalError","sendOne","errorPrefix","argumentNumber","argName","base64Encode","utf8Bytes","isMobileCordova","isNodeSdk","isReactNative","patchCapture","captureFake","isAdmin","issuedAtTime","isValidFormat","isValidTimestamp","validSince","validUntil","findValue","getAnyKey","getCount","rv","getValues","isEmpty","opt_obj","safeGet","querystring","querystringParams","arrayVal","querystringDecode","validateArgCount","minCount","maxCount","argCount","argError","validateCallback","validateContextObject","validateNamespace","stringLength","high","__","extendStatics","getOwnPropertySymbols","decorators","desc","decorate","paramIndex","decorator","metadataKey","metadataValue","_arguments","generator","fulfilled","rejected","label","sent","trys","ops","verb","throw","return","op","ar","__read","asyncIterator","__await","fulfill","settle","__values","cooked","mod","setPrototypeOf","__assign","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","_injectStyles","$goog_Thenable","getElementById","className","htmlFor","cellpadding","cellspacing","colspan","frameborder","height","maxlength","nonce","role","rowspan","usemap","valign","width","screen","availHeight","availWidth","resizable","statusbar","toolbar","scrollbars","standalone","noreferrer","initMouseEvent","opener","noopener","focus","importScripts","localStorage","setItem","removeItem","indexedDB","___jsl","CP","visibilityState","toUTCString","onLine","connection","abcd","toJSON","argument-error","app-not-authorized","app-not-installed","captcha-check-failed","code-expired","cordova-not-ready","cors-unsupported","credential-already-in-use","custom-token-mismatch","requires-recent-login","dynamic-link-not-activated","email-already-in-use","expired-action-code","cancelled-popup-request","internal-error","invalid-app-credential","invalid-app-id","invalid-user-token","invalid-auth-event","invalid-verification-code","invalid-continue-uri","invalid-cordova-configuration","invalid-custom-token","invalid-email","invalid-api-key","invalid-cert-hash","invalid-credential","invalid-persistence-type","invalid-message-payload","invalid-oauth-provider","invalid-oauth-client-id","unauthorized-domain","invalid-action-code","wrong-password","invalid-phone-number","invalid-recipient-email","invalid-sender","invalid-verification-id","missing-android-pkg-name","auth-domain-config-required","missing-app-credential","missing-verification-code","missing-continue-uri","missing-iframe-start","missing-ios-bundle-id","missing-phone-number","missing-verification-id","account-exists-with-different-credential","network-request-failed","no-auth-event","no-such-provider","null-user","operation-not-allowed","operation-not-supported-in-this-environment","popup-blocked","popup-closed-by-user","provider-already-linked","quota-exceeded","redirect-cancelled-by-user","redirect-operation-pending","user-token-expired","too-many-requests","unauthorized-continue-uri","unsupported-persistence-type","user-cancelled","user-not-found","user-disabled","user-mismatch","user-signed-out","weak-password","web-storage-unsupported","ff","gf","hf","jf","kf","continueUrl","canHandleCodeInApp","androidPackageName","androidMinimumVersion","androidInstallApp","iOSBundleId","mf","nf","of","qf","pf","rf","provider_id","sign_in_provider","is_anonymous","sf","tf","iss","aud","uf","vf","wf","xf","yf","zf","Af","Bf","Cf","Df","Ef","Ff","Gf","isNewUser","kind","rawUserInfo","providerId","profile","login","screenName","If","Jf","Kf","idToken","oauthToken","oauthTokenSecret","Mf","id_token","access_token","secret","oauth_token_secret","postBody","requestUri","Pf","isOAuthProvider","Qf","Rf","credential","Sf","Tf","Uf","Vf","Wf","Xf","Yf","EMAIL_LINK_SIGN_IN_METHOD","EMAIL_PASSWORD_SIGN_IN_METHOD","cg","dg","eg","fg","temporaryProof","phoneNumber","sessionInfo","ig","auth","kg","lg","oauthAccessToken","oauthIdToken","mg","ng","og","eventId","urlResponse","sessionId","pg","Lf","Nf","Of","signInMethod","Zf","email","oobCode","$f","password","ag","bg","PROVIDER_ID","gg","operation","hg","verificationId","verificationCode","verify","di","jg","recaptchaToken","PHONE_SIGN_IN_METHOD","qg","rg","sg","tg","unsubscribe","xg","ug","vg","wg","yg","zg","Ag","Bg","XDomainRequest","onprogress","Cg","Dg","getAllResponseHeaders","Fg","Gg","Eg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","Rg","Headers","Sg","Tg","Ug","credentials","fetch","Request","entries","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","dh","eh","fh","hh","kh","lh","jh","mh","oh","ph","qh","rh","ih","getResponse","mozResponseArrayBuffer","sh","th","uh","vh","wh","xh","attributes","charset","getElementsByTagName","yh","zh","Ah","secureTokenEndpoint","secureTokenTimeout","Bh","secureTokenHeaders","Ch","firebaseEndpoint","firebaseTimeout","Dh","firebaseHeaders","Eh","Fh","Gh","Hh","Ih","gapi","client","Lh","Kh","nh","Jh","gh","Ph","Qh","Wh","Xh","setApiKey","setToken","authType","Yh","Zh","$h","displayName","photoUrl","hi","ii","needConfirmation","errorMessage","ji","returnIdpCredential","ki","li","autoCreate","mi","ni","deleteAttribute","requestType","ai","bi","ci","ei","oi","newPassword","pi","qi","endpoint","ri","Sh","si","gi","deleteProvider","ti","Vh","ui","recaptchaSiteKey","vi","USER_NOT_FOUND","returnSecureToken","Nh","Oh","keyInvalid","ipRefererBlocked","INVALID_CUSTOM_TOKEN","CREDENTIAL_MISMATCH","MISSING_CUSTOM_TOKEN","INVALID_IDENTIFIER","MISSING_CONTINUE_URI","INVALID_EMAIL","INVALID_PASSWORD","USER_DISABLED","MISSING_PASSWORD","EMAIL_EXISTS","PASSWORD_LOGIN_DISABLED","INVALID_IDP_RESPONSE","FEDERATED_USER_ID_ALREADY_LINKED","INVALID_MESSAGE_PAYLOAD","INVALID_RECIPIENT_EMAIL","INVALID_SENDER","EMAIL_NOT_FOUND","EXPIRED_OOB_CODE","INVALID_OOB_CODE","MISSING_OOB_CODE","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","INVALID_ID_TOKEN","TOKEN_EXPIRED","CORS_UNSUPPORTED","DYNAMIC_LINK_NOT_ACTIVATED","INVALID_APP_ID","TOO_MANY_ATTEMPTS_TRY_LATER","WEAK_PASSWORD","OPERATION_NOT_ALLOWED","USER_CANCELLED","CAPTCHA_CHECK_FAILED","INVALID_APP_CREDENTIAL","INVALID_CODE","INVALID_PHONE_NUMBER","INVALID_SESSION_INFO","INVALID_TEMPORARY_PROOF","MISSING_APP_CREDENTIAL","MISSING_CODE","MISSING_PHONE_NUMBER","MISSING_SESSION_INFO","SESSION_EXPIRED","INVALID_CONTINUE_URI","MISSING_ANDROID_PACKAGE_NAME","MISSING_IOS_BUNDLE_ID","UNAUTHORIZED_DOMAIN","INVALID_OAUTH_CLIENT_ID","INVALID_CERT_HASH","yi","wi","xi","zi","Hi","Gi","Fi","where","messageHandlersFilter","dontclear","restyle","setHideOnLeave","Ci","ping","Ai","Vi","Ii","Ji","Ki","Li","Mi","authorizedDomains","Uh","Ni","register","Ei","authEvent","Oi","Qi","Ri","Si","reactNative","AsyncStorage","Ti","Ui","Xi","onupgradeneeded","createObjectStore","keyPath","onsuccess","objectStoreNames","deleteDatabase","Wi","Yi","Zi","objectStore","$i","transaction","aj","errorCode","cj","dj","ej","gj","fj","hj","ij","kj","sessionStorage","jj","Di","webStorageSupport","Pi","closed","getItem","fbase_key","getAll","openCursor","bj","qj","uj","mj","nj","oj","pj","rj","NONE","tj","Browser","Node","ReactNative","Worker","vj","wj","xj","zj","Bj","clearInterval","setInterval","Aj","Jj","Dj","Hj","Ij","Int32Array","Kj","Lj","Mj","Nj","Oj","Pj","Rl","Qj","Rj","Sj","Tj","Uj","Wj","lf","ak","Xj","Zj","handleOpenURL","bk","Ej","Vj","ibi","apn","appDisplayName","Yj","dk","fk","hk","ik","jk","signInViaRedirect","linkViaRedirect","reauthViaRedirect","signInViaPopup","linkViaPopup","reauthViaPopup","kk","lk","mk","nk","ok","gk","pk","qk","rk","ek","sk","tk","uk","xk","wk","Ak","Bk","Ck","Ek","Hk","Ik","refreshToken","Jk","expiresIn","Lk","grant_type","refresh_token","Mh","expires_in","expirationTime","Mk","lastSignInTime","creationTime","Pk","apiKey","appName","authDomain","Qk","Rk","Sk","Tk","Uk","Vk","Wk","Xk","Yk","$k","al","photoURL","emailVerified","isAnonymous","createdAt","lastLoginAt","providerData","bl","cl","dl","fl","gl","hl","Nk","Kk","il","jl","kl","nl","ml","additionalUserInfo","operationType","ol","reload","pl","ql","rl","sl","tl","ul","vl","stsTokenManager","redirectEventId","vk","yk","zk","confirm","Fk","Gk","auth_time","iat","authTime","signInProvider","users","localId","providerUserInfo","rawId","ll","passwordHash","fi","Al","Cl","yj","Fl","El","Bl","Dl","Hl","Il","Jl","Kl","Ll","zl","Wl","Ml","Nl","Ol","logFramework","Pl","Ql","Sl","Tl","Ul","wl","Vl","Zk","Xl","currentUser","Zl","_lat","$l","am","sj","languages","language","userLanguage","xl","Yl","identifier","continueUri","allProviders","Rh","signinMethods","Th","execute","bm","dm","em","cm","fm","gm","hm","im","grecaptcha","jm","km","lm","mm","theme","nm","om","pm","qm","tm","um","settings","appVerificationDisabledForTesting","wm","xm","sm","ym","zm","Am","Em","Gm","Hm","Im","Jm","Persistence","LOCAL","SESSION","appVerificationDisabled","Auth","Element","App","User","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","title","browser","argv","versions","off","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","LogLevel","logger","webchannelWrapper","logClient","Logger","getLogLevel","logLevel","DEBUG","SILENT","setLogLevel","newLevel","debug","argToString","PlatformSupport","getPlatform","formatJSON","fail","failure","setPlatform","emptyByteString","OK","CANCELLED","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","FirestoreError","makeConstructorPrivate","optionalMessage","PublicConstructor","staticProperty","defaulted","defaultValue","forEachNumber","num","shallowCopy","validateExactNumberOfArgs","functionName","numberOfArgs","formatPlural","validateAtLeastNumberOfArgs","minNumberOfArgs","validateBetweenNumberOfArgs","maxNumberOfArgs","validateArgType","argument","validateType","ordinal","validateOptionalArgType","validateNamedType","optionName","validateNamedOptionalType","validateOptionalArrayElements","typeDescription","valueDescription","validateArrayElements","validateNamedOptionalPropertyEquals","inputName","expected","expectedDescription","expected_1","actualDescription","validateNamedPropertyEquals","description","getPrototypeOf","customObjectName","results","tryGetCustomObjectType","validateDefined","validateOptionNames","optionNames","invalidClassError","AutoId","newId","autoId","primitiveComparator","arrayEquals","isEqual","assertUint8ArrayAvailable","assertBase64Available","base64Available","TypeOrder","ServerTimestampBehavior","binaryString","_binaryString","fromBase64String","fromUint8Array","char","toBase64","toUint8Array","other","_compareTo","PublicBlob","GeoPoint","latitude","longitude","_long","Timestamp","seconds","nanoseconds","fromMillis","fromDate","date","milliseconds","toDate","toMillis","DatabaseInfo","databaseId","persistenceKey","ssl","DEFAULT_DATABASE_NAME","DatabaseId","projectId","database","compareTo","Path","construct","comparator","nameOrPath","limit","popFirst","popLast","firstSegment","lastSegment","isPrefixOf","p1","p2","ResourcePath","canonicalString","fromString","EMPTY_PATH","identifierRegExp","FieldPath","isValidIdentifier","isKeyField","keyField","fromServerFormat","addCurrentSegment","inBackticks","DocumentKey","isDocumentKey","k1","k2","fromSegments","fromPathString","EMPTY","Document","hasLocalMutations","field","fieldValue","compareByKey","d1","d2","compareByField","NoDocument","SortedMap","LLRBNode","copy","BLACK","cmp","prunedNodes","minKey","maxKey","inorderTraversal","action","reverseTraversal","getIterator","SortedMapIterator","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","startKey","isReverse","nodeStack","getNext","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","smallest","rotateRight","moveRedRight","rotateLeft","colorFlip","nr","checkMaxDepth","blackDepth","check","pow","LLRBEmptyNode","FieldValueOptions","serverTimestampBehavior","timestampsInSnapshots","fromSnapshotOptions","serverTimestamps","Estimate","Previous","Default","FieldValue","defaultCompareTo","typeOrder","NullValue","internalValue","INSTANCE","BooleanValue","TRUE","FALSE","NumberValue","numericEquals","IntegerValue","DoubleValue","NAN","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","StringValue","TimestampValue","ServerTimestampValue","localWriteTime","previousValue","BlobValue","RefValue","GeoPointValue","ObjectValue","it1","it2","next1","next2","setChild","newChild","pathSegment","childName","ArrayValue","minLength","NumberAsAny","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","isInteger","isNullOrUndefined","Query","explicitOrderBy","startAt","endAt","memoizedCanonicalId","memoizedOrderBy","assertValidBound","atPath","inequalityField","getInequalityFilterField","firstOrderByField","getFirstOrderByField","KEY_ORDERING_ASC","OrderBy","foundKeyOrdering","_a","orderBy","lastDirection","Direction","ASCENDING","KEY_ORDERING_DESC","addFilter","RelationFilter","isInequality","newFilters","addOrderBy","newOrderBy","withLimit","withStartAt","bound","withEndAt","canonicalId","docComparator","comparedOnKeyField","compare","doc","matchesAncestor","matchesOrderBy","matchesFilters","matchesBounds","hasLimit","hasArrayContainsFilter","RelationOp","ARRAY_CONTAINS","isDocumentQuery","docPath","sortsBeforeDocument","LESS_THAN","LESS_THAN_OR_EQUAL","EQUAL","GREATER_THAN_OR_EQUAL","GREATER_THAN","refValue","comparison","matchesComparison","matchesValue","NullFilter","NanFilter","QueryPurpose","DESCENDING","Bound","before","orderByComponent","docValue","thisPosition","otherPosition","isKeyOrderBy","SnapshotVersion","timestamp","fromMicroseconds","fromTimestamp","forDeletedDoc","MIN","toMicroseconds","toTimestamp","MutationType","QueryData","targetId","purpose","snapshotVersion","resumeToken","FieldMask","fields","covers","fieldPath","FieldTransform","MutationResult","transformResults","RpcCode","Precondition","updateTime","exists","isValidFor","maybeDoc","isNone","Mutation","verifyKeyMatches","getPostMutationVersion","SetMutation","precondition","applyToRemoteDocument","mutationResult","applyToLocalView","baseDoc","PatchMutation","fieldMask","Patch","newData","patchDocument","patchObject","TransformMutation","fieldTransforms","Transform","requireDocument","serverTransformResults","transformObject","localTransformResults","fieldTransform","DeleteMutation","Delete","ExistenceFilter","isPermanentError","mapCodeFromRpcCode","SortedSet","fromMapKeys","first","forEachInRange","range","iter","forEachWhile","firstAfterOrEqual","unionWith","thisIt","otherIt","thisElem","otherElem","EMPTY_MAYBE_DOCUMENT_MAP","maybeDocumentMap","EMPTY_DOCUMENT_MAP","documentMap","EMPTY_DOCUMENT_VERSION_MAP","documentVersionMap","EMPTY_DOCUMENT_KEY_SET","documentKeySet","CurrentStatusUpdate","RemoteEvent","targetChanges","documentUpdates","limboDocuments","addDocumentUpdate","handleExistenceFilterMismatch","ResetMapping","currentStatusUpdate","MarkNotCurrent","synthesizeDeleteForLimboTargetChange","targetChange","MarkCurrent","WatchTargetChangeState","EMPTY_KEY_SET","docs","filterUpdates","existingKeys","UpdateMapping","addedDocuments","removedDocuments","applyToKeySet","docKey","DocumentWatchChange","updatedTargetIds","removedTargetIds","newDoc","ExistenceFilterChange","existenceFilter","WatchTargetChange","targetIds","cause","WatchChangeAggregator","listenTargets","pendingTargetResponses","existenceFilters","frozen","watchChange","addDocumentChange","addTargetChange","addExistenceFilterChange","addChanges","watchChanges","createRemoteEvent","isActiveTarget","ensureTargetChange","None","queryDataForActiveTarget","queryData","updateLimboDocuments","isOnlyLimbo","LimboResolution","docChange","relevant","NoChange","applyResumeToken","Added","recordTargetResponse","Removed","Current","Reset","newCount","ServerTimestampTransform","transformResult","ArrayUnionTransformOperation","elements","coercedFieldValuesArray","_loop_1","toUnion","ArrayRemoveTransformOperation","_loop_2","toRemove","DIRECTIONS","OPERATORS","ISO_REG_EXP","assertPresent","parseInt64","JsonProtoSerializer","useProto3Json","unsafeCastProtoByteString","byteString","fromRpcStatus","toInt32Value","fromInt32Value","nanos","fromIso8601String","utc","fraction","nanoStr","toBytes","fromBlob","toVersion","fromVersion","toResourceName","fullyQualifiedPrefixPath","fromResourceName","isValidResourceName","toName","fromName","extractLocalPathFromResourceName","toQueryPath","encodedDatabaseId","fromQueryPath","resourceName","toValue","nullValue","booleanValue","integerValue","doubleValue","stringValue","mapValue","toMapValue","arrayValue","toArrayValue","timestampValue","geoPointValue","bytesValue","referenceValue","fromValue","hasTag","fromFields","dbId","toMutationDocument","toFields","toDocument","fromDocument","fromFound","found","fromMissing","missing","readTime","fromMaybeDocument","toWatchTargetChangeState","toTestWatchChange","documentChange","documentDelete","documentRemove","mapRpcCodeFromCode","targetChangeType","fromWatchChange","fromWatchTargetChangeState","causeProto","entityChange","docDelete","docRemove","versionFromListenResponse","toMutation","mutation","updateMask","toDocumentMask","toFieldTransform","currentDocument","toPrecondition","fromMutation","proto","fromPrecondition","fromDocumentMask","fromFieldTransform","fromWriteResult","fromWriteResults","protos","setToServerValue","appendMissingElements","removeAllFromArray","toDocumentsTarget","documents","fromDocumentsTarget","documentsTarget","toQueryTarget","structuredQuery","collectionId","toFilter","toOrder","toCursor","fromQueryTarget","fromCount","filterBy","fromFilter","fromOrder","fromCursor","toListenRequestLabels","toLabel","goog-listen-tags","Listen","ExistenceFilterMismatch","toTarget","toRelationFilter","toUnaryFilter","compositeFilter","unaryFilter","fromUnaryFilter","fieldFilter","fromRelationFilter","accum","orderBys","order","toPropertyOrder","fromPropertyOrder","cursor","toDirection","fromDirection","toOperatorName","fromOperatorName","toFieldPathReference","fromFieldPathReference","fieldReference","direction","nanField","nullField","fieldPaths","StreamBridge","sendFn","closeFn","onOpen","wrappedOnOpen","onClose","wrappedOnClose","onMessage","wrappedOnMessage","callOnOpen","callOnClose","callOnMessage","LOG_TAG","RPC_NAME_REST_MAPPING","BatchGetDocuments","Commit","X_GOOG_API_CLIENT_VALUE","WebChannelConnection","baseUrl","modifyHeadersForRequest","authHeaders","invokeRPC","rpcName","makeUrl","json","status_1","mapCodeFromHttpStatus","requestString","invokeStreamingRPC","openStream","urlParts","webchannelTransport","opened","streamBridge","unguardedEventListen","msgData","error$$1","status_2","mapCodeFromRpcStatus","urlRpcName","BrowserPlatform","loadConnection","databaseInfo","newSerializer","encoded","OnlineState","ChangeType","SyncState","FieldPath$1","FieldPath$$1","fieldNames","minNumberOfElements","validateNamedArrayAtLeastNumberOfElements","_internalPath","documentId","_DOCUMENT_ID","RESERVED","GeneratorIds","DocumentChangeSet","changeMap","track","oldChange","Metadata","Modified","getChanges","changes","ViewSnapshot","oldDocs","docChanges","fromCache","hasPendingWrites","syncStateChanged","excludesMetadataChanges","otherChanges","DocumentSet","keyedMap","sortedSet","emptySet","oldSet","thisDoc","otherDoc","docStrings","newSet","ObjectMap","mapKeyFn","inner","matches_1","otherKey","entries_1","QueryListenersInfo","EventManager","syncEngine","queries","onlineState","Unknown","onChange","firstListen","queryInfo","applyOnlineStateChange","viewSnap","onViewSnapshot","unlisten","__awaiter","lastListen","__generator","viewSnaps","viewSnaps_1","QueryListener","queryObserver","raisedInitialEvent","snap","includeMetadataChanges","shouldRaiseEvent","shouldRaiseInitialEvent","raiseInitialEvent","maybeOnline","Offline","waitForSyncWhenOnline","hasPendingWritesChanged","getInitialViewChanges","PersistencePromise","nextCallback","catchCallback","isDone","callbackAttached","nextFn","catchFn","wrapFailure","wrapSuccess","toPromise","wrapUserFunction","waitFor","nextPromise","idx","EagerGarbageCollector","isEager","sources","potentialGarbage","addGarbageSource","garbageSource","setGarbageCollector","removeGarbageSource","addPotentialGarbageKey","collectGarbage","txn","promises","garbageKeys","hasRefsPromise","documentHasAnyReferences","hasRefs","containsKey","LocalViewChanges","addedKeys","removedKeys","fromSnapshot","viewSnapshot","ReferenceSet","refsByKey","DocReference","refsByTarget","compareByTargetId","garbageCollector","addReference","addReferences","removeReference","removeRef","removeReferences","removeReferencesForId","emptyKey","startRef","endRef","removeAllReferences","referencesForId","firstRef","targetOrBatchId","RESERVED_BITS","TargetIdGenerator","generatorId","initAfter","afterWithoutGenerator","afterGenerator","previousId","forLocalStore","LocalStore","forSyncEngine","SyncEngine","AddedLimboDocument","RemovedLimboDocument","_syncedDocuments","syncState","mutatedKeys","documentSet","computeDocChanges","previousChanges","changeSet","oldDocumentSet","newMutatedKeys","newDocumentSet","needsRefill","lastDocInLimit","newMaybeDoc","oldDoc","docsEqual","applyChanges","compareChangeType","applyTargetChange","limboChanges","newSyncState","Synced","Local","shouldBeInLimbo","targetMapping","oldLimboDocuments","QueryView","view","localStore","remoteStore","viewHandler","queryViewsByQuery","queryViewsByTarget","limboTargetsByKey","limboKeysByTarget","limboDocumentRefs","limboCollector","mutationUserCallbacks","targetIdGenerator","assertSubscribed","allocateQuery","executeQuery","remoteDocumentKeys","remoteKeys","viewDocChanges","viewChange","queryView","releaseQuery","removeAndCleanupQuery","batch","userCallback","localWrite","addMutationCallback","batchId","emitNewSnapsAndNotifyLocalStore","fillWritePipeline","wrapUpdateFunctionError","runTransaction","updateFunction","retries","createTransaction","userPromise","wrappedUpdateFunction","commit","applyRemoteEvent","remoteEvent","limboKey","qv","syncedDocuments","newViewSnapshots","rejectListen","docMap","event_1","queryView_1","applySuccessfulWrite","mutationBatchResult","processUserCallback","acknowledgeBatch","rejectFailedWrite","rejectBatch","newCallbacks","toKey","gcLimboDocuments","updateTrackedLimbos","limboChanges_1","limboChange","trackLimboChange","limboTargetId","currentLimboDocs","newSnaps","docChangesInAllViews","queriesProcessed","notifyLocalViewChanges","handleUserChange","BATCHID_UNKNOWN","MutationBatch","mutations","batchResult","mutationResults","keySet","isTombstone","toTombstone","MutationBatchResult","commitVersion","streamToken","docVersions","versionMap","escapeChar","encodedSeparatorChar","encodedNul","encodedEscape","encodeSeparator","encodeSegment","resultBuf","decode$1","lastReasonableEscapeIndex","segmentBuilder","currentPiece","createOrUpgradeDb","DbOwner","createOwnerStore","DbMutationQueue","DbMutationBatch","DbDocumentMutation","createMutationQueue","DbTargetDocument","createIndex","documentTargetsIndex","documentTargetsKeyPath","unique","DbTarget","queryTargetsIndexName","queryTargetsKeyPath","DbTargetGlobal","createQueryCache","DbRemoteDocument","createRemoteDocumentCache","globalStore","ensureTargetGlobalExists","targetGlobal","targetCount","saveTargetCount","DbTimestamp","ownerId","leaseTimestampMs","userId","lastAcknowledgedBatchId","lastStreamToken","localWriteTimeMs","prefixForUser","prefixForPath","PLACEHOLDER","DbNoDocument","noDocument","lastListenSequenceNumber","highestTargetId","highestListenSequenceNumber","lastRemoteSnapshotVersion","ALL_STORES","Deferred$1","SimpleDb","openOrCreate","runUpgrade","isAvailable","oldVersion","SimpleDbTransaction","wrapRequest","NODE_ENV","USE_MOCK_PERSISTENCE","objectStores","transactionFn","transactionFnResult","completionPromise","IterationController","dbCursor","shouldStop","nextKey","skip","aborted","completionDeferred","oncomplete","storeName","SimpleDbStore","keyOrValue","loadAll","indexOrRange","iterateCursor","deleteAll","keysOnly","control","iterate","optionsOrCallback","cursorRequest","controller","userResult","primaryKey","skipToKey","continue","indexName","openKeyCursor","IndexedDbMutationQueue","serializer","forUser","isAuthenticated","loadNextBatchIdFromDb","nextBatchId","mutationQueuesStore","checkEmpty","empty","maxBatchId","mutationsStore","nextUser","IDBKeyRange","keyForBatchId","getNextBatchId","getHighestAcknowledgedBatchId","convertStreamToken","getLastStreamToken","setLastStreamToken","addMutationBatch","dbBatch","toDbMutationBatch","mutations_1","indexKey","documentMutationsStore","lookupMutationBatch","fromDbMutationBatch","getNextMutationBatchAfterBatchId","lowerBound","foundBatch","getAllMutationBatches","dbBatches","getAllMutationBatchesThroughBatchId","getAllMutationBatchesAffectingDocumentKey","documentKey","indexPrefix","indexStart","userID","encodedPath","batchID","mutationKey","getAllMutationBatchesAffectingQuery","queryPath","immediateChildrenLength","uniqueBatchIDs","removeMutationBatches","batches","indexTxn","only","this_1","numDeleted","removePromise","batches_1","performConsistencyCheck","startRange","danglingMutationReferences","getStore","IndexedDbQueryCache","globalTargetStore","lastSavedVersion","getHighestTargetId","getLastRemoteSnapshotVersion","setLastRemoteSnapshotVersion","addQueryData","saveQueryData","updateMetadataFromQueryData","saveMetadata","updateQueryData","removeQueryData","removeMatchingKeysForTargetId","targetsStore","toDbTarget","needsUpdate","getQueryData","fromDbTarget","addMatchingKeys","documentTargetStore","removeMatchingKeys","notifyGCForRemovedKeys","getMatchingKeysForTargetId","getStore$1","IndexedDbRemoteDocumentCache","addEntry","maybeDocument","remoteDocumentsStore","dbKey","toDbRemoteDocument","removeEntry","getEntry","dbRemoteDoc","fromDbRemoteDocument","getDocumentsMatchingQuery","LocalSerializer","remoteSerializer","remoteDoc","serializedMutations","dbTarget","queryProto","dbTimestamp","TimerId","LOG_TAG$3","EXISTING_OWNER_ERROR_MSG","IndexedDbPersistence","generateOwnerId","dbName","MAIN_DATABASE","localStoragePrefix","started","simpleDb","tryAcquireOwnerLease","scheduleOwnerLeaseRefreshes","attachWindowUnloadHook","persistenceError","shutdown","deleteData","detachWindowUnloadHook","stopOwnerLeaseRefreshes","releaseOwnerLease","getMutationQueue","getQueryCache","getRemoteDocumentCache","ensureOwnerLease","buildStoragePrefix","isDefaultDatabase","dbOwner","validOwner","newDbOwner","minAcceptable","maxAcceptable","getZombiedOwnerId","ownerLeaseRefreshHandle","windowUnloadHandler","setZombiedOwnerId","zombiedOwnerId","zombiedOwnerLocalStorageKey","zombieOwnerId","LocalDocumentsView","remoteDocumentCache","mutationQueue","getDocument","computeLocalDocument","getDocuments","getDocumentsMatchingDocumentQuery","getDocumentsMatchingCollectionQuery","queryResults","computeLocalDocuments","promisedResults","matchingMutationBatches","matchingKeys","matchingMutationBatches_1","mutatedDoc","RemoteDocumentChangeBuffer","assertChanges","bufferedEntry","persistence","initialUser","localViewReferences","heldBatchResults","remoteDocuments","queryCache","localDocuments","startMutationQueue","startQueryCache","oldBatches","promisedOldBatches","newBatches","changedKeys","_d","highestAck","ackedBatches","promisedBatch","changedDocuments","affected","shouldHoldBatchResult","documentBuffer_1","releaseBatchResults","promisedAffectedKeys","toReject","affectedKeys","promisedToReject","lastAcked","removeMutationBatch","documentBuffer","changedDocKeys","existingDoc","releasedWriteKeys","lastRemoteVersion","remoteVersion","releaseHeldBatchResults","promisedReleasedWriteKeys","viewChanges","viewChanges_1","nextMutationBatch","afterBatchId","readDocument","documentBuffer_2","garbage","toRelease","isRemoteUpToVersion","batchResults","promiseChain","applyWriteToRemoteDocuments","batchResults_1","affectedDocs","batches_2","docKeys","ackVersion","MemoryMutationQueue","highestAcknowledgedBatchId","batchesByDocumentKey","batchIndex","indexOfExistingBatchId","findMutationBatch","rawIndex","indexOfBatchId","getAllLiveMutationBatchesBeforeIndex","endIndex","immediateChildrenPathLength","startPath","rowKeyPath","batchCount","firstBatchId","queueCount","startIndex","length_1","references","MemoryQueryCache","MemoryRemoteDocumentCache","MemoryPersistence","mutationQueues","MemoryPersistenceTransaction","NoOpGarbageCollector","PersistentStreamState","DelayedOperation","asyncQueue","timerId","targetTimeMs","removalCallback","createAndSchedule","delayMs","delayedOp","timerHandle","handleDelayElapsed","skipDelay","enqueue","AsyncQueue","tail","delayedOperations","operationInProgress","verifyNotFailed","newTail","enqueueAfterDelay","containsDelayedOperation","removeDelayedOperation","verifyOperationInProgress","drain","runDelayedOperationsEarly","lastTimerId","All","ExponentialBackoff","initialDelayMs","backoffFactor","maxDelayMs","timerPromise","currentBaseMs","resetToMax","backoffAndRun","delayWithJitterMs","jitterDelayMs","BACKOFF_INITIAL_DELAY_MS","BACKOFF_MAX_DELAY_MS","BACKOFF_FACTOR","PersistentStream","connectionTimerId","idleTimerId","credentialsProvider","inactivityTimerPromise","stream","backoff","Initial","isStarted","Backoff","Open","isOpen","performBackoff","Stopped","inhibitBackoff","markIdle","handleIdleCloseTimer","sendRequest","cancelIdleCheck","finalState","tearDown","startStream","rpcError","handleStreamClose","dispatchIfStillActive","currentStream_1","startRpc","PersistentListenStream","ListenStreamConnectionBackoff","ListenStreamIdle","watchChangeProto","onWatchChange","addTarget","labels","unwatch","removeTarget","PersistentWriteStream","WriteStreamConnectionBackoff","WriteStreamIdle","handshakeComplete_","writeMutations","responseProto","writeResults","commitTime","onMutationResult","onHandshakeComplete","writeHandshake","writes","Datastore","newPersistentWriteStream","newPersistentWatchStream","lookup","Transaction","datastore","readVersions","committed","recordVersion","docVersion","existingVersion","preconditionForUpdate","toMutations","unwritten","OnlineStateTracker","onlineStateHandler","watchStreamFailures","onlineStateTimer","shouldWarnClientIsOffline","handleWatchStreamStart","setAndBroadcast","OnlineStateTimeout","logClientOfflineWarningIfNecessary","handleWatchStreamFailure","Online","clearOnlineStateTimer","newState","RemoteStore","pendingWrites","lastBatchSeen","accumulatedWatchChanges","watchStream","writeStream","onlineStateTracker","enableNetwork","isNetworkEnabled","shouldStartWatchStream","startWatchStream","disableNetwork","disableNetworkInternal","cleanUpWatchStreamState","cleanUpWriteStreamState","sendWatchRequest","sendUnwatchRequest","recordPendingTargetRequest","onWatchStreamOpen","onWatchStreamClose","onWatchStreamChange","handleTargetError","handleWatchChangeBatch","aggregator","deletedDoc","trackedRemote","newQueryData","requestQueryData","canWriteMutations","outstandingWrites","shouldStartWriteStream","startWriteStream","handshakeComplete","onWriteStreamOpen","onWriteStreamClose","onWriteHandshakeComplete","handleWriteError","handleHandshakeError","FirestoreClient","usePersistence","initializationDone","persistenceResult","initialized","setUserChangeListener","initializePersistence","initializeRest","startIndexedDbPersistence","canFallback","startMemoryPersistence","DOMException","storagePrefix","eventMgr","removeUserChangeListener","purgePersistenceWithDataLoss","getDocumentFromLocalCache","getDocumentsFromLocalCache","AsyncObserver","muted","scheduleEvent","mute","eventHandler","otherUser","GOOGLE_CREDENTIALS","FIRST_PARTY","OAuthToken","Authorization","EmptyCredentialsProvider","userListener","forceRefresh","FirebaseCredentialsProvider","tokenListener","userCounter","newUser","getUser","initialUserCounter","tokenData","currentUid","FirstPartyToken","sessionIndex","X-Goog-AuthUser","FirstPartyCredentialsProvider","isPartialObserver","implementsAnyMethods$1","UserDataSource","FieldValueImpl","methodName","DeleteFieldValueImpl","serverTimestamp","ServerTimestampFieldValueImpl","_arrayUnion","ArrayUnionFieldValueImpl","_arrayRemove","ArrayRemoveFieldValueImpl","_elements","PublicFieldValue","RESERVED_FIELD_REGEX","ParsedSetData","ParsedUpdateData","isWrite","dataSource","MergeSet","Update","Argument","ParseContext","arrayElement","validatePath","childContextForField","validatePathSegment","childContextForFieldPath","childContextForArray","createError","fieldDescription","DocumentKeyReference","UserDataConverter","preConverter","parseSetData","validatePlainObject","updateData","parseData","parseMergeData","validatedFieldPaths","fieldPaths_1","stringOrFieldPath","fieldPathFromDotSeparatedString","parseUpdateData","fieldMaskPaths","childContext","runPreConverter","parsedValue","mask","parseUpdateVarargs","moreFieldsAndValues","fieldPathFromArgument","value_1","parseQueryValue","parsed","looksLikeJsonObject","parseObject","parseSentinelFieldValue","parseArray","parseScalarValue","entryIndex","array_1","entry","parsedEntry","parsedElements","parseArrayTransformElements","arrayUnion","arrayRemove","isSafeInteger","fromDotSeparatedString","DEFAULT_HOST","DEFAULT_SSL","DEFAULT_TIMESTAMPS_IN_SNAPSHOTS","FirestoreSettings","FirestoreConfig","Firestore","databaseIdOrApp","_queue","_firestoreClient","firebaseApp","databaseIdFromApp","external_1","_config","_databaseId","settingsLiteral","newSettings","makeCredentialsProvider","ensureClientConfigured","enablePersistence","configureClient","_dataConverter","DocumentReference","thisDb","otherDb","firestore","collection","pathString","CollectionReference","forPath","Transaction$1","WriteBatch","level","_areTimestampsInSnapshotsEnabled","_firestore","_transaction","documentRef","validateReference","DocumentSnapshot","validateSetOptions","merge","mergeFields","fieldOrUpdateData","_mutations","_committed","verifyNotCommitted","onSnapshot","currArg","internalOptions","onSnapshotInternal","errHandler","asyncObserver","internalListener","getViaSnapshotListener","SnapshotMetadata","_document","_fromCache","validateSnapshotOptions","convertObject","convertValue","convertArray","QueryDocumentSnapshot","Query$1","Query$$1","_query","opStr","relationOp","validateNewFilter","directionStr","validateNewOrderBy","docOrField","boundFromDocOrFields","startAfter","endBefore","boundFromDocument","allFields","boundFromFields","rawValue","wrapped","QuerySnapshot","firestoreClient","existingField","validateOrderByAndInequalityMatch","inequality","_originalQuery","_snapshot","_cachedChanges","_cachedChangesIncludeMetadataChanges","convertToDocumentImpl","lastDoc_1","oldIndex","newIndex","indexTracker_1","resultChangeType","changesFromSnapshot","throwDocChangesMethodError","parentPath","docRef","PublicFirestore","PublicTransaction","PublicWriteBatch","PublicDocumentReference","PublicDocumentSnapshot","PublicQueryDocumentSnapshot","PublicQuery","PublicQuerySnapshot","PublicCollectionReference","firestoreNamespace","registerFirestore","errorCodeMap","HttpsErrorImpl","details","ContextProvider","getInstanceIdToken","messaging","getContext","instanceIdToken","mapValues","Serializer","region_","contextProvider","_url","httpsCallable","postJSON","responseData","bodyJSON","codeForHTTPStatus","errorJSON","_errorForResponse","FUNCTIONS_TYPE","region","registerFunctions","Functions","MessageParameter","MessageType","ERROR_CODES","AVAILABLE_IN_WINDOW","AVAILABLE_IN_SW","SHOULD_BE_INHERITED","BAD_SENDER_ID","INCORRECT_GCM_SENDER_ID","PERMISSION_DEFAULT","PERMISSION_BLOCKED","UNSUPPORTED_BROWSER","NOTIFICATIONS_BLOCKED","FAILED_DEFAULT_REGISTRATION","SW_REGISTRATION_EXPECTED","GET_SUBSCRIPTION_FAILED","INVALID_SAVED_TOKEN","SW_REG_REDUNDANT","TOKEN_SUBSCRIBE_FAILED","TOKEN_SUBSCRIBE_NO_TOKEN","TOKEN_SUBSCRIBE_NO_PUSH_SET","TOKEN_UNSUBSCRIBE_FAILED","TOKEN_UPDATE_FAILED","TOKEN_UPDATE_NO_TOKEN","USE_SW_BEFORE_GET_TOKEN","INVALID_DELETE_TOKEN","DELETE_TOKEN_NOT_FOUND","DELETE_SCOPE_NOT_FOUND","BG_HANDLER_FUNCTION_EXPECTED","NO_WINDOW_CLIENT_TO_MSG","UNABLE_TO_RESUBSCRIBE","NO_FCM_TOKEN_FOR_RESUBSCRIBE","FAILED_TO_DELETE_TOKEN","NO_SW_IN_REG","BAD_SCOPE","BAD_VAPID_KEY","BAD_SUBSCRIPTION","BAD_TOKEN","BAD_PUSH_SET","FAILED_DELETE_VAPID_KEY","INVALID_PUBLIC_VAPID_KEY","USE_PUBLIC_KEY_BEFORE_GET_TOKEN","PUBLIC_KEY_DECRYPTION_FAILED","ERROR_MAP","errorFactory","__WEBPACK_IMPORTED_MODULE_0__firebase_util__","DEFAULT_PUBLIC_VAPID_KEY","ENDPOINT","isArrayBufferEqual","viewA","DataView","viewB","getUint8","arrayBufferToBase64","arrayBuffer","uint8Version","IidModel","senderId","subscription","publicVapidKey","__WEBPACK_IMPORTED_MODULE_1_tslib__","p256dh","fcmSubscribeBody","applicationPubKey","subscribeOptions","getKey","pushSet","updateToken","fcmToken","fcmPushSet","fcmUpdateBody","updateOptions","deleteToken","fcmUnsubscribeBody","unsubscribeOptions","base64ToArrayBuffer","base64String","rawData","outputArray","OLD_DB_NAME","OLD_OBJECT_STORE_NAME","cleanV1","iidModel","openCursorRequest","tokenDetails","fcmSenderId","handleDb","DbInterface","dbPromise","getIndex","closeDatabase","runRequest","getDb","objectStoreName","promisify","dbVersion","onDbUpgrade","TokenDetailsModel","cursorRequest_1","createTime","vapidKey","getTokenDetailsFromToken","validateInputs","getTokenDetailsFromSWScope","swScope","saveTokenDetails","VapidDetailsModel","getVapidFromSWScope","saveVapidDetails","deleteVapidDetails","SENDER_ID_OPTION_NAME","BaseController","messagingSenderId","tokenDetailsModel","vapidDetailsModel","currentPermission","swReg","pushSubscription","getNotificationPermission_","getSWRegistration_","getPublicVapidKey_","getPushSubscription","scope","manageExistingToken","getNewToken","isEndpointEqual","isAuthEqual","isP256dhEqual","isTokenStillValid","deleteTokenFromDB","updatedToken","allDetails","e_1","registration","pushManager","getSubscription","swRegistration","userVisibleOnly","applicationServerKey","requestPermission","useServiceWorker","usePublicVapidKey","b64PublicKey","onTokenRefresh","setBackgroundMessageHandler","Notification","permission","getTokenDetailsModel","getVapidDetailsModel","getIidModel","SwController","bgMessageHandler","onPush","onSubChange","onNotificationClick","waitUntil","onPush_","onSubChange_","onNotificationClick_","msgPayload","notificationDetails","notificationTitle","reg","actions","maxActions","hasVisibleClients_","sendMessageToWindowClients_","getNotificationData_","showNotification","err_1","err_2","clickAction","windowClient","internalMsg","notification","click_action","getWindowClient_","clients","openWindow","createNewMsg","NOTIFICATION_CLICKED","attemptToMessageClient_","notificationInformation","parsedURL","clientList","suitableClient","URL","getClientList","PUSH_MSG_RECEIVED","vapidKeyFromDatabase","matchAll","includeUncontrolled","msgType","TYPE_OF_MSG","DATA","WindowController","registrationToUse","publicVapidKeyToUse","manifestCheckPromise","messageObserver","tokenRefreshObserver","onMessageInternal","onTokenRefreshInternal","setupSWMessageListener_","manifestTag","manifestContent","gcm_sender_id","manifestCheck","permissionResult","ServiceWorkerRegistration","publicKey","parsedKey","waitForRegistrationToActivate_","serviceWorker","installing","stateChangeListener","browserErrorMessage","workerPageMessage","pushMessage","registerMessaging","isSupported","PushSubscription","__WEBPACK_IMPORTED_MODULE_2__firebase_app___default","defaultLogLevel","INFO","defaultLogHandler","logType","toISOString","VERBOSE","WARN","_logLevel","_logHandler","inst","createSnapshot","extractRefs","idDescriptor","tot","fill","isTimestamp","walkSet","unsubscribeAll","subscribeToRefs","refKeys","refKey","maxRefDepth","resolvedCount","totalToResolve","validResolves","ref$1","updateDataFromDocumentSnapshot","subscribeToDocument","walkGet","isResolved","originalResolve","arraySubs","added","expectedItems","validDocs","dict","bindCollection","argFn","bindDocument","_firestoreUnbinds","strategies","$firestoreRefs","$bind","beforeDestroy","subKey","$unbind","DOMStorageWrapper","domStorage_","prefix_","prefixedName_","storedVal","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","logger$1","firstLog_","enableLogging","logger_","persistent","logWrapper","fatal","isInvalidJSONNumber","MIN_NAME","MAX_NAME","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","splitStringBySize","segsize","dataSegs","each","doubleToIEEE754String","ln","bits","LN2","hexByteString","hexByte","INTEGER_REGEXP_","intVal","exceptionGuard","beingCrawled","setTimeoutNonBlocking","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","toUrlEncodedString","begin","pieces","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","comparePaths","leftKeys","rightKeys","equals","ValidationPath","errorPrefix_","parts_","byteLength_","checkValid_","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","LONG_POLLING","RepoInfo","secure","webSocketOnly","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","connURL","pairs","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","parsedUrl","parseURL","subdomain","scheme","repoInfo","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodePath","queryParams","queryString","kv","decodeQuery","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","validateFirebaseData","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateWritablePath","validateUrl","isValidRootPathString","OnDisconnect","repo_","onDisconnectCancel","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","nextPushId","duplicateTime","timeStampChars","NamedNode","Wrap","Index","getCompare","indexedValueChanged","oldNode","oldWrapped","newWrapped","minPost","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","getChild","hasChild","getPredecessorChildName","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat",".value",".priority","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","isReverse_","resultGenerator_","nodeStack_","min_","fixUp_","removeMin_","isRed_","moveRedLeft_","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","checkMaxDepth_","check_","comparator_","root_","getPredecessorKey","rightParent","resultGenerator","LOG_2","Base12Num","current_","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","namedNode","base12","buildPennant","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","newIndexMap","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","MAX","setMaxNode$1","USE_HINZE","nodeFromJSON$1","node_1","jsonObj_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","OperationType","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","aChild","bChild","DataSnapshot","node_","index_","exportVal","childPathString","childRef","getRef","DataEvent","eventRegistration","prevName","getPath","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","cancelCallback_","context_","respondsTo","getQueryParams","snapshotNode","eventData","cancelCB_1","cb_1","createCancelEvent","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","thisKey","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasAnchoredLimit","validateNoPreviousOrderByCall_","cancelCallbackOrContext","getCancelAndContextArgs_","onValueEvent","onChildEvent","cancelCallback","addEventCallbackForQuery","removeEventCallbackForQuery","cancelOrContext","firstCall","onceCallback","limitToFirst","limitToLast","orderByChild","newParams","orderByKey","orderByPriority","orderByValue","equalTo","queryObject","getQueryObject","queryIdentifier","sameRepo","samePath","sameQueryIdentifier","CountedSet","SparseSnapshotTree","childKey","remember","forget","self_1","forEachTree","prefixPath","func","resolveDeferredValue","serverValues","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","Empty","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","trackChildChange","updateFullNode","newSnap","newPriority","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldType","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","calcIndexedSlice","ProcessorResult","viewCache","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","aWrapped","bWrapped","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views_","optCompleteServerCache","events_1","serverCacheComplete","eventCacheComplete","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","queryKey","queryKeyForTag_","parseQueryKey_","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","childViews","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","StatsReporter","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","closeAfter","responseNum","handleResponse","requestNum","toProcess","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","called_1","wrappedFn_1","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","sendNewPolls","pN","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","Windows","UI","markConnectionHealthy","shutdown_","myDisconnFrame","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","dframe","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","iframe","contentDocument","alive","myID","disconn","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","rstate","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","User-Agent","mySock","onopen","onclose","handleIncomingFrame","isOldAndroid","oldAndroidMatch","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","transportManager_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","refreshAuthToken","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","token_1","authMethod","requestData","cred","onAuthRevoked_","sendUnlisten_","queryObj","sendOnDisconnect_","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","interrupt","serverTimeOffset","normalizedPathString","statusCode","explanation","clientName","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","queryStringParameters","authTokenData","Repo","forceRestClient","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","generateServerValues","isMerge","taggedChildren","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newNodeUnresolved","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","changedKey","changedValue","writeId_1","resolvedTree","resolveDeferredValueTree","showDelta","longestName","currentValue","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","validateRootPathString","getRoot","databaseProp","transactionUpdate","applyLocally","bool","validateBoolean","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","valueCallback","watchRef","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","abortTransactionsOnNode_","lastSent","_staticInstance","RepoManager","repos_","useRestClient_","dbUrl","databaseFromApp","createRepo","deleteRepo","appRepos","DatabaseInternals","checkDeleted_","apiName","goOffline","goOnline","ServerValue","TIMESTAMP",".sv","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","listens","firebaseRef","registerDatabase","support","searchParams","iterable","formData","viewClasses","isDataView","isPrototypeOf","isArrayBufferView","isView","normalizeName","normalizeValue","iteratorFor","_bodyInit","Body","Response","redirectStatuses","rawHeaders","line","responseURL","polyfill","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","bufferClone","_initBody","_bodyText","_bodyBlob","_bodyFormData","URLSearchParams","_bodyArrayBuffer","readAsText","readArrayBufferAsText","upcased","referrer","form","bodyInit"],"mappings":"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","file":"static/js/vendor.dd4a3008b8e51c8b8f33.js","sourcesContent":["/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-router/dist/vue-router.esm.js\n// module id = /ocq\n// module chunks = 0","/*!\n * Vue.js v2.5.16\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.16';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n}\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n}\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n}\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n]\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n}\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    /* istanbul ignore if */\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n}\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","import firebase from '@firebase/app';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain and scheme for API calls.\r\n */\r\nvar domainBase = 'https://firebasestorage.googleapis.com';\r\n/**\r\n * Domain and scheme for object downloads.\r\n */\r\nvar downloadBase = 'https://firebasestorage.googleapis.com';\r\n/**\r\n * Base URL for non-upload calls to the API.\r\n */\r\nvar apiBaseUrl = '/v0';\r\n/**\r\n * Base URL for upload calls to the API.\r\n */\r\nvar apiUploadBaseUrl = '/v0';\r\nvar configOption = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n */\r\nvar defaultMaxOperationRetryTime = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n */\r\nvar defaultMaxUploadRetryTime = 10 * 60 * 100;\r\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\r\nvar minSafeInteger = -9007199254740991;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            return this.message_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw 'Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].';\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, opt_contentType) {\r\n        this.data = data;\r\n        this.contentType = opt_contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, string) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(string));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, string));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(string), dataURLContentType_(string));\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(string) {\r\n    var b = [];\r\n    for (var i = 0; i < string.length; i++) {\r\n        var c = string.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) == 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < string.length - 1 &&\r\n                        (string.charCodeAt(i + 1) & 64512) == 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = string.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) == 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(string) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(string);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, string) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = string.indexOf('-') !== -1;\r\n            var hasUnder = string.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = string.indexOf('+') !== -1;\r\n            var hasSlash = string.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            string = string.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(string);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(string) {\r\n    var parts = new DataURLParts(string);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(string) {\r\n    var parts = new DataURLParts(string);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains methods for working with objects.\r\n */\r\nfunction contains(obj, prop) {\r\n    return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\nfunction forEach(obj, f) {\r\n    for (var key in obj) {\r\n        if (contains(obj, key)) {\r\n            f(key, obj[key]);\r\n        }\r\n    }\r\n}\r\nfunction clone(obj) {\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var c = {};\r\n    forEach(obj, function (key, val) {\r\n        c[key] = val;\r\n    });\r\n    return c;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Implements the promise abstraction interface for external\r\n * (public SDK) packaging, which just passes through to the firebase-app impl.\r\n */\r\n/**\r\n * @template T\r\n * @param {function((function(T): void),\r\n *                  (function(!Error): void))} resolver\r\n */\r\nfunction make(resolver) {\r\n    return new Promise(resolver);\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction resolve(value) {\r\n    return Promise.resolve(value);\r\n}\r\nfunction reject(error) {\r\n    return Promise.reject(error);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = make(function (resolve$$1, reject$$1) {\r\n            _this.xhr_.addEventListener('abort', function (event) {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve$$1(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function (event) {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve$$1(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function (event) {\r\n                resolve$$1(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {\r\n        var _this = this;\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(opt_headers)) {\r\n            var headers = opt_headers;\r\n            forEach(headers, function (key, val) {\r\n                _this.xhr_.setRequestHeader(key, val.toString());\r\n            });\r\n        }\r\n        if (isDef(opt_body)) {\r\n            this.xhr_.send(opt_body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var path = '(/([^?#]*).*)?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var httpRegex = new RegExp('^https?://firebasestorage\\\\.googleapis\\\\.com/' +\r\n            version +\r\n            '/b/' +\r\n            bucketDomain +\r\n            '/o' +\r\n            path, 'i');\r\n        var httpIndices = { bucket: 1, path: 3 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            { regex: httpRegex, indices: httpIndices, postModify: httpModify }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length == 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) {\r\n        return component.length > 0;\r\n    })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeNormalUrl(urlPart) {\r\n    return domainBase + apiBaseUrl + urlPart;\r\n}\r\nfunction makeDownloadUrl(urlPart) {\r\n    return downloadBase + apiBaseUrl + urlPart;\r\n}\r\nfunction makeUploadUrl(urlPart) {\r\n    return domainBase + apiUploadBaseUrl + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    forEach(params, function (key, val) {\r\n        var nextPart = encode(key) + '=' + encode(val);\r\n        queryPart = queryPart + nextPart + '&';\r\n    });\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, opt_local, opt_writable, opt_xform) {\r\n        this.server = server;\r\n        this.local = opt_local || server;\r\n        this.writable = !!opt_writable;\r\n        this.xform = opt_xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    var valid = isString(fullPath);\r\n    if (!valid || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        fullPath = fullPath;\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(metadata, size) {\r\n        if (isDef(size)) {\r\n            return +size;\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, authWrapper) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return authWrapper.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(authWrapper, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, authWrapper);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(authWrapper, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(authWrapper, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeDownloadUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    var validType = p && isObject(p);\r\n    if (!validType) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        var val = p[key];\r\n        if (key === 'customMetadata') {\r\n            if (!isObject(val)) {\r\n                throw 'Expected object for \\'customMetadata\\' mapping.';\r\n            }\r\n        }\r\n        else {\r\n            if (isNonNullObject(val)) {\r\n                throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, opt_optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!opt_optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(opt_validator, opt_optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var validator;\r\n    if (opt_validator) {\r\n        validator = and_(stringValidator, opt_validator);\r\n    }\r\n    else {\r\n        validator = stringValidator;\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(opt_optional) {\r\n    return new ArgSpec(metadataValidator, opt_optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(opt_validator, opt_optional) {\r\n    function validator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (opt_validator !== undefined && opt_validator !== null) {\r\n            opt_validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\r\nfunction nullFunctionSpec(opt_optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, opt_optional);\r\n}\n\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param var_args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < var_args.length; i++) {\r\n            bb.append(var_args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(var_args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, opt_elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (opt_elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (opt_elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = var_args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = var_args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns true if the object is contained in the array (compared with ===).\r\n * @template T\r\n */\r\nfunction contains$1(array, elem) {\r\n    return array.indexOf(elem) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of the array or array-like object (e.g. arguments).\r\n * @template T\r\n */\r\nfunction clone$1(arraylike) {\r\n    return Array.prototype.slice.call(arraylike);\r\n}\r\n/**\r\n * Removes the given element from the given array, if it is contained.\r\n * Directly modifies the passed-in array.\r\n * @template T\r\n */\r\nfunction remove(array, elem) {\r\n    var i = array.indexOf(elem);\r\n    if (i !== -1) {\r\n        array.splice(i, 1);\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(authWrapper, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeNormalUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    function handler(xhr, text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, opt_metadata) {\r\n    var metadata = clone(opt_metadata);\r\n    metadata['fullPath'] = location.path;\r\n    metadata['size'] = blob.size();\r\n    if (!metadata['contentType']) {\r\n        metadata['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadata;\r\n}\r\nfunction multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str =\r\n                str +\r\n                    Math.random()\r\n                        .toString()\r\n                        .slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\r\n    var metadataString = toResourceString(metadata, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata['fullPath'] };\r\n    var url = makeUploadUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, opt_allowed) {\r\n    var status;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowed = opt_allowed || ['active'];\r\n    handlerCheck(contains$1(allowed, status));\r\n    return status;\r\n}\r\nfunction createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadata = metadataForUpload_(location, blob, opt_metadata);\r\n    var urlParams = { name: metadata['fullPath'] };\r\n    var url = makeUploadUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadata['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadata, mappings);\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    function handler(xhr, text) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr, text) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        var size = parseInt(sizeString, 10);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param opt_status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status = new ResumableUploadStatus(0, 0);\r\n    if (opt_status) {\r\n        status.current = opt_status.current;\r\n        status.total = opt_status.total;\r\n    }\r\n    else {\r\n        status.current = 0;\r\n        status.total = blob.size();\r\n    }\r\n    if (blob.size() !== status.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status.total - status.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = opt_progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, opt_error, opt_complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(opt_error) ||\r\n            isDef(opt_complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = opt_error || null;\r\n            this.complete = opt_complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        resolve(true).then(function () {\r\n            f.apply(null, argsToForward);\r\n        });\r\n    };\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        var _this = this;\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.authWrapper_ = authWrapper;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = make(function (resolve$$1, reject$$1) {\r\n            _this.resolve_ = resolve$$1;\r\n            _this.reject_ = reject$$1;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded, total) {\r\n            _this.updateProgress_(sizeBefore + loaded);\r\n        };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        this.authWrapper_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        if (nextOrObserver === void 0) { nextOrObserver = undefined; }\r\n        if (error === void 0) { error = undefined; }\r\n        if (completed === void 0) { completed = undefined; }\r\n        function typeValidator(_p) {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, opt_complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        remove(this.observers_, observer);\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = clone$1(this.observers_);\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next !== null) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete !== null) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error !== null) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error !== null) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(authWrapper, location) {\r\n        this.authWrapper = authWrapper;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (authWrapper, location) {\r\n        return new Reference(authWrapper, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.authWrapper, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.authWrapper.service();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param string The string to upload.\r\n     * @param opt_format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (string, format, opt_metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [\r\n            stringSpec(),\r\n            stringSpec(formatValidator, true),\r\n            metadataSpec(true)\r\n        ], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, string);\r\n        var metadata = clone(opt_metadata);\r\n        if (!isDef(metadata['contentType']) && isDef(data.contentType)) {\r\n            metadata['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadata);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(self.authWrapper, self.location);\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(self.authWrapper, self.location, self.mappings());\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(self.authWrapper, self.location, metadata, self.mappings());\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getDownloadUrl(self.authWrapper, self.location, self.mappings());\r\n            return self.authWrapper\r\n                .makeRequest(requestInfo, authToken)\r\n                .getPromise()\r\n                .then(function (url) {\r\n                if (url === null) {\r\n                    throw noDownloadURL();\r\n                }\r\n                return url;\r\n            });\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (appDelete) {\r\n        if (appDelete === void 0) { appDelete = false; }\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar RequestMap = /** @class */ (function () {\r\n    function RequestMap() {\r\n        this.map_ = {};\r\n        this.id_ = minSafeInteger;\r\n    }\r\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     * @param r The request to register.\r\n     */\r\n    RequestMap.prototype.addRequest = function (r) {\r\n        var id = this.id_;\r\n        this.id_++;\r\n        this.map_[id] = r;\r\n        var self = this;\r\n        function unmap() {\r\n            delete self.map_[id];\r\n        }\r\n        r.getPromise().then(unmap, unmap);\r\n    };\r\n    /**\r\n     * Cancels all registered requests.\r\n     */\r\n    RequestMap.prototype.clear = function () {\r\n        forEach(this.map_, function (key, val) {\r\n            if (val) {\r\n                val.cancel(true);\r\n            }\r\n        });\r\n        this.map_ = {};\r\n    };\r\n    return RequestMap;\r\n}());\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\r\nvar AuthWrapper = /** @class */ (function () {\r\n    function AuthWrapper(app, maker, requestMaker, service, pool) {\r\n        this.bucket_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        if (this.app_ !== null) {\r\n            var options = this.app_.options;\r\n            if (isDef(options)) {\r\n                this.bucket_ = AuthWrapper.extractBucket_(options);\r\n            }\r\n        }\r\n        this.storageRefMaker_ = maker;\r\n        this.requestMaker_ = requestMaker;\r\n        this.pool_ = pool;\r\n        this.service_ = service;\r\n        this.maxOperationRetryTime_ = defaultMaxOperationRetryTime;\r\n        this.maxUploadRetryTime_ = defaultMaxUploadRetryTime;\r\n        this.requestMap_ = new RequestMap();\r\n    }\r\n    AuthWrapper.extractBucket_ = function (config) {\r\n        var bucketString = config[configOption] || null;\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        var loc = Location.makeFromBucketSpec(bucketString);\r\n        return loc.bucket;\r\n    };\r\n    AuthWrapper.prototype.getAuthToken = function () {\r\n        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs\r\n        // (b/28673818).\r\n        if (this.app_ !== null &&\r\n            isDef(this.app_.INTERNAL) &&\r\n            isDef(this.app_.INTERNAL.getToken)) {\r\n            return this.app_.INTERNAL.getToken().then(function (response) {\r\n                if (response !== null) {\r\n                    return response.accessToken;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }, function (_error) {\r\n                return null;\r\n            });\r\n        }\r\n        else {\r\n            return resolve(null);\r\n        }\r\n    };\r\n    AuthWrapper.prototype.bucket = function () {\r\n        if (this.deleted_) {\r\n            throw appDeleted();\r\n        }\r\n        else {\r\n            return this.bucket_;\r\n        }\r\n    };\r\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\r\n    AuthWrapper.prototype.service = function () {\r\n        return this.service_;\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\r\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\r\n        return this.storageRefMaker_(this, loc);\r\n    };\r\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\r\n        if (!this.deleted_) {\r\n            var request = this.requestMaker_(requestInfo, authToken, this.pool_);\r\n            this.requestMap_.addRequest(request);\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    AuthWrapper.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requestMap_.clear();\r\n    };\r\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\r\n        return this.maxUploadRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\r\n        return this.maxOperationRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    return AuthWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, callback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, arguments);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.apply(null, arguments);\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.apply(null, arguments);\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        var self = this;\r\n        this.promise_ = make(function (resolve$$1, reject$$1) {\r\n            self.resolve_ = resolve$$1;\r\n            self.reject_ = reject$$1;\r\n            self.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled$$1) {\r\n            if (canceled$$1) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = contains$1(self.successCodes_, status);\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve$$1 = self.resolve_;\r\n            var reject$$1 = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve$$1(result);\r\n                    }\r\n                    else {\r\n                        resolve$$1();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject$$1(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject$$1(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject$$1(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_\r\n                            ? appDeleted()\r\n                            : canceled();\r\n                        reject$$1(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject$$1(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = contains$1(extraRetryCodes, status);\r\n        var isRequestSpecificRetryCode = contains$1(this.additionalRetryCodes_, status);\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!opt_canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var number = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = clone(requestInfo.headers);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar Service = /** @class */ (function () {\r\n    function Service(app, pool, url) {\r\n        this.bucket_ = null;\r\n        function maker(authWrapper, loc) {\r\n            return new Reference(authWrapper, loc);\r\n        }\r\n        this.authWrapper_ = new AuthWrapper(app, maker, makeRequest, this, pool);\r\n        this.app_ = app;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            var authWrapperBucket = this.authWrapper_.bucket();\r\n            if (authWrapperBucket != null) {\r\n                this.bucket_ = new Location(authWrapperBucket, '');\r\n            }\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    Service.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this.authWrapper_, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    Service.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this.authWrapper_, url);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxUploadRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxUploadRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxOperationRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxOperationRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Service;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.authWrapper_.deleteApp();\r\n        return resolve(undefined);\r\n    };\r\n    return ServiceInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(app, unused, opt_url) {\r\n    return new Service(app, new XhrIoPool(), opt_url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: Service,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined, \r\n    // Allow multiple storage instances per app.\r\n    true);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/storage/dist/index.esm.js\n// module id = D8I6\n// module chunks = 0","import 'whatwg-fetch';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\nvar SRC = _uid('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n_core.inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === _global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    _hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    _hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function (key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function (original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function (original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\n\n\n\nvar _arrayMethods = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () { forced$1 = false; });\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function (it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\n\nvar _stringContext = function (that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\nvar _stringRepeat = function repeat(count) {\n  var str = String(_defined(this));\n  var res = '';\n  var n = _toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n_export(_export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: _stringRepeat\n});\n\nvar repeat = _core.String.repeat;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/polyfill/dist/index.esm.js\n// module id = DFDv\n// module chunks = 0","(function() {var g,goog=goog||{},k=this;function l(a){return\"string\"==typeof a}function n(a,b){a=a.split(\".\");b=b||k;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b}function aa(){}\nfunction ba(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b}function p(a){return\"array\"==ba(a)}function ca(a){var b=ba(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function da(a){return\"function\"==ba(a)}function ea(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}var q=\"closure_uid_\"+(1E9*Math.random()>>>0),fa=0;function ha(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction ia(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function r(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?r=ha:r=ia;return r.apply(null,arguments)}\nfunction ja(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}}var t=Date.now||function(){return+new Date};function u(a,b){function c(){}c.prototype=b.prototype;a.H=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Ib=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};function ka(a){if(Error.captureStackTrace)Error.captureStackTrace(this,ka);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))}u(ka,Error);ka.prototype.name=\"CustomError\";function la(a,b){a=a.split(\"%s\");for(var c=\"\",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:\"%s\");ka.call(this,c+a[d])}u(la,ka);la.prototype.name=\"AssertionError\";function ma(a,b){throw new la(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1));};function w(){0!=na&&(pa[this[q]||(this[q]=++fa)]=this);this.i=this.i;this.m=this.m}var na=0,pa={};w.prototype.i=!1;w.prototype.$=function(){if(!this.i&&(this.i=!0,this.w(),0!=na)){var a=this[q]||(this[q]=++fa);if(0!=na&&this.m&&0<this.m.length)throw Error(this+\" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.\");delete pa[a]}};w.prototype.w=function(){if(this.m)for(;this.m.length;)this.m.shift()()};var qa=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(l(a))return l(b)&&1==b.length?a.indexOf(b,0):-1;for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},ra=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=l(a)?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};\nfunction sa(a){a:{var b=ta;for(var c=a.length,d=l(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:l(a)?a.charAt(b):a[b]}function ua(a){if(!p(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0}function va(a){return Array.prototype.concat.apply([],arguments)}function wa(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};function xa(a){return/^[\\s\\xa0]*$/.test(a)}var ya=String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1]};function za(a,b){return a<b?-1:a>b?1:0};var x;a:{var Aa=k.navigator;if(Aa){var Ba=Aa.userAgent;if(Ba){x=Ba;break a}}x=\"\"}function y(a){return-1!=x.indexOf(a)};function Ca(a,b,c){for(var d in a)b.call(c,a[d],d,a)}function Da(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b}function Ea(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b}function Fa(a){var b={},c;for(c in a)b[c]=a[c];return b}var Ga=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\nfunction Ha(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<Ga.length;f++)c=Ga[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function Ia(a){Ia[\" \"](a);return a}Ia[\" \"]=aa;function Ja(a,b){var c=Ka;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var La=y(\"Opera\"),z=y(\"Trident\")||y(\"MSIE\"),Ma=y(\"Edge\"),Na=Ma||z,Oa=y(\"Gecko\")&&!(-1!=x.toLowerCase().indexOf(\"webkit\")&&!y(\"Edge\"))&&!(y(\"Trident\")||y(\"MSIE\"))&&!y(\"Edge\"),Pa=-1!=x.toLowerCase().indexOf(\"webkit\")&&!y(\"Edge\");function Qa(){var a=k.document;return a?a.documentMode:void 0}var Ra;\na:{var Sa=\"\",Ta=function(){var a=x;if(Oa)return/rv:([^\\);]+)(\\)|;)/.exec(a);if(Ma)return/Edge\\/([\\d\\.]+)/.exec(a);if(z)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(Pa)return/WebKit\\/(\\S+)/.exec(a);if(La)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();Ta&&(Sa=Ta?Ta[1]:\"\");if(z){var Ua=Qa();if(null!=Ua&&Ua>parseFloat(Sa)){Ra=String(Ua);break a}}Ra=Sa}var Ka={};\nfunction Va(a){return Ja(a,function(){for(var b=0,c=ya(String(Ra)).split(\".\"),d=ya(String(a)).split(\".\"),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var h=c[f]||\"\",m=d[f]||\"\";do{h=/(\\d*)(\\D*)(.*)/.exec(h)||[\"\",\"\",\"\",\"\"];m=/(\\d*)(\\D*)(.*)/.exec(m)||[\"\",\"\",\"\",\"\"];if(0==h[0].length&&0==m[0].length)break;b=za(0==h[1].length?0:parseInt(h[1],10),0==m[1].length?0:parseInt(m[1],10))||za(0==h[2].length,0==m[2].length)||za(h[2],m[2]);h=h[3];m=m[3]}while(0==b)}return 0<=b})}var Wa;var Xa=k.document;\nWa=Xa&&z?Qa()||(\"CSS1Compat\"==Xa.compatMode?parseInt(Ra,10):5):void 0;var Ya=Object.freeze||function(a){return a};var Za=!z||9<=Number(Wa),$a=z&&!Va(\"9\"),ab=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});k.addEventListener(\"test\",aa,b);k.removeEventListener(\"test\",aa,b);return a}();function A(a,b){this.type=a;this.a=this.target=b;this.Ra=!0}A.prototype.b=function(){this.Ra=!1};function bb(a,b){A.call(this,a?a.type:\"\");this.relatedTarget=this.a=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType=\"\";this.c=null;if(a){var c=this.type=a.type,d=a.changedTouches?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.a=b;if(b=a.relatedTarget){if(Oa){a:{try{Ia(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else\"mouseover\"==c?b=\na.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;null===d?(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0):(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=\na.metaKey;this.pointerId=a.pointerId||0;this.pointerType=l(a.pointerType)?a.pointerType:cb[a.pointerType]||\"\";this.c=a;a.defaultPrevented&&this.b()}}u(bb,A);var cb=Ya({2:\"touch\",3:\"pen\",4:\"mouse\"});bb.prototype.b=function(){bb.H.b.call(this);var a=this.c;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,$a)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};var db=\"closure_listenable_\"+(1E6*Math.random()|0),eb=0;function fb(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.ga=e;this.key=++eb;this.Z=this.ba=!1}function gb(a){a.Z=!0;a.listener=null;a.proxy=null;a.src=null;a.ga=null};function hb(a){this.src=a;this.a={};this.b=0}hb.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.a[f];a||(a=this.a[f]=[],this.b++);var h=ib(a,b,d,e);-1<h?(b=a[h],c||(b.ba=!1)):(b=new fb(b,this.src,f,!!d,e),b.ba=c,a.push(b));return b};function jb(a,b){var c=b.type;if(c in a.a){var d=a.a[c],e=qa(d,b),f;(f=0<=e)&&Array.prototype.splice.call(d,e,1);f&&(gb(b),0==a.a[c].length&&(delete a.a[c],a.b--))}}\nfunction ib(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.Z&&f.listener==b&&f.capture==!!c&&f.ga==d)return e}return-1};var kb=\"closure_lm_\"+(1E6*Math.random()|0),lb={},mb=0;function nb(a,b,c,d,e){if(d&&d.once)return ob(a,b,c,d,e);if(p(b)){for(var f=0;f<b.length;f++)nb(a,b[f],c,d,e);return null}c=pb(c);return a&&a[db]?a.Ia(b,c,ea(d)?!!d.capture:!!d,e):qb(a,b,c,!1,d,e)}\nfunction qb(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var h=ea(e)?!!e.capture:!!e,m=rb(a);m||(a[kb]=m=new hb(a));c=m.add(b,c,d,h,f);if(c.proxy)return c;d=sb();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)ab||(e=h),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(tb(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");mb++;return c}\nfunction sb(){var a=ub,b=Za?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function ob(a,b,c,d,e){if(p(b)){for(var f=0;f<b.length;f++)ob(a,b[f],c,d,e);return null}c=pb(c);return a&&a[db]?a.Ja(b,c,ea(d)?!!d.capture:!!d,e):qb(a,b,c,!0,d,e)}\nfunction vb(a,b,c,d,e){if(p(b))for(var f=0;f<b.length;f++)vb(a,b[f],c,d,e);else(d=ea(d)?!!d.capture:!!d,c=pb(c),a&&a[db])?(a=a.f,b=String(b).toString(),b in a.a&&(f=a.a[b],c=ib(f,c,d,e),-1<c&&(gb(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.a[b],a.b--)))):a&&(a=rb(a))&&(b=a.a[b.toString()],a=-1,b&&(a=ib(b,c,d,e)),(c=-1<a?b[a]:null)&&wb(c))}\nfunction wb(a){if(\"number\"!=typeof a&&a&&!a.Z){var b=a.src;if(b&&b[db])jb(b.f,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(tb(c),d):b.addListener&&b.removeListener&&b.removeListener(d);mb--;(c=rb(b))?(jb(c,a),0==c.b&&(c.src=null,b[kb]=null)):gb(a)}}}function tb(a){return a in lb?lb[a]:lb[a]=\"on\"+a}\nfunction xb(a,b,c,d){var e=!0;if(a=rb(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.Z&&(f=yb(f,d),e=e&&!1!==f)}return e}function yb(a,b){var c=a.listener,d=a.ga||a.src;a.ba&&wb(a);return c.call(d,b)}\nfunction ub(a,b){if(a.Z)return!0;if(!Za){var c=b||n(\"window.event\");b=new bb(c,this);var d=!0;if(!(0>c.keyCode||void 0!=c.returnValue)){a:{var e=!1;if(0==c.keyCode)try{c.keyCode=-1;break a}catch(h){e=!0}if(e||void 0==c.returnValue)c.returnValue=!0}c=[];for(e=b.a;e;e=e.parentNode)c.push(e);a=a.type;for(e=c.length-1;0<=e;e--){b.a=c[e];var f=xb(c[e],a,!0,b);d=d&&f}for(e=0;e<c.length;e++)b.a=c[e],f=xb(c[e],a,!1,b),d=d&&f}return d}return yb(a,new bb(b,this))}\nfunction rb(a){a=a[kb];return a instanceof hb?a:null}var zb=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function pb(a){if(da(a))return a;a[zb]||(a[zb]=function(b){return a.handleEvent(b)});return a[zb]};function B(){w.call(this);this.f=new hb(this);this.N=this;this.J=null}u(B,w);B.prototype[db]=!0;g=B.prototype;g.addEventListener=function(a,b,c,d){nb(this,a,b,c,d)};g.removeEventListener=function(a,b,c,d){vb(this,a,b,c,d)};\ng.dispatchEvent=function(a){var b,c=this.J;if(c)for(b=[];c;c=c.J)b.push(c);c=this.N;var d=a.type||a;if(l(a))a=new A(a,c);else if(a instanceof A)a.target=a.target||c;else{var e=a;a=new A(d,c);Ha(a,e)}e=!0;if(b)for(var f=b.length-1;0<=f;f--){var h=a.a=b[f];e=Ab(h,d,!0,a)&&e}h=a.a=c;e=Ab(h,d,!0,a)&&e;e=Ab(h,d,!1,a)&&e;if(b)for(f=0;f<b.length;f++)h=a.a=b[f],e=Ab(h,d,!1,a)&&e;return e};\ng.w=function(){B.H.w.call(this);if(this.f){var a=this.f,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,gb(d[e]);delete a.a[c];a.b--}}this.J=null};g.Ia=function(a,b,c,d){return this.f.add(String(a),b,!1,c,d)};g.Ja=function(a,b,c,d){return this.f.add(String(a),b,!0,c,d)};\nfunction Ab(a,b,c,d){b=a.f.a[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var h=b[f];if(h&&!h.Z&&h.capture==c){var m=h.listener,v=h.ga||h.src;h.ba&&jb(a.f,h);e=!1!==m.call(v,d)&&e}}return e&&0!=d.Ra};function Bb(a){return/^\\s*$/.test(a)?!1:/^[\\],:{}\\s\\u2028\\u2029]*$/.test(a.replace(/\\\\[\"\\\\\\/bfnrtu]/g,\"@\").replace(/(?:\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)[\\s\\u2028\\u2029]*(?=:|,|]|}|$)/g,\"]\").replace(/(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g,\"\"))}function Cb(a){a=String(a);if(Bb(a))try{return eval(\"(\"+a+\")\")}catch(b){}throw Error(\"Invalid JSON string: \"+a);}function Db(a){var b=[];Eb(new Fb,a,b);return b.join(\"\")}function Fb(){}\nfunction Eb(a,b,c){if(null==b)c.push(\"null\");else{if(\"object\"==typeof b){if(p(b)){var d=b;b=d.length;c.push(\"[\");for(var e=\"\",f=0;f<b;f++)c.push(e),Eb(a,d[f],c),e=\",\";c.push(\"]\");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push(\"{\");e=\"\";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(f=b[d],\"function\"!=typeof f&&(c.push(e),Gb(d,c),c.push(\":\"),Eb(a,f,c),e=\",\"));c.push(\"}\");return}}switch(typeof b){case \"string\":Gb(b,c);break;case \"number\":c.push(isFinite(b)&&\n!isNaN(b)?String(b):\"null\");break;case \"boolean\":c.push(String(b));break;case \"function\":c.push(\"null\");break;default:throw Error(\"Unknown type: \"+typeof b);}}}var Hb={'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"/\":\"\\\\/\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\u000b\"},Ib=/\\uffff/.test(\"\\uffff\")?/[\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g:/[\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\nfunction Gb(a,b){b.push('\"',a.replace(Ib,function(a){var b=Hb[a];b||(b=\"\\\\u\"+(a.charCodeAt(0)|65536).toString(16).substr(1),Hb[a]=b);return b}),'\"')};function Jb(a,b){this.c=a;this.f=b;this.b=0;this.a=null}Jb.prototype.get=function(){if(0<this.b){this.b--;var a=this.a;this.a=a.next;a.next=null}else a=this.c();return a};function Kb(){this.b=this.a=null}var Nb=new Jb(function(){return new Lb},function(a){a.reset()});Kb.prototype.add=function(a,b){var c=Nb.get();c.set(a,b);this.b?this.b.next=c:this.a=c;this.b=c};function Ob(){var a=Pb,b=null;a.a&&(b=a.a,a.a=a.a.next,a.a||(a.b=null),b.next=null);return b}function Lb(){this.next=this.b=this.a=null}Lb.prototype.set=function(a,b){this.a=a;this.b=b;this.next=null};Lb.prototype.reset=function(){this.next=this.b=this.a=null};function Qb(a){k.setTimeout(function(){throw a;},0)}var Rb;\nfunction Sb(){var a=k.MessageChannel;\"undefined\"===typeof a&&\"undefined\"!==typeof window&&window.postMessage&&window.addEventListener&&!y(\"Presto\")&&(a=function(){var a=document.createElement(\"IFRAME\");a.style.display=\"none\";a.src=\"\";document.documentElement.appendChild(a);var b=a.contentWindow;a=b.document;a.open();a.write(\"\");a.close();var c=\"callImmediate\"+Math.random(),d=\"file:\"==b.location.protocol?\"*\":b.location.protocol+\"//\"+b.location.host;a=r(function(a){if((\"*\"==d||a.origin==d)&&a.data==\nc)this.port1.onmessage()},this);b.addEventListener(\"message\",a,!1);this.port1={};this.port2={postMessage:function(){b.postMessage(c,d)}}});if(\"undefined\"!==typeof a&&!y(\"Trident\")&&!y(\"MSIE\")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var a=c.za;c.za=null;a()}};return function(a){d.next={za:a};d=d.next;b.port2.postMessage(0)}}return\"undefined\"!==typeof document&&\"onreadystatechange\"in document.createElement(\"SCRIPT\")?function(a){var b=document.createElement(\"SCRIPT\");\nb.onreadystatechange=function(){b.onreadystatechange=null;b.parentNode.removeChild(b);b=null;a();a=null};document.documentElement.appendChild(b)}:function(a){k.setTimeout(a,0)}};var Tb;function Ub(){if(-1!=String(k.Promise).indexOf(\"[native code]\")){var a=k.Promise.resolve(void 0);Tb=function(){a.then(Vb)}}else Tb=function(){var a=Vb;!da(k.setImmediate)||k.Window&&k.Window.prototype&&!y(\"Edge\")&&k.Window.prototype.setImmediate==k.setImmediate?(Rb||(Rb=Sb()),Rb(a)):k.setImmediate(a)}}var Wb=!1,Pb=new Kb;function Vb(){for(var a;a=Ob();){try{a.a.call(a.b)}catch(c){Qb(c)}var b=Nb;b.f(a);100>b.b&&(b.b++,a.next=b.a,b.a=a)}Wb=!1};function Xb(a,b){B.call(this);this.b=a||1;this.a=b||k;this.c=r(this.qb,this);this.g=t()}u(Xb,B);g=Xb.prototype;g.ea=!1;g.O=null;g.qb=function(){if(this.ea){var a=t()-this.g;0<a&&a<.8*this.b?this.O=this.a.setTimeout(this.c,this.b-a):(this.O&&(this.a.clearTimeout(this.O),this.O=null),this.dispatchEvent(\"tick\"),this.ea&&(this.O=this.a.setTimeout(this.c,this.b),this.g=t()))}};g.start=function(){this.ea=!0;this.O||(this.O=this.a.setTimeout(this.c,this.b),this.g=t())};\nfunction Yb(a){a.ea=!1;a.O&&(a.a.clearTimeout(a.O),a.O=null)}g.w=function(){Xb.H.w.call(this);Yb(this);delete this.a};function Zb(a,b,c){if(da(a))c&&(a=r(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)};function $b(a,b,c){w.call(this);this.f=null!=c?r(a,c):a;this.c=b;this.b=r(this.kb,this);this.a=[]}u($b,w);g=$b.prototype;g.ha=!1;g.Y=null;g.cb=function(a){this.a=arguments;this.Y?this.ha=!0:ac(this)};g.w=function(){$b.H.w.call(this);this.Y&&(k.clearTimeout(this.Y),this.Y=null,this.ha=!1,this.a=[])};g.kb=function(){this.Y=null;this.ha&&(this.ha=!1,ac(this))};function ac(a){a.Y=Zb(a.b,a.c);a.f.apply(null,a.a)};function bc(a){w.call(this);this.b=a;this.a={}}u(bc,w);var cc=[];function dc(a,b,c,d){p(c)||(c&&(cc[0]=c.toString()),c=cc);for(var e=0;e<c.length;e++){var f=nb(b,c[e],d||a.handleEvent,!1,a.b||a);if(!f)break;a.a[f.key]=f}}function ec(a){Ca(a.a,function(a,c){this.a.hasOwnProperty(c)&&wb(a)},a);a.a={}}bc.prototype.w=function(){bc.H.w.call(this);ec(this)};bc.prototype.handleEvent=function(){throw Error(\"EventHandler.handleEvent not implemented\");};function fc(a,b,c){this.reset(a,b,c,void 0,void 0)}fc.prototype.a=null;var gc=0;fc.prototype.reset=function(a,b,c,d,e){\"number\"==typeof e||gc++;d||t();delete this.a};function hc(a){this.f=a;this.b=this.c=this.a=null}function C(a,b){this.name=a;this.value=b}C.prototype.toString=function(){return this.name};var ic=new C(\"SEVERE\",1E3),jc=new C(\"WARNING\",900),kc=new C(\"INFO\",800),lc=new C(\"CONFIG\",700),mc=new C(\"FINE\",500);function nc(a){if(a.c)return a.c;if(a.a)return nc(a.a);ma(\"Root logger has no level set.\");return null}hc.prototype.log=function(a,b,c){if(a.value>=nc(this).value)for(da(b)&&(b=b()),a=new fc(a,String(b),this.f),c&&(a.a=c),c=this;c;)c=c.a};\nvar oc={},pc=null;function qc(a){pc||(pc=new hc(\"\"),oc[\"\"]=pc,pc.c=lc);var b;if(!(b=oc[a])){b=new hc(a);var c=a.lastIndexOf(\".\"),d=a.substr(c+1);c=qc(a.substr(0,c));c.b||(c.b={});c.b[d]=b;b.a=c;oc[a]=b}return b};function D(a,b){a&&a.log(jc,b,void 0)}function rc(a,b){a&&a.log(kc,b,void 0)}function E(a,b){a&&a.log(mc,b,void 0)};function sc(){this.a=qc(\"goog.labs.net.webChannel.WebChannelDebug\");this.b=!0}sc.prototype.Fa=function(){this.b=!1};function tc(a,b,c,d,e,f){F(a,function(){if(a.b)if(f){var h=\"\";for(var m=f.split(\"&\"),v=0;v<m.length;v++){var I=m[v].split(\"=\");if(1<I.length){var X=I[0];I=I[1];var Mb=X.split(\"_\");h=2<=Mb.length&&\"type\"==Mb[1]?h+(X+\"=\"+I+\"&\"):h+(X+\"=redacted&\")}}}else h=null;else h=f;return\"XMLHTTP REQ (\"+d+\") [attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+h})}\nfunction uc(a,b,c,d,e,f,h){F(a,function(){return\"XMLHTTP RESP (\"+d+\") [ attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+f+\" \"+h})}function G(a,b,c,d){F(a,function(){return\"XMLHTTP TEXT (\"+b+\"): \"+vc(a,c)+(d?\" \"+d:\"\")})}function wc(a,b){F(a,function(){return\"TIMEOUT: \"+b})}function H(a,b){E(a.a,b)}function xc(a,b,c){(a=a.a)&&a.log(ic,c||\"Exception\",b)}function F(a,b){rc(a.a,b)}function J(a,b){(a=a.a)&&a.log(ic,b,void 0)}\nfunction vc(a,b){if(!a.b)return b;if(!b)return null;try{var c=JSON.parse(b);if(c)for(var d=0;d<c.length;d++)if(p(c[d])){var e=c[d];if(!(2>e.length)){var f=e[1];if(p(f)&&!(1>f.length)){var h=f[0];if(\"noop\"!=h&&\"stop\"!=h&&\"close\"!=h)for(var m=1;m<f.length;m++)f[m]=\"\"}}}return Db(c)}catch(v){return H(a,\"Exception parsing expected JS array - probably was not JS\"),b}};var yc=new B;function zc(a){A.call(this,\"serverreachability\",a)}u(zc,A);function Ac(a){yc.dispatchEvent(new zc(yc,a))}function Bc(a){A.call(this,\"statevent\",a)}u(Bc,A);function K(a){yc.dispatchEvent(new Bc(yc,a))}function Cc(a){A.call(this,\"timingevent\",a)}u(Cc,A);function Dc(a,b,c){yc.dispatchEvent(new Cc(yc,a,b,c))}function Ec(a,b){if(!da(a))throw Error(\"Fn must not be null and must be a function\");return k.setTimeout(function(){a()},b)};var Fc={NO_ERROR:0,rb:1,yb:2,xb:3,ub:4,wb:5,zb:6,Ua:7,TIMEOUT:8,Cb:9};var Gc={tb:\"complete\",Gb:\"success\",Va:\"error\",Ua:\"abort\",Eb:\"ready\",Fb:\"readystatechange\",TIMEOUT:\"timeout\",Ab:\"incrementaldata\",Db:\"progress\",vb:\"downloadprogress\",Hb:\"uploadprogress\"};function Hc(){}Hc.prototype.a=null;function Ic(a){var b;(b=a.a)||(b={},Jc(a)&&(b[0]=!0,b[1]=!0),b=a.a=b);return b};function Kc(){}var Lc={OPEN:\"a\",sb:\"b\",Va:\"c\",Bb:\"d\"};function Mc(){A.call(this,\"d\")}u(Mc,A);function Nc(){A.call(this,\"c\")}u(Nc,A);var Oc;function Pc(){}u(Pc,Hc);function Qc(a){return(a=Jc(a))?new ActiveXObject(a):new XMLHttpRequest}function Jc(a){if(!a.b&&\"undefined\"==typeof XMLHttpRequest&&\"undefined\"!=typeof ActiveXObject){for(var b=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.b=d}catch(e){}}throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");}return a.b}Oc=new Pc;function L(a,b,c,d){this.i=a;this.b=b;this.c=c;this.T=d||1;this.L=new bc(this);this.R=Rc;a=Na?125:void 0;this.S=new Xb(a);this.j=null;this.f=!1;this.l=this.g=this.h=this.J=this.D=this.U=this.s=null;this.u=[];this.a=null;this.G=0;this.m=this.o=null;this.C=-1;this.B=!1;this.N=0;this.I=null;this.v=this.X=this.K=!1}var Rc=45E3;\nfunction Sc(a,b){switch(a){case 0:return\"Non-200 return code (\"+b+\")\";case 1:return\"XMLHTTP failure (no data)\";case 2:return\"HttpConnection timeout\";default:return\"Unknown error\"}}var Tc={},Uc={};g=L.prototype;g.setTimeout=function(a){this.R=a};function Vc(a,b,c){a.J=1;a.h=Wc(M(b));a.l=c;a.K=!0;Xc(a,null)}function Yc(a,b,c,d){a.J=1;a.h=Wc(M(b));a.l=null;a.K=c;Xc(a,d)}\nfunction Xc(a,b){a.D=t();Zc(a);a.g=M(a.h);$c(a.g,\"t\",a.T);a.G=0;a.a=a.i.ca(a.i.ia()?b:null);0<a.N&&(a.I=new $b(r(a.Sa,a,a.a),a.N));dc(a.L,a.a,\"readystatechange\",a.nb);b=a.j?Fa(a.j):{};a.l?(a.o||(a.o=\"POST\"),b[\"Content-Type\"]=\"application/x-www-form-urlencoded\",a.a.fa(a.g,a.o,a.l,b)):(a.o=\"GET\",a.a.fa(a.g,a.o,null,b));Ac(1);tc(a.b,a.o,a.g,a.c,a.T,a.l)}g.nb=function(a){a=a.target;var b=this.I;b&&3==N(a)?(H(this.b,\"Throttling readystatechange.\"),b.cb()):this.Sa(a)};\ng.Sa=function(a){try{a==this.a?ad(this):D(this.b.a,\"Called back with an unexpected xmlhttp\")}catch(c){if(H(this.b,\"Failed call to OnXmlHttpReadyStateChanged_\"),this.a&&this.a.V()){var b=this;xc(this.b,c,function(){return\"ResponseText: \"+b.a.V()})}else xc(this.b,c,\"No response text\")}finally{}};\nfunction ad(a){var b=N(a.a),c=a.a.Ga(),d=a.a.W();if(!(3>b||3==b&&!Na&&!a.a.V())){a.B||4!=b||7==c||(8==c||0>=d?Ac(3):Ac(2));bd(a);var e=a.a.W();a.C=e;(c=a.a.V())||H(a.b,function(){return\"No response text for uri \"+a.g+\" status \"+e});a.f=200==e;uc(a.b,a.o,a.g,a.c,a.T,b,e);if(a.f){if(d=cd(a))G(a.b,a.c,d,\"Initial handshake response via X-HTTP-Initial-Response\"),a.v=!0,dd(a,d);a.K?(ed(a,b,c),Na&&a.f&&3==b&&fd(a)):(G(a.b,a.c,c,null),dd(a,c));4==b&&gd(a);a.f&&!a.B&&(4==b?a.i.ta(a):(a.f=!1,Zc(a)))}else 400==\ne&&0<c.indexOf(\"Unknown SID\")?(a.m=3,K(12),D(a.b.a,\"XMLHTTP Unknown SID (\"+a.c+\")\")):(a.m=0,K(13),D(a.b.a,\"XMLHTTP Bad status \"+e+\" (\"+a.c+\")\")),gd(a),hd(a)}}function cd(a){return!a.X||a.v?null:a.a&&(a=id(a.a,\"X-HTTP-Initial-Response\"))&&!xa(a)?a:null}\nfunction ed(a,b,c){for(var d=!0;!a.B&&a.G<c.length;){var e=jd(a,c);if(e==Uc){4==b&&(a.m=4,K(14),d=!1);G(a.b,a.c,null,\"[Incomplete Response]\");break}else if(e==Tc){a.m=4;K(15);G(a.b,a.c,c,\"[Invalid Chunk]\");d=!1;break}else G(a.b,a.c,e,null),dd(a,e)}4==b&&0==c.length&&(a.m=1,K(16),d=!1);a.f=a.f&&d;d||(G(a.b,a.c,c,\"[Invalid Chunked Response]\"),gd(a),hd(a))}g.mb=function(){if(this.a){var a=N(this.a),b=this.a.V();this.G<b.length&&(bd(this),ed(this,a,b),this.f&&4!=a&&Zc(this))}};\nfunction fd(a){dc(a.L,a.S,\"tick\",a.mb);a.S.start()}function jd(a,b){var c=a.G,d=b.indexOf(\"\\n\",c);if(-1==d)return Uc;c=Number(b.substring(c,d));if(isNaN(c))return Tc;d+=1;if(d+c>b.length)return Uc;b=b.substr(d,c);a.G=d+c;return b}g.cancel=function(){this.B=!0;gd(this)};function Zc(a){a.U=t()+a.R;kd(a,a.R)}function kd(a,b){if(null!=a.s)throw Error(\"WatchDog timer not null\");a.s=Ec(r(a.lb,a),b)}function bd(a){a.s&&(k.clearTimeout(a.s),a.s=null)}\ng.lb=function(){this.s=null;var a=t();0<=a-this.U?(this.f&&J(this.b,\"Received watchdog timeout even though request loaded successfully\"),wc(this.b,this.g),2!=this.J&&(Ac(3),K(17)),gd(this),this.m=2,hd(this)):(D(this.b.a,\"WatchDog timer called too early\"),kd(this,this.U-a))};function hd(a){a.i.La()||a.B||a.i.ta(a)}function gd(a){bd(a);var b=a.I;b&&\"function\"==typeof b.$&&b.$();a.I=null;Yb(a.S);ec(a.L);a.a&&(b=a.a,a.a=null,b.abort(),b.$())}\nfunction dd(a,b){try{a.i.Oa(a,b),Ac(4)}catch(c){xc(a.b,c,\"Error in httprequest callback\")}};function ld(a){if(a.A&&\"function\"==typeof a.A)return a.A();if(l(a))return a.split(\"\");if(ca(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}return Da(a)}\nfunction md(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(ca(a)||l(a))ra(a,b,void 0);else{if(a.M&&\"function\"==typeof a.M)var c=a.M();else if(a.A&&\"function\"==typeof a.A)c=void 0;else if(ca(a)||l(a)){c=[];for(var d=a.length,e=0;e<d;e++)c.push(e)}else c=Ea(a);d=ld(a);e=d.length;for(var f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)}};function O(a,b){this.b={};this.a=[];this.c=0;var c=arguments.length;if(1<c){if(c%2)throw Error(\"Uneven number of arguments\");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else if(a)if(a instanceof O)for(c=a.M(),d=0;d<c.length;d++)this.set(c[d],a.get(c[d]));else for(d in a)this.set(d,a[d])}g=O.prototype;g.A=function(){nd(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.b[this.a[b]]);return a};g.M=function(){nd(this);return this.a.concat()};\nfunction od(a){a.b={};a.a.length=0;a.c=0}function pd(a,b){return P(a.b,b)?(delete a.b[b],a.c--,a.a.length>2*a.c&&nd(a),!0):!1}function nd(a){if(a.c!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];P(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.c!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],P(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}g.get=function(a,b){return P(this.b,a)?this.b[a]:b};g.set=function(a,b){P(this.b,a)||(this.c++,this.a.push(a));this.b[a]=b};\ng.forEach=function(a,b){for(var c=this.M(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};function P(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var qd=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function rd(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};function Q(a,b){this.b=this.j=this.f=\"\";this.i=null;this.g=this.a=\"\";this.h=!1;var c;a instanceof Q?(this.h=void 0!==b?b:a.h,sd(this,a.f),this.j=a.j,td(this,a.b),ud(this,a.i),this.a=a.a,vd(this,wd(a.c)),this.g=a.g):a&&(c=String(a).match(qd))?(this.h=!!b,sd(this,c[1]||\"\",!0),this.j=xd(c[2]||\"\"),td(this,c[3]||\"\",!0),ud(this,c[4]),this.a=xd(c[5]||\"\",!0),vd(this,c[6]||\"\",!0),this.g=xd(c[7]||\"\")):(this.h=!!b,this.c=new yd(null,this.h))}\nQ.prototype.toString=function(){var a=[],b=this.f;b&&a.push(zd(b,Ad,!0),\":\");var c=this.b;if(c||\"file\"==b)a.push(\"//\"),(b=this.j)&&a.push(zd(b,Ad,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.i,null!=c&&a.push(\":\",String(c));if(c=this.a)this.b&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(zd(c,\"/\"==c.charAt(0)?Bd:Cd,!0));(c=this.c.toString())&&a.push(\"?\",c);(c=this.g)&&a.push(\"#\",zd(c,Dd));return a.join(\"\")};\nQ.prototype.resolve=function(a){var b=M(this),c=!!a.f;c?sd(b,a.f):c=!!a.j;c?b.j=a.j:c=!!a.b;c?td(b,a.b):c=null!=a.i;var d=a.a;if(c)ud(b,a.i);else if(c=!!a.a){if(\"/\"!=d.charAt(0))if(this.b&&!this.a)d=\"/\"+d;else{var e=b.a.lastIndexOf(\"/\");-1!=e&&(d=b.a.substr(0,e+1)+d)}e=d;if(\"..\"==e||\".\"==e)d=\"\";else if(-1!=e.indexOf(\"./\")||-1!=e.indexOf(\"/.\")){d=0==e.lastIndexOf(\"/\",0);e=e.split(\"/\");for(var f=[],h=0;h<e.length;){var m=e[h++];\".\"==m?d&&h==e.length&&f.push(\"\"):\"..\"==m?((1<f.length||1==f.length&&\"\"!=\nf[0])&&f.pop(),d&&h==e.length&&f.push(\"\")):(f.push(m),d=!0)}d=f.join(\"/\")}else d=e}c?b.a=d:c=\"\"!==a.c.toString();c?vd(b,wd(a.c)):c=!!a.g;c&&(b.g=a.g);return b};function M(a){return new Q(a)}function sd(a,b,c){a.f=c?xd(b,!0):b;a.f&&(a.f=a.f.replace(/:$/,\"\"))}function td(a,b,c){a.b=c?xd(b,!0):b}function ud(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.i=b}else a.i=null}function vd(a,b,c){b instanceof yd?(a.c=b,Ed(a.c,a.h)):(c||(b=zd(b,Fd)),a.c=new yd(b,a.h))}\nfunction R(a,b,c){a.c.set(b,c)}function $c(a,b,c){p(c)||(c=[String(c)]);Gd(a.c,b,c)}function Wc(a){R(a,\"zx\",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^t()).toString(36));return a}function Hd(a){return a instanceof Q?M(a):new Q(a,void 0)}function Id(a,b,c,d){var e=new Q(null,void 0);a&&sd(e,a);b&&td(e,b);c&&ud(e,c);d&&(e.a=d);return e}function xd(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}\nfunction zd(a,b,c){return l(a)?(a=encodeURI(a).replace(b,Jd),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function Jd(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}var Ad=/[#\\/\\?@]/g,Cd=/[#\\?:]/g,Bd=/[#\\?]/g,Fd=/[#\\?@]/g,Dd=/#/g;function yd(a,b){this.b=this.a=null;this.c=a||null;this.f=!!b}function S(a){a.a||(a.a=new O,a.b=0,a.c&&rd(a.c,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))}g=yd.prototype;\ng.add=function(a,b){S(this);this.c=null;a=Kd(this,a);var c=this.a.get(a);c||this.a.set(a,c=[]);c.push(b);this.b+=1;return this};function Ld(a,b){S(a);b=Kd(a,b);P(a.a.b,b)&&(a.c=null,a.b-=a.a.get(b).length,pd(a.a,b))}function Md(a,b){S(a);b=Kd(a,b);return P(a.a.b,b)}g.forEach=function(a,b){S(this);this.a.forEach(function(c,d){ra(c,function(c){a.call(b,c,d,this)},this)},this)};\ng.M=function(){S(this);for(var a=this.a.A(),b=this.a.M(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};g.A=function(a){S(this);var b=[];if(l(a))Md(this,a)&&(b=va(b,this.a.get(Kd(this,a))));else{a=this.a.A();for(var c=0;c<a.length;c++)b=va(b,a[c])}return b};g.set=function(a,b){S(this);this.c=null;a=Kd(this,a);Md(this,a)&&(this.b-=this.a.get(a).length);this.a.set(a,[b]);this.b+=1;return this};g.get=function(a,b){a=a?this.A(a):[];return 0<a.length?String(a[0]):b};\nfunction Gd(a,b,c){Ld(a,b);0<c.length&&(a.c=null,a.a.set(Kd(a,b),wa(c)),a.b+=c.length)}g.toString=function(){if(this.c)return this.c;if(!this.a)return\"\";for(var a=[],b=this.a.M(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.A(d);for(var f=0;f<d.length;f++){var h=e;\"\"!==d[f]&&(h+=\"=\"+encodeURIComponent(String(d[f])));a.push(h)}}return this.c=a.join(\"&\")};function wd(a){var b=new yd;b.c=a.c;a.a&&(b.a=new O(a.a),b.b=a.b);return b}\nfunction Kd(a,b){b=String(b);a.f&&(b=b.toLowerCase());return b}function Ed(a,b){b&&!a.f&&(S(a),a.c=null,a.a.forEach(function(a,b){var c=b.toLowerCase();b!=c&&(Ld(this,b),Gd(this,c,a))},a));a.f=b};function Nd(){this.a=t()}var Od=null;Nd.prototype.set=function(a){this.a=a};Nd.prototype.reset=function(){this.set(t())};Nd.prototype.get=function(){return this.a};function Pd(){Od||(Od=new Nd)}function Qd(){Od||(Od=new Nd)}u(Qd,Pd);function Rd(a,b){this.a=a;this.b=b;this.c=this.i=null;this.h=!1;this.m=null;this.f=-1;this.l=this.g=null}g=Rd.prototype;g.P=null;\nfunction Sd(a){H(a.b,\"TestConnection: starting stage 2\");var b=a.a.I.a;if(null!=b)H(a.b,function(){return\"TestConnection: skipping stage 2, precomputed result is \"+b?\"Buffered\":\"Unbuffered\"}),K(4),b?(K(10),Td(a.a,a,!1)):(K(11),Td(a.a,a,!0));else{a.c=new L(a,a.b,void 0,void 0);a.c.j=a.i;var c=Ud(a.a,a.g,a.m);K(4);$c(c,\"TYPE\",\"xmlhttp\");var d=a.a.j,e=a.a.K;d&&e&&R(c,d,e);Yc(a.c,c,!1,a.g)}}g.ca=function(a){return this.a.ca(a)};g.abort=function(){this.c&&(this.c.cancel(),this.c=null);this.f=-1};\ng.La=function(){return!1};\ng.Oa=function(a,b){this.f=a.C;if(0==this.P){H(this.b,\"TestConnection: Got data for stage 1\");if(!this.a.o&&(a=a.a)){var c=id(a,\"X-Client-Wire-Protocol\");this.l=c?c:null;this.a.j&&((a=id(a,\"X-HTTP-Session-Id\"))?this.a.K=a:D(this.b.a,\"Missing X_HTTP_SESSION_ID in the handshake response\"))}if(b){try{var d=this.a.la.a.parse(b)}catch(e){xc(this.b,e);Vd(this.a,this);return}this.g=d[0]}else H(this.b,\"TestConnection: Null responseText\"),Vd(this.a,this)}else if(1==this.P)if(this.h)K(6);else if(\"11111\"==b){if(K(5),\nthis.h=!0,!z||10<=Number(Wa))this.f=200,this.c.cancel(),H(this.b,\"Test connection succeeded; using streaming connection\"),K(11),Td(this.a,this,!0)}else K(7),this.h=!1};\ng.ta=function(){this.f=this.c.C;this.c.f?0==this.P?(this.P=1,H(this.b,\"TestConnection: request complete for initial check\"),Sd(this)):1==this.P&&(H(this.b,\"TestConnection: request complete for stage 2\"),this.h?(H(this.b,\"Test connection succeeded; using streaming connection\"),K(11),Td(this.a,this,!0)):(H(this.b,\"Test connection failed; not using streaming\"),K(10),Td(this.a,this,!1))):(H(this.b,\"TestConnection: request failed, in state \"+this.P),0==this.P?K(8):1==this.P&&K(9),Vd(this.a,this))};\ng.ia=function(){return this.a.ia()};g.qa=function(){return this.a.qa()};function Wd(){this.a=this.b=null};function Xd(){this.a=new O}function Yd(a){var b=typeof a;return\"object\"==b&&a||\"function\"==b?\"o\"+(a[q]||(a[q]=++fa)):b.charAt(0)+a}Xd.prototype.add=function(a){this.a.set(Yd(a),a)};Xd.prototype.A=function(){return this.a.A()};function Zd(a,b){this.a=a;this.b=b};function $d(a){this.g=a||ae;k.PerformanceNavigationTiming?(a=k.performance.getEntriesByType(\"navigation\"),a=0<a.length&&(\"hq\"==a[0].nextHopProtocol||\"h2\"==a[0].nextHopProtocol)):a=!!(k.oa&&k.oa.Ma&&k.oa.Ma()&&k.oa.Ma().Jb);this.f=a?this.g:1;this.a=null;1<this.f&&(this.a=new Xd);this.b=null;this.c=[]}var ae=10;function be(a,b){a.a||-1==b.indexOf(\"spdy\")&&-1==b.indexOf(\"quic\")&&-1==b.indexOf(\"h2\")||(a.f=a.g,a.a=new Xd,a.b&&(ce(a,a.b),a.b=null))}function de(a){return a.b?!0:a.a?a.a.a.c>=a.f:!1}\nfunction ee(a,b){a.b?a=a.b==b:a.a?(b=Yd(b),a=P(a.a.a.b,b)):a=!1;return a}function ce(a,b){a.a?a.a.add(b):a.b=b}function fe(a,b){if(a.b&&a.b==b)a.b=null;else{var c;if(c=a.a)c=Yd(b),c=P(a.a.a.b,c);c&&pd(a.a.a,Yd(b))}}$d.prototype.cancel=function(){this.c=ge(this);this.b?(this.b.cancel(),this.b=null):this.a&&0!=this.a.a.c&&(ra(this.a.A(),function(a){a.cancel()}),od(this.a.a))};\nfunction ge(a){if(null!=a.b)return a.c.concat(a.b.u);if(null!=a.a&&0!=a.a.a.c){var b=a.c;ra(a.a.A(),function(a){b=b.concat(a.u)});return b}return wa(a.c)}function he(a,b){a.c=a.c.concat(b)};function ie(){}ie.prototype.stringify=function(a){return k.JSON.stringify(a,void 0)};ie.prototype.parse=function(a){return k.JSON.parse(a,void 0)};function je(){this.a=new ie}function ke(a,b,c){var d=c||\"\";try{md(a,function(a,c){var e=a;ea(a)&&(e=Db(a));b.push(d+c+\"=\"+encodeURIComponent(e))})}catch(e){throw b.push(d+\"type=\"+encodeURIComponent(\"_badmap\")),e;}};function le(a,b){var c=new sc;H(c,\"TestLoadImage: loading \"+a);var d=new Image;d.onload=ja(me,c,d,\"TestLoadImage: loaded\",!0,b);d.onerror=ja(me,c,d,\"TestLoadImage: error\",!1,b);d.onabort=ja(me,c,d,\"TestLoadImage: abort\",!1,b);d.ontimeout=ja(me,c,d,\"TestLoadImage: timeout\",!1,b);k.setTimeout(function(){if(d.ontimeout)d.ontimeout()},1E4);d.src=a}function me(a,b,c,d,e){try{H(a,c),b.onload=null,b.onerror=null,b.onabort=null,b.ontimeout=null,e(d)}catch(f){xc(a,f)}};function T(a){B.call(this);this.headers=new O;this.s=a||null;this.c=!1;this.D=this.a=null;this.K=this.B=\"\";this.j=0;this.g=\"\";this.h=this.I=this.u=this.G=!1;this.l=0;this.C=null;this.L=ne;this.v=this.o=!1}u(T,B);var ne=\"\";T.prototype.b=qc(\"goog.net.XhrIo\");var oe=/^https?$/i,pe=[\"POST\",\"PUT\"];g=T.prototype;\ng.fa=function(a,b,c,d){if(this.a)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.B+\"; newUri=\"+a);b=b?b.toUpperCase():\"GET\";this.B=a;this.g=\"\";this.j=0;this.K=b;this.G=!1;this.c=!0;this.a=this.s?Qc(this.s):Qc(Oc);this.D=this.s?Ic(this.s):Ic(Oc);this.a.onreadystatechange=r(this.Na,this);try{E(this.b,U(this,\"Opening Xhr\")),this.I=!0,this.a.open(b,String(a),!0),this.I=!1}catch(f){E(this.b,U(this,\"Error opening Xhr: \"+f.message));qe(this,f);return}a=c||\"\";var e=new O(this.headers);\nd&&md(d,function(a,b){e.set(b,a)});d=sa(e.M());c=k.FormData&&a instanceof k.FormData;!(0<=qa(pe,b))||d||c||e.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");e.forEach(function(a,b){this.a.setRequestHeader(b,a)},this);this.L&&(this.a.responseType=this.L);\"withCredentials\"in this.a&&this.a.withCredentials!==this.o&&(this.a.withCredentials=this.o);try{re(this),0<this.l&&(this.v=se(this.a),E(this.b,U(this,\"Will abort after \"+this.l+\"ms if incomplete, xhr2 \"+this.v)),this.v?(this.a.timeout=\nthis.l,this.a.ontimeout=r(this.Ka,this)):this.C=Zb(this.Ka,this.l,this)),E(this.b,U(this,\"Sending request\")),this.u=!0,this.a.send(a),this.u=!1}catch(f){E(this.b,U(this,\"Send error: \"+f.message)),qe(this,f)}};function se(a){return z&&Va(9)&&\"number\"==typeof a.timeout&&void 0!==a.ontimeout}function ta(a){return\"content-type\"==a.toLowerCase()}\ng.Ka=function(){\"undefined\"!=typeof goog&&this.a&&(this.g=\"Timed out after \"+this.l+\"ms, aborting\",this.j=8,E(this.b,U(this,this.g)),this.dispatchEvent(\"timeout\"),this.abort(8))};function qe(a,b){a.c=!1;a.a&&(a.h=!0,a.a.abort(),a.h=!1);a.g=b;a.j=5;te(a);ue(a)}function te(a){a.G||(a.G=!0,a.dispatchEvent(\"complete\"),a.dispatchEvent(\"error\"))}\ng.abort=function(a){this.a&&this.c&&(E(this.b,U(this,\"Aborting\")),this.c=!1,this.h=!0,this.a.abort(),this.h=!1,this.j=a||7,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),ue(this))};g.w=function(){this.a&&(this.c&&(this.c=!1,this.h=!0,this.a.abort(),this.h=!1),ue(this,!0));T.H.w.call(this)};g.Na=function(){this.i||(this.I||this.u||this.h?ve(this):this.jb())};g.jb=function(){ve(this)};\nfunction ve(a){if(a.c&&\"undefined\"!=typeof goog)if(a.D[1]&&4==N(a)&&2==a.W())E(a.b,U(a,\"Local request error detected and ignored\"));else if(a.u&&4==N(a))Zb(a.Na,0,a);else if(a.dispatchEvent(\"readystatechange\"),4==N(a)){E(a.b,U(a,\"Request complete\"));a.c=!1;try{var b=a.W();a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.B).match(qd)[1]||null;if(!f&&k.self&&k.self.location){var h=k.self.location.protocol;\nf=h.substr(0,h.length-1)}e=!oe.test(f?f.toLowerCase():\"\")}d=e}d?(a.dispatchEvent(\"complete\"),a.dispatchEvent(\"success\")):(a.j=6,a.g=a.Ha()+\" [\"+a.W()+\"]\",te(a))}finally{ue(a)}}}function ue(a,b){if(a.a){re(a);var c=a.a,d=a.D[0]?aa:null;a.a=null;a.D=null;b||a.dispatchEvent(\"ready\");try{c.onreadystatechange=d}catch(e){(a=a.b)&&a.log(ic,\"Problem encountered resetting onreadystatechange: \"+e.message,void 0)}}}function re(a){a.a&&a.v&&(a.a.ontimeout=null);a.C&&(k.clearTimeout(a.C),a.C=null)}\nfunction N(a){return a.a?a.a.readyState:0}g.W=function(){try{return 2<N(this)?this.a.status:-1}catch(a){return-1}};g.Ha=function(){try{return 2<N(this)?this.a.statusText:\"\"}catch(a){return E(this.b,\"Can not get status: \"+a.message),\"\"}};g.V=function(){try{return this.a?this.a.responseText:\"\"}catch(a){return E(this.b,\"Can not get responseText: \"+a.message),\"\"}};\ng.eb=function(a){if(this.a){var b=this.a.responseText;a&&0==b.indexOf(a)&&(b=b.substring(a.length));a:{a=b;if(k.JSON)try{var c=k.JSON.parse(a);break a}catch(d){}c=Cb(a)}return c}};function id(a,b){return a.a?a.a.getResponseHeader(b):null}g.Ga=function(){return this.j};g.hb=function(){return l(this.g)?this.g:String(this.g)};function U(a,b){return b+\" [\"+a.K+\" \"+a.B+\" \"+a.W()+\"]\"};function we(a){var b=\"\";Ca(a,function(a,d){b+=d;b+=\":\";b+=a;b+=\"\\r\\n\"});return b}function xe(a,b,c){a:{for(d in c){var d=!1;break a}d=!0}if(d)return a;c=we(c);if(l(a)){b=encodeURIComponent(String(b));c=null!=c?\"=\"+encodeURIComponent(String(c)):\"\";if(b+=c){c=a.indexOf(\"#\");0>c&&(c=a.length);d=a.indexOf(\"?\");if(0>d||d>c){d=c;var e=\"\"}else e=a.substring(d+1,c);a=[a.substr(0,d),e,a.substr(c)];c=a[1];a[1]=b?c?c+\"&\"+b:b:c;a=a[0]+(a[1]?\"?\"+a[1]:\"\")+a[2]}return a}R(a,b,c);return a};function ye(a){this.ya=0;this.g=[];this.a=new sc;this.I=new Wd;this.X=this.ua=this.D=this.ja=this.b=this.K=this.j=this.U=this.h=this.L=this.i=null;this.Za=this.R=0;this.Xa=!!n(\"internalChannelParams.failFast\",a);this.ka=this.C=this.s=this.l=this.m=this.f=null;this.u=this.xa=this.N=-1;this.T=this.B=this.v=0;this.Wa=n(\"internalChannelParams.baseRetryDelayMs\",a)||5E3;this.$a=n(\"internalChannelParams.retryDelaySeedMs\",a)||1E4;this.Ya=n(\"internalChannelParams.forwardChannelMaxRetries\",a)||2;this.wa=n(\"internalChannelParams.forwardChannelRequestTimeoutMs\",\na)||2E4;this.Ta=a&&a.Kb||void 0;this.G=void 0;this.S=a&&a.supportsCrossDomainXhr||!1;this.J=\"\";this.c=new $d(a&&a.concurrentRequestLimit);this.la=new je;this.o=a&&void 0!==a.backgroundChannelTest?a.backgroundChannelTest:!0;(this.va=a&&a.fastHandshake||!1)&&!this.o&&(D(this.a.a,\"Force backgroundChannelTest when fastHandshake is enabled.\"),this.o=!0);a&&a.Fa&&this.a.Fa()}g=ye.prototype;g.na=8;g.F=1;\nfunction ze(a){H(a.a,\"disconnect()\");Ae(a);if(3==a.F){var b=a.R++,c=M(a.D);R(c,\"SID\",a.J);R(c,\"RID\",b);R(c,\"TYPE\",\"terminate\");Be(a,c);b=new L(a,a.a,b,void 0);b.J=2;b.h=Wc(M(c));c=!1;k.navigator&&k.navigator.sendBeacon&&(c=k.navigator.sendBeacon(b.h.toString(),\"\"));!c&&k.Image&&((new Image).src=b.h,c=!0);c||(b.a=b.i.ca(null),b.a.fa(b.h));b.D=t();Zc(b)}Ce(a)}\nfunction Ae(a){a.C&&(a.C.abort(),a.C=null);a.b&&(a.b.cancel(),a.b=null);a.l&&(k.clearTimeout(a.l),a.l=null);De(a);a.c.cancel();a.m&&(k.clearTimeout(a.m),a.m=null)}function Ee(a,b){1E3==a.g.length&&J(a.a,function(){return\"Already have 1000 queued maps upon queueing \"+Db(b)});a.g.push(new Zd(a.Za++,b));3==a.F&&Fe(a)}g.La=function(){return 0==this.F};function Fe(a){de(a.c)||a.m||(a.m=Ec(r(a.Qa,a),0),a.v=0)}\nfunction Ge(a,b){var c=a.c;if((c.b?1:c.a?c.a.a.c:0)>=a.c.f-(a.m?1:0))return J(a.a,\"Unexpected retry request is scheduled.\"),!1;if(a.m)return H(a.a,\"Use the retry request that is already scheduled.\"),a.g=b.u.concat(a.g),!0;if(1==a.F||2==a.F||a.v>=(a.Xa?0:a.Ya))return!1;H(a.a,\"Going to retry POST\");a.m=Ec(r(a.Qa,a,b),He(a,a.v));a.v++;return!0}\ng.Qa=function(a){this.m=null;H(this.a,\"startForwardChannel_\");if(1==this.F)if(a)J(this.a,\"Not supposed to retry the open\");else{H(this.a,\"open_()\");this.R=Math.floor(1E5*Math.random());a=this.R++;var b=new L(this,this.a,a,void 0),c=this.i;this.L&&(c?(c=Fa(c),Ha(c,this.L)):c=this.L);null===this.h&&(b.j=c);var d=Ie(this,b),e=M(this.D);R(e,\"RID\",a);R(e,\"CVER\",22);this.o&&this.j&&R(e,\"X-HTTP-Session-Id\",this.j);Be(this,e);this.h&&c&&xe(e,this.h,c);ce(this.c,b);this.va?(R(e,\"$req\",d),R(e,\"SID\",\"null\"),\nb.X=!0,Vc(b,e,null)):Vc(b,e,d);this.F=2}else 3==this.F&&(a?Je(this,a):0==this.g.length?H(this.a,\"startForwardChannel_ returned: nothing to send\"):de(this.c)?J(this.a,\"startForwardChannel_ returned: connection already in progress\"):(Je(this),H(this.a,\"startForwardChannel_ finished, sent request\")))};\nfunction Je(a,b){var c;b?c=b.c:c=a.R++;var d=M(a.D);R(d,\"SID\",a.J);R(d,\"RID\",c);R(d,\"AID\",a.N);Be(a,d);a.h&&a.i&&xe(d,a.h,a.i);c=new L(a,a.a,c,a.v+1);null===a.h&&(c.j=a.i);b&&(a.g=b.u.concat(a.g));b=Ie(a,c);c.setTimeout(Math.round(.5*a.wa)+Math.round(.5*a.wa*Math.random()));ce(a.c,c);Vc(c,d,b)}function Be(a,b){a.f&&md({},function(a,d){R(b,d,a)})}\nfunction Ie(a,b){var c=Math.min(a.g.length,1E3),d=a.f?r(a.f.ab,a.f,a):null;a:for(var e=a.g,f=-1;;){var h=[\"count=\"+c];-1==f?0<c?(f=e[0].a,h.push(\"ofs=\"+f)):f=0:h.push(\"ofs=\"+f);for(var m=!0,v=0;v<c;v++){var I=e[v].a,X=e[v].b;I-=f;if(0>I)f=Math.max(0,e[v].a-100),m=!1;else try{ke(X,h,\"req\"+I+\"_\")}catch(Mb){d&&d(X)}}if(m){d=h.join(\"&\");break a}}a=a.g.splice(0,c);b.u=a;return d}function Ke(a){if(!a.b&&!a.l){a.T=1;var b=a.Pa;Tb||Ub();Wb||(Tb(),Wb=!0);Pb.add(b,a);a.B=0}}\nfunction Le(a){if(a.b||a.l)return J(a.a,\"Request already in progress\"),!1;if(3<=a.B)return!1;H(a.a,\"Going to retry GET\");a.T++;a.l=Ec(r(a.Pa,a),He(a,a.B));a.B++;return!0}\ng.Pa=function(){this.l=null;H(this.a,\"Creating new HttpRequest\");this.b=new L(this,this.a,\"rpc\",this.T);null===this.h&&(this.b.j=this.i);this.b.N=0;var a=M(this.ua);R(a,\"RID\",\"rpc\");R(a,\"SID\",this.J);R(a,\"CI\",this.ka?\"0\":\"1\");R(a,\"AID\",this.N);Be(this,a);R(a,\"TYPE\",\"xmlhttp\");this.h&&this.i&&xe(a,this.h,this.i);this.G&&this.b.setTimeout(this.G);Yc(this.b,a,!0,this.X);H(this.a,\"New Request created\")};\nfunction Td(a,b,c){H(a.a,\"Test Connection Finished\");var d=b.l;d&&be(a.c,d);a.ka=c;a.u=b.f;H(a.a,\"connectChannel_()\");a.D=Me(a,a.ja);Fe(a)}function Vd(a,b){H(a.a,\"Test Connection Failed\");a.u=b.f;V(a,2)}\ng.Oa=function(a,b){if(0!=this.F&&(this.b==a||ee(this.c,a)))if(this.u=a.C,!a.v&&ee(this.c,a)&&3==this.F){try{var c=this.la.a.parse(b)}catch(f){c=null}if(p(c)&&3==c.length)if(b=c,0==b[0])a:if(H(this.a,\"Server claims our backchannel is missing.\"),this.l)H(this.a,\"But we are currently starting the request.\");else{if(this.b)if(this.b.D+3E3<a.D)De(this),this.b.cancel(),this.b=null;else break a;else D(this.a.a,\"We do not have a BackChannel established\");Le(this);K(18)}else this.xa=b[1],a=this.xa-this.N,\n0<a&&(b=b[2],H(this.a,b+\" bytes (in \"+a+\" arrays) are outstanding on the BackChannel\"),37500>b&&this.ka&&0==this.B&&!this.s&&(this.s=Ec(r(this.ib,this),6E3)));else H(this.a,\"Bad POST response data returned\"),V(this,11)}else if((a.v||this.b==a)&&De(this),!xa(b))for(b=c=this.la.a.parse(b),c=0;c<b.length;c++){var d=b[c];this.N=d[0];d=d[1];if(2==this.F)if(\"c\"==d[0]){this.J=d[1];this.X=d[2];var e=d[3];null!=e&&(this.na=e,F(this.a,\"VER=\"+this.na));e=d[4];null!=e&&(this.ya=e,F(this.a,\"SVER=\"+this.ya));d=\nd[5];null!=d&&\"number\"==typeof d&&0<d&&(this.G=d*=1.5,F(this.a,\"backChannelRequestTimeoutMs_=\"+d));this.o&&(d=a.a)&&((e=id(d,\"X-Client-Wire-Protocol\"))&&be(this.c,e),this.j&&((d=id(d,\"X-HTTP-Session-Id\"))?(this.K=d,R(this.D,this.j,d)):D(this.a.a,\"Missing X_HTTP_SESSION_ID in the handshake response\")));this.F=3;this.f&&this.f.Da();d=a;this.ua=Ud(this,this.X,this.ja);d.v?(H(this.a,\"Upgrade the handshake request to a backchannel.\"),fe(this.c,d),(e=this.G)&&d.setTimeout(e),d.s&&(bd(d),Zc(d)),this.b=d):\nKe(this)}else\"stop\"!=d[0]&&\"close\"!=d[0]||V(this,7);else 3==this.F&&(\"stop\"==d[0]||\"close\"==d[0]?\"stop\"==d[0]?V(this,7):ze(this):\"noop\"!=d[0]&&this.f&&this.f.Ca(d),this.B=0)}};g.ib=function(){null!=this.s&&(this.s=null,this.b.cancel(),this.b=null,Le(this),K(19))};function De(a){null!=a.s&&(k.clearTimeout(a.s),a.s=null)}\ng.ta=function(a){H(this.a,\"Request complete\");var b=null;if(this.b==a){De(this);this.b=null;var c=2}else if(ee(this.c,a))b=a.u,fe(this.c,a),c=1;else return;this.u=a.C;if(0!=this.F)if(a.f)1==c?(Dc(a.l?a.l.length:0,t()-a.D,this.v),Fe(this)):Ke(this);else{var d=a.m;if(3==d||0==d&&0<this.u)H(this.a,\"Not retrying due to error type\");else{var e=this;H(this.a,function(){return\"Maybe retrying, last error: \"+Sc(d,e.u)});if(1==c&&Ge(this,a)||2==c&&Le(this))return;H(this.a,\"Exceeded max number of retries\")}b&&\n0<b.length&&he(this.c,b);H(this.a,\"Error: HTTP request failed\");switch(d){case 1:V(this,5);break;case 4:V(this,10);break;case 3:V(this,6);break;default:V(this,2)}}};function He(a,b){var c=a.Wa+Math.floor(Math.random()*a.$a);a.qa()||(H(a.a,\"Inactive channel\"),c*=2);return c*b}\nfunction V(a,b){F(a.a,\"Error code \"+b);if(2==b){var c=null;a.f&&(c=null);var d=r(a.pb,a);c||(c=new Q(\"//www.google.com/images/cleardot.gif\"),k.location&&\"http\"==k.location.protocol||sd(c,\"https\"),Wc(c));le(c.toString(),d)}else K(2);H(a.a,\"HttpChannel: error - \"+b);a.F=0;a.f&&a.f.Ba(b);Ce(a);Ae(a)}g.pb=function(a){a?(F(this.a,\"Successfully pinged google.com\"),K(2)):(F(this.a,\"Failed to ping google.com\"),K(1))};\nfunction Ce(a){a.F=0;a.u=-1;if(a.f){var b=ge(a.c);if(0!=b.length||0!=a.g.length)H(a.a,function(){return\"Number of undelivered maps, pending: \"+b.length+\", outgoing: \"+a.g.length}),a.c.c.length=0,wa(a.g),a.g.length=0;a.f.Aa()}}function Me(a,b){b=Ne(a,null,b);H(a.a,\"GetForwardChannelUri: \"+b);return b}function Ud(a,b,c){b=Ne(a,a.ia()?b:null,c);H(a.a,\"GetBackChannelUri: \"+b);return b}\nfunction Ne(a,b,c){var d=Hd(c);if(\"\"!=d.b)b&&td(d,b+\".\"+d.b),ud(d,d.i);else{var e=k.location,f;b?f=b+\".\"+e.hostname:f=e.hostname;d=Id(e.protocol,f,e.port,c)}a.U&&Ca(a.U,function(a,b){R(d,b,a)});b=a.j;c=a.K;b&&c&&R(d,b,c);R(d,\"VER\",a.na);Be(a,d);return d}g.ca=function(a){if(a&&!this.S)throw Error(\"Can't create secondary domain capable XhrIo object.\");a=new T(this.Ta);a.o=this.S;return a};g.qa=function(){return!!this.f&&!0};g.ia=function(){return this.S};new Qd;function Oe(){}g=Oe.prototype;g.Da=function(){};\ng.Ca=function(){};g.Ba=function(){};g.Aa=function(){};g.ab=function(){};function Pe(a){for(var b=arguments[0],c=1;c<arguments.length;c++){var d=arguments[c];if(0==d.lastIndexOf(\"/\",0))b=d;else{var e;(e=\"\"==b)||(e=b.length-1,e=0<=e&&b.indexOf(\"/\",e)==e);e?b+=d:b+=\"/\"+d}}return b};function Qe(){if(z&&!(10<=Number(Wa)))throw Error(\"Environmental error: no available transport.\");}Qe.prototype.a=function(a,b){return new W(a,b)};\nfunction W(a,b){B.call(this);this.a=new ye(b);this.b=a;this.o=b&&b.testUrl?b.testUrl:Pe(this.b,\"test\");this.c=qc(\"goog.labs.net.webChannel.WebChannelBaseTransport\");this.g=b&&b.messageUrlParams||null;a=b&&b.messageHeaders||null;b&&b.clientProtocolHeaderRequired&&(a?a[\"X-Client-Protocol\"]=\"webchannel\":a={\"X-Client-Protocol\":\"webchannel\"});this.a.i=a;a=b&&b.initMessageHeaders||null;b&&b.messageContentType&&(a?a[\"X-WebChannel-Content-Type\"]=b.messageContentType:a={\"X-WebChannel-Content-Type\":b.messageContentType});\nb&&b.Ea&&(a?a[\"X-WebChannel-Client-Profile\"]=b.Ea:a={\"X-WebChannel-Client-Profile\":b.Ea});this.a.L=a;(a=b&&b.httpHeadersOverwriteParam)&&!xa(a)&&(this.a.h=a);this.l=b&&b.supportsCrossDomainXhr||!1;this.j=b&&b.sendRawJson||!1;(b=b&&b.httpSessionIdParam)&&!xa(b)&&(this.a.j=b,a=this.g,null!==a&&b in a&&(a=this.g,b in a&&delete a[b],D(this.c,\"Ignore httpSessionIdParam also specified with messageUrlParams: \"+b)));this.h=new Re(this)}u(W,B);g=W.prototype;\ng.addEventListener=function(a,b,c,d){W.H.addEventListener.call(this,a,b,c,d)};g.removeEventListener=function(a,b,c,d){W.H.removeEventListener.call(this,a,b,c,d)};\ng.fb=function(){this.a.f=this.h;this.l&&(this.a.S=!0);var a=this.a,b=this.o,c=this.b,d=this.g||void 0;H(a.a,\"connect()\");K(0);a.ja=c;a.U=d||{};a.o&&(H(a.a,\"connect() bypassed channel-test.\"),a.I.b=[],a.I.a=!1);H(a.a,\"connectTest_()\");a.C=new Rd(a,a.a);null===a.h&&(a.C.i=a.i);c=b;a.h&&a.i&&(c=xe(b,a.h,a.i));a=a.C;a.m=c;b=Me(a.a,a.m);K(3);c=a.a.I.b;null!=c?(a.g=c[0],a.P=1,Sd(a)):($c(b,\"MODE\",\"init\"),!a.a.o&&a.a.j&&$c(b,\"X-HTTP-Session-Id\",a.a.j),a.c=new L(a,a.b,void 0,void 0),a.c.j=a.i,Yc(a.c,b,!1,\nnull),a.P=0)};g.close=function(){ze(this.a)};g.gb=function(a){if(l(a)){var b={};b.__data__=a;Ee(this.a,b)}else this.j?(b={},b.__data__=Db(a),Ee(this.a,b)):Ee(this.a,a)};g.w=function(){this.a.f=null;delete this.h;ze(this.a);delete this.a;W.H.w.call(this)};function Se(a){Mc.call(this);var b=a.__sm__;if(b){a:{for(var c in b){a=c;break a}a=void 0}(this.c=a)?(a=this.c,this.data=null!==b&&a in b?b[a]:void 0):this.data=b}else this.data=a}u(Se,Mc);function Te(){Nc.call(this);this.status=1}u(Te,Nc);\nfunction Re(a){this.a=a}u(Re,Oe);Re.prototype.Da=function(){rc(this.a.c,\"WebChannel opened on \"+this.a.b);this.a.dispatchEvent(\"a\")};Re.prototype.Ca=function(a){this.a.dispatchEvent(new Se(a))};Re.prototype.Ba=function(a){rc(this.a.c,\"WebChannel aborted on \"+this.a.b+\" due to channel error: \"+a);this.a.dispatchEvent(new Te(a))};Re.prototype.Aa=function(){rc(this.a.c,\"WebChannel closed on \"+this.a.b);this.a.dispatchEvent(\"b\")};var Ue=ja(function(a,b){function c(){}c.prototype=a.prototype;var d=new c;a.apply(d,Array.prototype.slice.call(arguments,1));return d},Qe);function Ve(){this.b=[];this.a=[]}function We(a){0==a.b.length&&(a.b=a.a,a.b.reverse(),a.a=[]);return a.b.pop()}function Xe(a){return a.b.length+a.a.length}Ve.prototype.A=function(){for(var a=[],b=this.b.length-1;0<=b;--b)a.push(this.b[b]);var c=this.a.length;for(b=0;b<c;++b)a.push(this.a[b]);return a};function Ye(a,b){w.call(this);this.h=a||0;this.c=b||10;if(this.h>this.c)throw Error(Ze);this.a=new Ve;this.b=new Xd;this.g=null;this.aa()}u(Ye,w);var Ze=\"[goog.structs.Pool] Min can not be greater than max\";g=Ye.prototype;g.da=function(){var a=t();if(!(null!=this.g&&0>a-this.g)){for(var b;0<Xe(this.a)&&(b=We(this.a),!this.sa(b));)this.aa();!b&&$e(this)<this.c&&(b=this.pa());b&&(this.g=a,this.b.add(b));return b}};g.ob=function(a){return pd(this.b.a,Yd(a))?(this.ma(a),!0):!1};\ng.ma=function(a){pd(this.b.a,Yd(a));this.sa(a)&&$e(this)<this.c?this.a.a.push(a):af(a)};g.aa=function(){for(var a=this.a;$e(this)<this.h;){var b=this.pa();a.a.push(b)}for(;$e(this)>this.c&&0<Xe(this.a);)af(We(a))};g.pa=function(){return{}};function af(a){if(\"function\"==typeof a.$)a.$();else for(var b in a)a[b]=null}g.sa=function(a){return\"function\"==typeof a.bb?a.bb():!0};function $e(a){return Xe(a.a)+a.b.a.c}\ng.w=function(){Ye.H.w.call(this);if(0<this.b.a.c)throw Error(\"[goog.structs.Pool] Objects not released\");delete this.b;for(var a=this.a;0!=a.b.length||0!=a.a.length;)af(We(a));delete this.a};function bf(a,b){this.a=a;this.b=b};function cf(a){this.a=[];if(a)a:{if(a instanceof cf){var b=a.M();a=a.A();if(0>=this.a.length){for(var c=this.a,d=0;d<b.length;d++)c.push(new bf(b[d],a[d]));break a}}else b=Ea(a),a=Da(a);for(d=0;d<b.length;d++)df(this,b[d],a[d])}}function df(a,b,c){var d=a.a;d.push(new bf(b,c));b=d.length-1;a=a.a;for(c=a[b];0<b;)if(d=b-1>>1,a[d].a>c.a)a[b]=a[d],b=d;else break;a[b]=c}cf.prototype.A=function(){for(var a=this.a,b=[],c=a.length,d=0;d<c;d++)b.push(a[d].b);return b};\ncf.prototype.M=function(){for(var a=this.a,b=[],c=a.length,d=0;d<c;d++)b.push(a[d].a);return b};function ef(){cf.call(this)}u(ef,cf);function Y(a,b){this.f=new ef;Ye.call(this,a,b)}u(Y,Ye);g=Y.prototype;g.da=function(a,b){if(!a)return Y.H.da.call(this);df(this.f,void 0!==b?b:100,a);this.ra()};g.ra=function(){for(var a=this.f;0<a.a.length;){var b=this.da();if(b){var c=a,d=c.a,e=d.length;var f=d[0];if(0>=e)f=void 0;else{if(1==e)ua(d);else{d[0]=d.pop();d=0;c=c.a;e=c.length;for(var h=c[d];d<e>>1;){var m=2*d+1,v=2*d+2;m=v<e&&c[v].a<c[m].a?v:m;if(c[m].a>h.a)break;c[d]=c[m];d=m}c[d]=h}f=f.b}f.apply(this,[b])}else break}};\ng.ma=function(a){Y.H.ma.call(this,a);this.ra()};g.aa=function(){Y.H.aa.call(this);this.ra()};g.w=function(){Y.H.w.call(this);k.clearTimeout(void 0);ua(this.f.a);this.f=null};function Z(a,b,c,d){this.l=a;this.j=!!d;Y.call(this,b,c)}u(Z,Y);Z.prototype.pa=function(){var a=new T,b=this.l;b&&b.forEach(function(b,d){a.headers.set(d,b)});this.j&&(a.o=!0);return a};Z.prototype.sa=function(a){return!a.i&&!a.a};Qe.prototype.createWebChannel=Qe.prototype.a;W.prototype.send=W.prototype.gb;W.prototype.open=W.prototype.fb;W.prototype.close=W.prototype.close;Fc.NO_ERROR=0;Fc.TIMEOUT=8;Fc.HTTP_ERROR=6;Gc.COMPLETE=\"complete\";Kc.EventType=Lc;Lc.OPEN=\"a\";Lc.CLOSE=\"b\";Lc.ERROR=\"c\";Lc.MESSAGE=\"d\";B.prototype.listen=B.prototype.Ia;Z.prototype.getObject=Z.prototype.da;Z.prototype.releaseObject=Z.prototype.ob;T.prototype.listenOnce=T.prototype.Ja;T.prototype.getLastError=T.prototype.hb;T.prototype.getLastErrorCode=T.prototype.Ga;\nT.prototype.getStatus=T.prototype.W;T.prototype.getStatusText=T.prototype.Ha;T.prototype.getResponseJson=T.prototype.eb;T.prototype.getResponseText=T.prototype.V;T.prototype.getResponseText=T.prototype.V;T.prototype.send=T.prototype.fa;module.exports={createWebChannelTransport:Ue,ErrorCode:Fc,EventType:Gc,WebChannel:Kc,XhrIoPool:Z};}).call(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/webchannel-wrapper/dist/index.js\n// module id = Df3s\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.0.3',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/app/dist/index.cjs.js\n// module id = O4tu\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\r\n * signature.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return (!!decoded.signature &&\r\n        !!claims &&\r\n        typeof claims === 'object' &&\r\n        claims.hasOwnProperty('iat'));\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/index.cjs.js\n// module id = Pxmi\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = TToO\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","(function() {\n  var firebase = require('@firebase/app').default;\n  var g,aa=aa||{},k=this;function l(a){return\"string\"==typeof a}function ba(a){return\"boolean\"==typeof a}function ca(){}\nfunction da(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b}function ea(a){return null===a}function fa(a){return\"array\"==da(a)}function ha(a){var b=da(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function n(a){return\"function\"==da(a)}function q(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}var ia=\"closure_uid_\"+(1E9*Math.random()>>>0),ja=0;function ka(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction la(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function r(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?r=ka:r=la;return r.apply(null,arguments)}\nfunction ma(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}}var na=Date.now||function(){return+new Date};function t(a,b){function c(){}c.prototype=b.prototype;a.lb=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.cd=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};function oa(a){a.prototype.then=a.prototype.then;a.prototype.$goog_Thenable=!0}function pa(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}};function u(a){if(Error.captureStackTrace)Error.captureStackTrace(this,u);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))}t(u,Error);u.prototype.name=\"CustomError\";function qa(a,b){a=a.split(\"%s\");for(var c=\"\",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:\"%s\");u.call(this,c+a[d])}t(qa,u);qa.prototype.name=\"AssertionError\";function ra(a,b){throw new qa(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1));};function sa(a,b){this.c=a;this.f=b;this.b=0;this.a=null}sa.prototype.get=function(){if(0<this.b){this.b--;var a=this.a;this.a=a.next;a.next=null}else a=this.c();return a};function ta(a,b){a.f(b);100>a.b&&(a.b++,b.next=a.a,a.a=b)};function ua(){this.b=this.a=null}var wa=new sa(function(){return new va},function(a){a.reset()});ua.prototype.add=function(a,b){var c=wa.get();c.set(a,b);this.b?this.b.next=c:this.a=c;this.b=c};function xa(){var a=ya,b=null;a.a&&(b=a.a,a.a=a.a.next,a.a||(a.b=null),b.next=null);return b}function va(){this.next=this.b=this.a=null}va.prototype.set=function(a,b){this.a=a;this.b=b;this.next=null};va.prototype.reset=function(){this.next=this.b=this.a=null};var za=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if(l(a))return l(b)&&1==b.length?a.indexOf(b,0):-1;for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},v=Array.prototype.forEach?function(a,b,c){Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=l(a)?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};\nfunction Aa(a,b){var c=a.length,d=l(a)?a.split(\"\"):a;for(--c;0<=c;--c)c in d&&b.call(void 0,d[c],c,a)}\nvar Ba=Array.prototype.map?function(a,b){return Array.prototype.map.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=Array(c),e=l(a)?a.split(\"\"):a,f=0;f<c;f++)f in e&&(d[f]=b.call(void 0,e[f],f,a));return d},Ca=Array.prototype.some?function(a,b){return Array.prototype.some.call(a,b,void 0)}:function(a,b){for(var c=a.length,d=l(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a))return!0;return!1};\nfunction Da(a){a:{var b=Ea;for(var c=a.length,d=l(a)?a.split(\"\"):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:l(a)?a.charAt(b):a[b]}function Fa(a,b){return 0<=za(a,b)}function Ga(a,b){b=za(a,b);var c;(c=0<=b)&&Array.prototype.splice.call(a,b,1);return c}function Ha(a,b){var c=0;Aa(a,function(d,e){b.call(void 0,d,e,a)&&1==Array.prototype.splice.call(a,e,1).length&&c++})}function Ia(a){return Array.prototype.concat.apply([],arguments)}\nfunction Ja(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};function Ka(a,b){for(var c=a.split(\"%s\"),d=\"\",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")}var La=String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1]};\nfunction Ma(a){if(!Na.test(a))return a;-1!=a.indexOf(\"&\")&&(a=a.replace(Oa,\"&amp;\"));-1!=a.indexOf(\"<\")&&(a=a.replace(Pa,\"&lt;\"));-1!=a.indexOf(\">\")&&(a=a.replace(Qa,\"&gt;\"));-1!=a.indexOf('\"')&&(a=a.replace(Ra,\"&quot;\"));-1!=a.indexOf(\"'\")&&(a=a.replace(Sa,\"&#39;\"));-1!=a.indexOf(\"\\x00\")&&(a=a.replace(Ta,\"&#0;\"));return a}var Oa=/&/g,Pa=/</g,Qa=/>/g,Ra=/\"/g,Sa=/'/g,Ta=/\\x00/g,Na=/[\\x00&<>\"']/;function w(a,b){return-1!=a.indexOf(b)}function Ua(a,b){return a<b?-1:a>b?1:0};var Va;a:{var Wa=k.navigator;if(Wa){var Xa=Wa.userAgent;if(Xa){Va=Xa;break a}}Va=\"\"}function x(a){return w(Va,a)};function Ya(a,b){for(var c in a)b.call(void 0,a[c],c,a)}function Za(a){for(var b in a)return!1;return!0}function $a(a){var b={},c;for(c in a)b[c]=a[c];return b}var ab=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function bb(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<ab.length;f++)c=ab[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function cb(a){k.setTimeout(function(){throw a;},0)}var db;\nfunction eb(){var a=k.MessageChannel;\"undefined\"===typeof a&&\"undefined\"!==typeof window&&window.postMessage&&window.addEventListener&&!x(\"Presto\")&&(a=function(){var a=document.createElement(\"IFRAME\");a.style.display=\"none\";a.src=\"\";document.documentElement.appendChild(a);var b=a.contentWindow;a=b.document;a.open();a.write(\"\");a.close();var c=\"callImmediate\"+Math.random(),d=\"file:\"==b.location.protocol?\"*\":b.location.protocol+\"//\"+b.location.host;a=r(function(a){if((\"*\"==d||a.origin==d)&&a.data==\nc)this.port1.onmessage()},this);b.addEventListener(\"message\",a,!1);this.port1={};this.port2={postMessage:function(){b.postMessage(c,d)}}});if(\"undefined\"!==typeof a&&!x(\"Trident\")&&!x(\"MSIE\")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var a=c.tb;c.tb=null;a()}};return function(a){d.next={tb:a};d=d.next;b.port2.postMessage(0)}}return\"undefined\"!==typeof document&&\"onreadystatechange\"in document.createElement(\"SCRIPT\")?function(a){var b=document.createElement(\"SCRIPT\");\nb.onreadystatechange=function(){b.onreadystatechange=null;b.parentNode.removeChild(b);b=null;a();a=null};document.documentElement.appendChild(b)}:function(a){k.setTimeout(a,0)}};function fb(a,b){gb||hb();ib||(gb(),ib=!0);ya.add(a,b)}var gb;function hb(){if(k.Promise&&k.Promise.resolve){var a=k.Promise.resolve(void 0);gb=function(){a.then(jb)}}else gb=function(){var a=jb;!n(k.setImmediate)||k.Window&&k.Window.prototype&&!x(\"Edge\")&&k.Window.prototype.setImmediate==k.setImmediate?(db||(db=eb()),db(a)):k.setImmediate(a)}}var ib=!1,ya=new ua;function jb(){for(var a;a=xa();){try{a.a.call(a.b)}catch(b){cb(b)}ta(wa,a)}ib=!1};function y(a,b){this.a=kb;this.i=void 0;this.f=this.b=this.c=null;this.g=this.h=!1;if(a!=ca)try{var c=this;a.call(b,function(a){lb(c,mb,a)},function(a){if(!(a instanceof nb))try{if(a instanceof Error)throw a;throw Error(\"Promise rejected.\");}catch(e){}lb(c,ob,a)})}catch(d){lb(this,ob,d)}}var kb=0,mb=2,ob=3;function pb(){this.next=this.f=this.b=this.g=this.a=null;this.c=!1}pb.prototype.reset=function(){this.f=this.b=this.g=this.a=null;this.c=!1};var qb=new sa(function(){return new pb},function(a){a.reset()});\nfunction rb(a,b,c){var d=qb.get();d.g=a;d.b=b;d.f=c;return d}function A(a){if(a instanceof y)return a;var b=new y(ca);lb(b,mb,a);return b}function B(a){return new y(function(b,c){c(a)})}function sb(a,b,c){tb(a,b,c,null)||fb(ma(b,a))}function ub(a){return new y(function(b,c){var d=a.length,e=[];if(d)for(var f=function(a,c){d--;e[a]=c;0==d&&b(e)},h=function(a){c(a)},m=0,p;m<a.length;m++)p=a[m],sb(p,ma(f,m),h);else b(e)})}\nfunction vb(a){return new y(function(b){var c=a.length,d=[];if(c)for(var e=function(a,e,f){c--;d[a]=e?{Zb:!0,value:f}:{Zb:!1,reason:f};0==c&&b(d)},f=0,h;f<a.length;f++)h=a[f],sb(h,ma(e,f,!0),ma(e,f,!1));else b(d)})}y.prototype.then=function(a,b,c){return wb(this,n(a)?a:null,n(b)?b:null,c)};oa(y);g=y.prototype;g.ia=function(a,b){a=rb(a,a,b);a.c=!0;xb(this,a);return this};g.s=function(a,b){return wb(this,null,a,b)};g.cancel=function(a){this.a==kb&&fb(function(){var b=new nb(a);yb(this,b)},this)};\nfunction yb(a,b){if(a.a==kb)if(a.c){var c=a.c;if(c.b){for(var d=0,e=null,f=null,h=c.b;h&&(h.c||(d++,h.a==a&&(e=h),!(e&&1<d)));h=h.next)e||(f=h);e&&(c.a==kb&&1==d?yb(c,b):(f?(d=f,d.next==c.f&&(c.f=d),d.next=d.next.next):zb(c),Ab(c,e,ob,b)))}a.c=null}else lb(a,ob,b)}function xb(a,b){a.b||a.a!=mb&&a.a!=ob||Bb(a);a.f?a.f.next=b:a.b=b;a.f=b}\nfunction wb(a,b,c,d){var e=rb(null,null,null);e.a=new y(function(a,h){e.g=b?function(c){try{var e=b.call(d,c);a(e)}catch(z){h(z)}}:a;e.b=c?function(b){try{var e=c.call(d,b);void 0===e&&b instanceof nb?h(b):a(e)}catch(z){h(z)}}:h});e.a.c=a;xb(a,e);return e.a}g.Lc=function(a){this.a=kb;lb(this,mb,a)};g.Mc=function(a){this.a=kb;lb(this,ob,a)};\nfunction lb(a,b,c){a.a==kb&&(a===c&&(b=ob,c=new TypeError(\"Promise cannot resolve to itself\")),a.a=1,tb(c,a.Lc,a.Mc,a)||(a.i=c,a.a=b,a.c=null,Bb(a),b!=ob||c instanceof nb||Cb(a,c)))}function tb(a,b,c,d){if(a instanceof y)return xb(a,rb(b||ca,c||null,d)),!0;if(pa(a))return a.then(b,c,d),!0;if(q(a))try{var e=a.then;if(n(e))return Db(a,e,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1}\nfunction Db(a,b,c,d,e){function f(a){m||(m=!0,d.call(e,a))}function h(a){m||(m=!0,c.call(e,a))}var m=!1;try{b.call(a,h,f)}catch(p){f(p)}}function Bb(a){a.h||(a.h=!0,fb(a.Ub,a))}function zb(a){var b=null;a.b&&(b=a.b,a.b=b.next,b.next=null);a.b||(a.f=null);return b}g.Ub=function(){for(var a;a=zb(this);)Ab(this,a,this.a,this.i);this.h=!1};\nfunction Ab(a,b,c,d){if(c==ob&&b.b&&!b.c)for(;a&&a.g;a=a.c)a.g=!1;if(b.a)b.a.c=null,Eb(b,c,d);else try{b.c?b.g.call(b.f):Eb(b,c,d)}catch(e){Fb.call(null,e)}ta(qb,b)}function Eb(a,b,c){b==mb?a.g.call(a.f,c):a.b&&a.b.call(a.f,c)}function Cb(a,b){a.g=!0;fb(function(){a.g&&Fb.call(null,b)})}var Fb=cb;function nb(a){u.call(this,a)}t(nb,u);nb.prototype.name=\"cancel\";function Gb(){0!=Hb&&(Ib[this[ia]||(this[ia]=++ja)]=this);this.pa=this.pa;this.ja=this.ja}var Hb=0,Ib={};Gb.prototype.pa=!1;function Jb(a){if(!a.pa&&(a.pa=!0,a.ua(),0!=Hb)){var b=a[ia]||(a[ia]=++ja);if(0!=Hb&&a.ja&&0<a.ja.length)throw Error(a+\" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.\");delete Ib[b]}}Gb.prototype.ua=function(){if(this.ja)for(;this.ja.length;)this.ja.shift()()};function Kb(a){Kb[\" \"](a);return a}Kb[\" \"]=ca;function Lb(a,b){var c=Mb;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var Nb=x(\"Opera\"),Ob=x(\"Trident\")||x(\"MSIE\"),Pb=x(\"Edge\"),Qb=Pb||Ob,Rb=x(\"Gecko\")&&!(w(Va.toLowerCase(),\"webkit\")&&!x(\"Edge\"))&&!(x(\"Trident\")||x(\"MSIE\"))&&!x(\"Edge\"),Sb=w(Va.toLowerCase(),\"webkit\")&&!x(\"Edge\");function Tb(){var a=k.document;return a?a.documentMode:void 0}var Ub;\na:{var Vb=\"\",Wb=function(){var a=Va;if(Rb)return/rv:([^\\);]+)(\\)|;)/.exec(a);if(Pb)return/Edge\\/([\\d\\.]+)/.exec(a);if(Ob)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(Sb)return/WebKit\\/(\\S+)/.exec(a);if(Nb)return/(?:Version)[ \\/]?(\\S+)/.exec(a)}();Wb&&(Vb=Wb?Wb[1]:\"\");if(Ob){var Xb=Tb();if(null!=Xb&&Xb>parseFloat(Vb)){Ub=String(Xb);break a}}Ub=Vb}var Mb={};\nfunction Yb(a){return Lb(a,function(){for(var b=0,c=La(String(Ub)).split(\".\"),d=La(String(a)).split(\".\"),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var h=c[f]||\"\",m=d[f]||\"\";do{h=/(\\d*)(\\D*)(.*)/.exec(h)||[\"\",\"\",\"\",\"\"];m=/(\\d*)(\\D*)(.*)/.exec(m)||[\"\",\"\",\"\",\"\"];if(0==h[0].length&&0==m[0].length)break;b=Ua(0==h[1].length?0:parseInt(h[1],10),0==m[1].length?0:parseInt(m[1],10))||Ua(0==h[2].length,0==m[2].length)||Ua(h[2],m[2]);h=h[3];m=m[3]}while(0==b)}return 0<=b})}var Zb;var $b=k.document;\nZb=$b&&Ob?Tb()||(\"CSS1Compat\"==$b.compatMode?parseInt(Ub,10):5):void 0;var ac=Object.freeze||function(a){return a};var bc=!Ob||9<=Number(Zb),cc=Ob&&!Yb(\"9\"),dc=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});k.addEventListener(\"test\",ca,b);k.removeEventListener(\"test\",ca,b);return a}();function C(a,b){this.type=a;this.b=this.target=b;this.Gb=!0}C.prototype.preventDefault=function(){this.Gb=!1};function ec(a,b){C.call(this,a?a.type:\"\");this.relatedTarget=this.b=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType=\"\";this.a=null;if(a){var c=this.type=a.type,d=a.changedTouches?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.b=b;if(b=a.relatedTarget){if(Rb){a:{try{Kb(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else\"mouseover\"==c?b=\na.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;null===d?(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0):(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=\na.metaKey;this.pointerId=a.pointerId||0;this.pointerType=l(a.pointerType)?a.pointerType:fc[a.pointerType]||\"\";this.a=a;a.defaultPrevented&&this.preventDefault()}}t(ec,C);var fc=ac({2:\"touch\",3:\"pen\",4:\"mouse\"});ec.prototype.preventDefault=function(){ec.lb.preventDefault.call(this);var a=this.a;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,cc)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};ec.prototype.f=function(){return this.a};var gc=\"closure_listenable_\"+(1E6*Math.random()|0),hc=0;function ic(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.La=e;this.key=++hc;this.na=this.Ia=!1}function jc(a){a.na=!0;a.listener=null;a.proxy=null;a.src=null;a.La=null};function kc(a){this.src=a;this.a={};this.b=0}kc.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.a[f];a||(a=this.a[f]=[],this.b++);var h=lc(a,b,d,e);-1<h?(b=a[h],c||(b.Ia=!1)):(b=new ic(b,this.src,f,!!d,e),b.Ia=c,a.push(b));return b};function mc(a,b){var c=b.type;c in a.a&&Ga(a.a[c],b)&&(jc(b),0==a.a[c].length&&(delete a.a[c],a.b--))}function lc(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.na&&f.listener==b&&f.capture==!!c&&f.La==d)return e}return-1};var nc=\"closure_lm_\"+(1E6*Math.random()|0),oc={},qc=0;function rc(a,b,c,d,e){if(d&&d.once)sc(a,b,c,d,e);else if(fa(b))for(var f=0;f<b.length;f++)rc(a,b[f],c,d,e);else c=tc(c),a&&a[gc]?uc(a,b,c,q(d)?!!d.capture:!!d,e):vc(a,b,c,!1,d,e)}\nfunction vc(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var h=q(e)?!!e.capture:!!e,m=wc(a);m||(a[nc]=m=new kc(a));c=m.add(b,c,d,h,f);if(!c.proxy){d=xc();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)dc||(e=h),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(yc(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");qc++}}\nfunction xc(){var a=zc,b=bc?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b}function sc(a,b,c,d,e){if(fa(b))for(var f=0;f<b.length;f++)sc(a,b[f],c,d,e);else c=tc(c),a&&a[gc]?Ac(a,b,c,q(d)?!!d.capture:!!d,e):vc(a,b,c,!0,d,e)}\nfunction D(a,b,c,d,e){if(fa(b))for(var f=0;f<b.length;f++)D(a,b[f],c,d,e);else(d=q(d)?!!d.capture:!!d,c=tc(c),a&&a[gc])?(a=a.m,b=String(b).toString(),b in a.a&&(f=a.a[b],c=lc(f,c,d,e),-1<c&&(jc(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.a[b],a.b--)))):a&&(a=wc(a))&&(b=a.a[b.toString()],a=-1,b&&(a=lc(b,c,d,e)),(c=-1<a?b[a]:null)&&Bc(c))}\nfunction Bc(a){if(\"number\"!=typeof a&&a&&!a.na){var b=a.src;if(b&&b[gc])mc(b.m,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(yc(c),d):b.addListener&&b.removeListener&&b.removeListener(d);qc--;(c=wc(b))?(mc(c,a),0==c.b&&(c.src=null,b[nc]=null)):jc(a)}}}function yc(a){return a in oc?oc[a]:oc[a]=\"on\"+a}\nfunction Cc(a,b,c,d){var e=!0;if(a=wc(a))if(b=a.a[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.na&&(f=Dc(f,d),e=e&&!1!==f)}return e}function Dc(a,b){var c=a.listener,d=a.La||a.src;a.Ia&&Bc(a);return c.call(d,b)}\nfunction zc(a,b){if(a.na)return!0;if(!bc){if(!b)a:{b=[\"window\",\"event\"];for(var c=k,d=0;d<b.length;d++)if(c=c[b[d]],null==c){b=null;break a}b=c}d=b;b=new ec(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(h){e=!0}if(e||void 0==d.returnValue)d.returnValue=!0}d=[];for(e=b.b;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;0<=e;e--){b.b=d[e];var f=Cc(d[e],a,!0,b);c=c&&f}for(e=0;e<d.length;e++)b.b=d[e],f=Cc(d[e],a,!1,b),c=c&&f}return c}return Dc(a,\nnew ec(b,this))}function wc(a){a=a[nc];return a instanceof kc?a:null}var Ec=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function tc(a){if(n(a))return a;a[Ec]||(a[Ec]=function(b){return a.handleEvent(b)});return a[Ec]};function E(){Gb.call(this);this.m=new kc(this);this.Nb=this;this.Ua=null}t(E,Gb);E.prototype[gc]=!0;E.prototype.addEventListener=function(a,b,c,d){rc(this,a,b,c,d)};E.prototype.removeEventListener=function(a,b,c,d){D(this,a,b,c,d)};\nE.prototype.dispatchEvent=function(a){var b,c=this.Ua;if(c)for(b=[];c;c=c.Ua)b.push(c);c=this.Nb;var d=a.type||a;if(l(a))a=new C(a,c);else if(a instanceof C)a.target=a.target||c;else{var e=a;a=new C(d,c);bb(a,e)}e=!0;if(b)for(var f=b.length-1;0<=f;f--){var h=a.b=b[f];e=Fc(h,d,!0,a)&&e}h=a.b=c;e=Fc(h,d,!0,a)&&e;e=Fc(h,d,!1,a)&&e;if(b)for(f=0;f<b.length;f++)h=a.b=b[f],e=Fc(h,d,!1,a)&&e;return e};\nE.prototype.ua=function(){E.lb.ua.call(this);if(this.m){var a=this.m,b=0,c;for(c in a.a){for(var d=a.a[c],e=0;e<d.length;e++)++b,jc(d[e]);delete a.a[c];a.b--}}this.Ua=null};function uc(a,b,c,d,e){a.m.add(String(b),c,!1,d,e)}function Ac(a,b,c,d,e){a.m.add(String(b),c,!0,d,e)}\nfunction Fc(a,b,c,d){b=a.m.a[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var h=b[f];if(h&&!h.na&&h.capture==c){var m=h.listener,p=h.La||h.src;h.Ia&&mc(a.m,h);e=!1!==m.call(p,d)&&e}}return e&&0!=d.Gb};function Gc(a,b,c){if(n(a))c&&(a=r(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)}function Hc(a){var b=null;return(new y(function(c,d){b=Gc(function(){c(void 0)},a);-1==b&&d(Error(\"Failed to schedule timer.\"))})).s(function(a){k.clearTimeout(b);throw a;})};function Ic(a){if(a.S&&\"function\"==typeof a.S)return a.S();if(l(a))return a.split(\"\");if(ha(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}b=[];c=0;for(d in a)b[c++]=a[d];return b}function Jc(a){if(a.U&&\"function\"==typeof a.U)return a.U();if(!a.S||\"function\"!=typeof a.S){if(ha(a)||l(a)){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}b=[];c=0;for(var d in a)b[c++]=d;return b}}\nfunction Kc(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(ha(a)||l(a))v(a,b,void 0);else for(var c=Jc(a),d=Ic(a),e=d.length,f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)};function Lc(a,b){this.b={};this.a=[];this.c=0;var c=arguments.length;if(1<c){if(c%2)throw Error(\"Uneven number of arguments\");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else if(a)if(a instanceof Lc)for(c=a.U(),d=0;d<c.length;d++)this.set(c[d],a.get(c[d]));else for(d in a)this.set(d,a[d])}g=Lc.prototype;g.S=function(){Mc(this);for(var a=[],b=0;b<this.a.length;b++)a.push(this.b[this.a[b]]);return a};g.U=function(){Mc(this);return this.a.concat()};\ng.clear=function(){this.b={};this.c=this.a.length=0};function Mc(a){if(a.c!=a.a.length){for(var b=0,c=0;b<a.a.length;){var d=a.a[b];Nc(a.b,d)&&(a.a[c++]=d);b++}a.a.length=c}if(a.c!=a.a.length){var e={};for(c=b=0;b<a.a.length;)d=a.a[b],Nc(e,d)||(a.a[c++]=d,e[d]=1),b++;a.a.length=c}}g.get=function(a,b){return Nc(this.b,a)?this.b[a]:b};g.set=function(a,b){Nc(this.b,a)||(this.c++,this.a.push(a));this.b[a]=b};\ng.forEach=function(a,b){for(var c=this.U(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};function Nc(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var Oc=/^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;function Qc(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};function Rc(a,b){this.b=this.m=this.c=\"\";this.i=null;this.h=this.g=\"\";this.f=!1;if(a instanceof Rc){this.f=void 0!==b?b:a.f;Sc(this,a.c);this.m=a.m;this.b=a.b;Tc(this,a.i);this.g=a.g;b=a.a;var c=new Uc;c.c=b.c;b.a&&(c.a=new Lc(b.a),c.b=b.b);Vc(this,c);this.h=a.h}else a&&(c=String(a).match(Oc))?(this.f=!!b,Sc(this,c[1]||\"\",!0),this.m=Wc(c[2]||\"\"),this.b=Wc(c[3]||\"\",!0),Tc(this,c[4]),this.g=Wc(c[5]||\"\",!0),Vc(this,c[6]||\"\",!0),this.h=Wc(c[7]||\"\")):(this.f=!!b,this.a=new Uc(null,this.f))}\nRc.prototype.toString=function(){var a=[],b=this.c;b&&a.push(Xc(b,Yc,!0),\":\");var c=this.b;if(c||\"file\"==b)a.push(\"//\"),(b=this.m)&&a.push(Xc(b,Yc,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.i,null!=c&&a.push(\":\",String(c));if(c=this.g)this.b&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(Xc(c,\"/\"==c.charAt(0)?Zc:$c,!0));(c=this.a.toString())&&a.push(\"?\",c);(c=this.h)&&a.push(\"#\",Xc(c,ad));return a.join(\"\")};\nfunction Sc(a,b,c){a.c=c?Wc(b,!0):b;a.c&&(a.c=a.c.replace(/:$/,\"\"))}function Tc(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.i=b}else a.i=null}function Vc(a,b,c){b instanceof Uc?(a.a=b,bd(a.a,a.f)):(c||(b=Xc(b,cd)),a.a=new Uc(b,a.f))}function F(a,b,c){a.a.set(b,c)}function dd(a,b){return a.a.get(b)}function ed(a){return a instanceof Rc?new Rc(a):new Rc(a,void 0)}function fd(a,b){var c=new Rc(null,void 0);Sc(c,\"https\");a&&(c.b=a);b&&(c.g=b);return c}\nfunction Wc(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}function Xc(a,b,c){return l(a)?(a=encodeURI(a).replace(b,gd),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function gd(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}var Yc=/[#\\/\\?@]/g,$c=/[#\\?:]/g,Zc=/[#\\?]/g,cd=/[#\\?@]/g,ad=/#/g;function Uc(a,b){this.b=this.a=null;this.c=a||null;this.f=!!b}\nfunction hd(a){a.a||(a.a=new Lc,a.b=0,a.c&&Qc(a.c,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))}function id(a){var b=Jc(a);if(\"undefined\"==typeof b)throw Error(\"Keys are undefined\");var c=new Uc(null,void 0);a=Ic(a);for(var d=0;d<b.length;d++){var e=b[d],f=a[d];fa(f)?jd(c,e,f):c.add(e,f)}return c}g=Uc.prototype;g.add=function(a,b){hd(this);this.c=null;a=kd(this,a);var c=this.a.get(a);c||this.a.set(a,c=[]);c.push(b);this.b+=1;return this};\nfunction ld(a,b){hd(a);b=kd(a,b);Nc(a.a.b,b)&&(a.c=null,a.b-=a.a.get(b).length,a=a.a,Nc(a.b,b)&&(delete a.b[b],a.c--,a.a.length>2*a.c&&Mc(a)))}g.clear=function(){this.a=this.c=null;this.b=0};function md(a,b){hd(a);b=kd(a,b);return Nc(a.a.b,b)}g.forEach=function(a,b){hd(this);this.a.forEach(function(c,d){v(c,function(c){a.call(b,c,d,this)},this)},this)};g.U=function(){hd(this);for(var a=this.a.S(),b=this.a.U(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};\ng.S=function(a){hd(this);var b=[];if(l(a))md(this,a)&&(b=Ia(b,this.a.get(kd(this,a))));else{a=this.a.S();for(var c=0;c<a.length;c++)b=Ia(b,a[c])}return b};g.set=function(a,b){hd(this);this.c=null;a=kd(this,a);md(this,a)&&(this.b-=this.a.get(a).length);this.a.set(a,[b]);this.b+=1;return this};g.get=function(a,b){a=a?this.S(a):[];return 0<a.length?String(a[0]):b};function jd(a,b,c){ld(a,b);0<c.length&&(a.c=null,a.a.set(kd(a,b),Ja(c)),a.b+=c.length)}\ng.toString=function(){if(this.c)return this.c;if(!this.a)return\"\";for(var a=[],b=this.a.U(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.S(d);for(var f=0;f<d.length;f++){var h=e;\"\"!==d[f]&&(h+=\"=\"+encodeURIComponent(String(d[f])));a.push(h)}}return this.c=a.join(\"&\")};function kd(a,b){b=String(b);a.f&&(b=b.toLowerCase());return b}function bd(a,b){b&&!a.f&&(hd(a),a.c=null,a.a.forEach(function(a,b){var c=b.toLowerCase();b!=c&&(ld(this,b),jd(this,c,a))},a));a.f=b};var nd=!Ob||9<=Number(Zb);function od(){this.a=\"\";this.b=pd}od.prototype.ma=!0;od.prototype.la=function(){return this.a};od.prototype.toString=function(){return\"Const{\"+this.a+\"}\"};function qd(a){if(a instanceof od&&a.constructor===od&&a.b===pd)return a.a;ra(\"expected object of type Const, got '\"+a+\"'\");return\"type_error:Const\"}var pd={};function rd(a){var b=new od;b.a=a;return b}rd(\"\");function sd(){this.a=\"\";this.b=td}sd.prototype.ma=!0;sd.prototype.la=function(){return this.a};sd.prototype.toString=function(){return\"TrustedResourceUrl{\"+this.a+\"}\"};function ud(a){if(a instanceof sd&&a.constructor===sd&&a.b===td)return a.a;ra(\"expected object of type TrustedResourceUrl, got '\"+a+\"' of type \"+da(a));return\"type_error:TrustedResourceUrl\"}\nfunction vd(a,b){var c=qd(a);if(!wd.test(c))throw Error(\"Invalid TrustedResourceUrl format: \"+c);a=c.replace(xd,function(a,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, \"'+e+'\", in format string, \"'+c+'\", but no valid label mapping found in args: '+JSON.stringify(b));a=b[e];return a instanceof od?qd(a):encodeURIComponent(String(a))});return yd(a)}var xd=/%{(\\w+)}/g,wd=/^(?:https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|^\\/[^\\/\\\\]|^about:blank#/i,td={};\nfunction yd(a){var b=new sd;b.a=a;return b};function zd(){this.a=\"\";this.b=Ad}zd.prototype.ma=!0;zd.prototype.la=function(){return this.a};zd.prototype.toString=function(){return\"SafeUrl{\"+this.a+\"}\"};function Bd(a){if(a instanceof zd&&a.constructor===zd&&a.b===Ad)return a.a;ra(\"expected object of type SafeUrl, got '\"+a+\"' of type \"+da(a));return\"type_error:SafeUrl\"}var Cd=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;\nfunction Dd(a){if(a instanceof zd)return a;a=a.ma?a.la():String(a);Cd.test(a)||(a=\"about:invalid#zClosurez\");return Ed(a)}var Ad={};function Ed(a){var b=new zd;b.a=a;return b}Ed(\"about:blank\");function Fd(){this.a=\"\";this.b=Gd}Fd.prototype.ma=!0;Fd.prototype.la=function(){return this.a};Fd.prototype.toString=function(){return\"SafeHtml{\"+this.a+\"}\"};function Hd(a){if(a instanceof Fd&&a.constructor===Fd&&a.b===Gd)return a.a;ra(\"expected object of type SafeHtml, got '\"+a+\"' of type \"+da(a));return\"type_error:SafeHtml\"}var Gd={};function Id(a){var b=new Fd;b.a=a;return b}Id(\"<!DOCTYPE html>\");Id(\"\");Id(\"<br>\");function Jd(a){var b=document;return l(a)?b.getElementById(a):a}function Kd(a,b){Ya(b,function(b,d){b&&b.ma&&(b=b.la());\"style\"==d?a.style.cssText=b:\"class\"==d?a.className=b:\"for\"==d?a.htmlFor=b:Ld.hasOwnProperty(d)?a.setAttribute(Ld[d],b):0==d.lastIndexOf(\"aria-\",0)||0==d.lastIndexOf(\"data-\",0)?a.setAttribute(d,b):a[d]=b})}\nvar Ld={cellpadding:\"cellPadding\",cellspacing:\"cellSpacing\",colspan:\"colSpan\",frameborder:\"frameBorder\",height:\"height\",maxlength:\"maxLength\",nonce:\"nonce\",role:\"role\",rowspan:\"rowSpan\",type:\"type\",usemap:\"useMap\",valign:\"vAlign\",width:\"width\"};\nfunction Md(a,b,c){var d=arguments,e=document,f=String(d[0]),h=d[1];if(!nd&&h&&(h.name||h.type)){f=[\"<\",f];h.name&&f.push(' name=\"',Ma(h.name),'\"');if(h.type){f.push(' type=\"',Ma(h.type),'\"');var m={};bb(m,h);delete m.type;h=m}f.push(\">\");f=f.join(\"\")}f=e.createElement(f);h&&(l(h)?f.className=h:fa(h)?f.className=h.join(\" \"):Kd(f,h));2<d.length&&Nd(e,f,d);return f}\nfunction Nd(a,b,c){function d(c){c&&b.appendChild(l(c)?a.createTextNode(c):c)}for(var e=2;e<c.length;e++){var f=c[e];!ha(f)||q(f)&&0<f.nodeType?d(f):v(Od(f)?Ja(f):f,d)}}function Od(a){if(a&&\"number\"==typeof a.length){if(q(a))return\"function\"==typeof a.item||\"string\"==typeof a.item;if(n(a))return\"function\"==typeof a.item}return!1};function Pd(a){var b=[];Qd(new Rd,a,b);return b.join(\"\")}function Rd(){}\nfunction Qd(a,b,c){if(null==b)c.push(\"null\");else{if(\"object\"==typeof b){if(fa(b)){var d=b;b=d.length;c.push(\"[\");for(var e=\"\",f=0;f<b;f++)c.push(e),Qd(a,d[f],c),e=\",\";c.push(\"]\");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push(\"{\");e=\"\";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(f=b[d],\"function\"!=typeof f&&(c.push(e),Sd(d,c),c.push(\":\"),Qd(a,f,c),e=\",\"));c.push(\"}\");return}}switch(typeof b){case \"string\":Sd(b,c);break;case \"number\":c.push(isFinite(b)&&\n!isNaN(b)?String(b):\"null\");break;case \"boolean\":c.push(String(b));break;case \"function\":c.push(\"null\");break;default:throw Error(\"Unknown type: \"+typeof b);}}}var Td={'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"/\":\"\\\\/\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\u000b\"},Ud=/\\uffff/.test(\"\\uffff\")?/[\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g:/[\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\nfunction Sd(a,b){b.push('\"',a.replace(Ud,function(a){var b=Td[a];b||(b=\"\\\\u\"+(a.charCodeAt(0)|65536).toString(16).substr(1),Td[a]=b);return b}),'\"')};function Vd(){var a=G();return Ob&&!!Zb&&11==Zb||/Edge\\/\\d+/.test(a)}function Wd(){return k.window&&k.window.location.href||self&&self.location&&self.location.href||\"\"}function Xd(a,b){b=b||k.window;var c=\"about:blank\";a&&(c=Bd(Dd(a)));b.location.href=c}function Yd(a,b){var c=[],d;for(d in a)d in b?typeof a[d]!=typeof b[d]?c.push(d):\"object\"==typeof a[d]&&null!=a[d]&&null!=b[d]?0<Yd(a[d],b[d]).length&&c.push(d):a[d]!==b[d]&&c.push(d):c.push(d);for(d in b)d in a||c.push(d);return c}\nfunction Zd(){var a=G();a=$d(a)!=ae?null:(a=a.match(/\\sChrome\\/(\\d+)/i))&&2==a.length?parseInt(a[1],10):null;return a&&30>a?!1:!Ob||!Zb||9<Zb}function be(a){a=(a||G()).toLowerCase();return a.match(/android/)||a.match(/webos/)||a.match(/iphone|ipad|ipod/)||a.match(/blackberry/)||a.match(/windows phone/)||a.match(/iemobile/)?!0:!1}function ce(a){a=a||k.window;try{a.close()}catch(b){}}\nfunction de(a,b,c){var d=Math.floor(1E9*Math.random()).toString();b=b||500;c=c||600;var e=(window.screen.availHeight-c)/2,f=(window.screen.availWidth-b)/2;b={width:b,height:c,top:0<e?e:0,left:0<f?f:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1};c=G().toLowerCase();d&&(b.target=d,w(c,\"crios/\")&&(b.target=\"_blank\"));$d(G())==ee&&(a=a||\"http://localhost\",b.scrollbars=!0);c=a||\"\";(a=b)||(a={});d=window;b=c instanceof zd?c:Dd(\"undefined\"!=typeof c.href?c.href:String(c));c=a.target||c.target;e=[];\nfor(h in a)switch(h){case \"width\":case \"height\":case \"top\":case \"left\":e.push(h+\"=\"+a[h]);break;case \"target\":case \"noopener\":case \"noreferrer\":break;default:e.push(h+\"=\"+(a[h]?1:0))}var h=e.join(\",\");(x(\"iPhone\")&&!x(\"iPod\")&&!x(\"iPad\")||x(\"iPad\")||x(\"iPod\"))&&d.navigator&&d.navigator.standalone&&c&&\"_self\"!=c?(h=d.document.createElement(\"A\"),b instanceof zd||b instanceof zd||(b=b.ma?b.la():String(b),Cd.test(b)||(b=\"about:invalid#zClosurez\"),b=Ed(b)),h.href=Bd(b),h.setAttribute(\"target\",c),a.noreferrer&&\nh.setAttribute(\"rel\",\"noreferrer\"),a=document.createEvent(\"MouseEvent\"),a.initMouseEvent(\"click\",!0,!0,d,1),h.dispatchEvent(a),h={}):a.noreferrer?(h=d.open(\"\",c,h),a=Bd(b),h&&(Qb&&w(a,\";\")&&(a=\"'\"+a.replace(/'/g,\"%27\")+\"'\"),h.opener=null,rd(\"b/12014412, meta tag with sanitized URL\"),a='<meta name=\"referrer\" content=\"no-referrer\"><meta http-equiv=\"refresh\" content=\"0; url='+Ma(a)+'\">',a=Id(a),h.document.write(Hd(a)),h.document.close())):(h=d.open(Bd(b),c,h))&&a.noopener&&(h.opener=null);if(h)try{h.focus()}catch(m){}return h}\nfunction fe(a){return new y(function(b){function c(){Hc(2E3).then(function(){if(!a||a.closed)b();else return c()})}return c()})}var ge=/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;function he(){var a=null;return(new y(function(b){\"complete\"==k.document.readyState?b():(a=function(){b()},sc(window,\"load\",a))})).s(function(b){D(window,\"load\",a);throw b;})}\nfunction ie(){return je(void 0)?he().then(function(){return new y(function(a,b){var c=k.document,d=setTimeout(function(){b(Error(\"Cordova framework is not ready.\"))},1E3);c.addEventListener(\"deviceready\",function(){clearTimeout(d);a()},!1)})}):B(Error(\"Cordova must run in an Android or iOS file scheme.\"))}function je(a){a=a||G();return!(\"file:\"!==ke()||!a.toLowerCase().match(/iphone|ipad|ipod|android/))}function le(){var a=k.window;try{return!(!a||a==a.top)}catch(b){return!1}}\nfunction me(){return\"object\"!==typeof k.window&&\"function\"===typeof k.importScripts}function ne(){return firebase.INTERNAL.hasOwnProperty(\"reactNative\")?\"ReactNative\":firebase.INTERNAL.hasOwnProperty(\"node\")?\"Node\":me()?\"Worker\":\"Browser\"}function oe(){var a=ne();return\"ReactNative\"===a||\"Node\"===a}function pe(){for(var a=50,b=[];0<a;)b.push(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(Math.floor(62*Math.random()))),a--;return b.join(\"\")}var ee=\"Firefox\",ae=\"Chrome\";\nfunction $d(a){var b=a.toLowerCase();if(w(b,\"opera/\")||w(b,\"opr/\")||w(b,\"opios/\"))return\"Opera\";if(w(b,\"iemobile\"))return\"IEMobile\";if(w(b,\"msie\")||w(b,\"trident/\"))return\"IE\";if(w(b,\"edge/\"))return\"Edge\";if(w(b,\"firefox/\"))return ee;if(w(b,\"silk/\"))return\"Silk\";if(w(b,\"blackberry\"))return\"Blackberry\";if(w(b,\"webos\"))return\"Webos\";if(!w(b,\"safari/\")||w(b,\"chrome/\")||w(b,\"crios/\")||w(b,\"android\"))if(!w(b,\"chrome/\")&&!w(b,\"crios/\")||w(b,\"edge/\")){if(w(b,\"android\"))return\"Android\";if((a=a.match(/([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/))&&\n2==a.length)return a[1]}else return ae;else return\"Safari\";return\"Other\"}var qe={Sc:\"FirebaseCore-web\",Uc:\"FirebaseUI-web\"};function re(a,b){b=b||[];var c=[],d={},e;for(e in qe)d[qe[e]]=!0;for(e=0;e<b.length;e++)\"undefined\"!==typeof d[b[e]]&&(delete d[b[e]],c.push(b[e]));c.sort();b=c;b.length||(b=[\"FirebaseCore-web\"]);c=ne();\"Browser\"===c?(d=G(),c=$d(d)):\"Worker\"===c&&(d=G(),c=$d(d)+\"-\"+c);return c+\"/JsCore/\"+a+\"/\"+b.join(\",\")}function G(){return k.navigator&&k.navigator.userAgent||\"\"}\nfunction H(a,b){a=a.split(\".\");b=b||k;for(var c=0;c<a.length&&\"object\"==typeof b&&null!=b;c++)b=b[a[c]];c!=a.length&&(b=void 0);return b}function se(){try{var a=k.localStorage,b=te();if(a)return a.setItem(b,\"1\"),a.removeItem(b),Vd()?!!k.indexedDB:!0}catch(c){return me()&&!!k.indexedDB}return!1}function ue(){return(ve()||\"chrome-extension:\"===ke()||je())&&!oe()&&se()&&!me()}function ve(){return\"http:\"===ke()||\"https:\"===ke()}function ke(){return k.location&&k.location.protocol||null}\nfunction we(a){a=a||G();return be(a)||$d(a)==ee?!1:!0}function xe(a){return\"undefined\"===typeof a?null:Pd(a)}function ye(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&null!==a[c]&&void 0!==a[c]&&(b[c]=a[c]);return b}function ze(a){if(null!==a)return JSON.parse(a)}function te(a){return a?a:Math.floor(1E9*Math.random()).toString()}function Ae(a){a=a||G();return\"Safari\"==$d(a)||a.toLowerCase().match(/iphone|ipad|ipod/)?!1:!0}\nfunction Be(){var a=k.___jsl;if(a&&a.H)for(var b in a.H)if(a.H[b].r=a.H[b].r||[],a.H[b].L=a.H[b].L||[],a.H[b].r=a.H[b].L.concat(),a.CP)for(var c=0;c<a.CP.length;c++)a.CP[c]=null}function Ce(a,b){if(a>b)throw Error(\"Short delay should be less than long delay!\");this.a=a;this.c=b;a=G();b=ne();this.b=be(a)||\"ReactNative\"===b}\nCe.prototype.get=function(){var a=k.navigator;return(a&&\"boolean\"===typeof a.onLine&&(ve()||\"chrome-extension:\"===ke()||\"undefined\"!==typeof a.connection)?a.onLine:1)?this.b?this.c:this.a:Math.min(5E3,this.a)};function De(){var a=k.document;return a&&\"undefined\"!==typeof a.visibilityState?\"visible\"==a.visibilityState:!0}\nfunction Ee(){var a=k.document,b=null;return De()||!a?A():(new y(function(c){b=function(){De()&&(a.removeEventListener(\"visibilitychange\",b,!1),c())};a.addEventListener(\"visibilitychange\",b,!1)})).s(function(c){a.removeEventListener(\"visibilitychange\",b,!1);throw c;})}function Fe(a){try{var b=new Date(parseInt(a,10));if(!isNaN(b.getTime())&&!/[^0-9]/.test(a))return b.toUTCString()}catch(c){}return null}function Ge(){return!(!H(\"fireauth.oauthhelper\",k)&&!H(\"fireauth.iframe\",k))};var He={};function Ie(a){He[a]||(He[a]=!0,\"undefined\"!==typeof console&&\"function\"===typeof console.warn&&console.warn(a))};var Je;try{var Ke={};Object.defineProperty(Ke,\"abcd\",{configurable:!0,enumerable:!0,value:1});Object.defineProperty(Ke,\"abcd\",{configurable:!0,enumerable:!0,value:2});Je=2==Ke.abcd}catch(a){Je=!1}function I(a,b,c){Je?Object.defineProperty(a,b,{configurable:!0,enumerable:!0,value:c}):a[b]=c}function J(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&I(a,c,b[c])}function Le(a){var b={};J(b,a);return b}function Me(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b}\nfunction Ne(a,b){if(!b||!b.length)return!0;if(!a)return!1;for(var c=0;c<b.length;c++){var d=a[b[c]];if(void 0===d||null===d||\"\"===d)return!1}return!0}function Oe(a){var b=a;if(\"object\"==typeof a&&null!=a){b=\"length\"in a?[]:{};for(var c in a)I(b,c,Oe(a[c]))}return b};function Pe(a){var b={},c=a[Qe],d=a[Re];a=a[Se];if(!a||a!=Te&&!c)throw Error(\"Invalid provider user info!\");b[Ue]=d||null;b[Ve]=c||null;I(this,We,a);I(this,Xe,Oe(b))}var Te=\"EMAIL_SIGNIN\",Qe=\"email\",Re=\"newEmail\",Se=\"requestType\",Ve=\"email\",Ue=\"fromEmail\",Xe=\"data\",We=\"operation\";function K(a,b){this.code=Ye+a;this.message=b||Ze[a]||\"\"}t(K,Error);K.prototype.D=function(){return{code:this.code,message:this.message}};K.prototype.toJSON=function(){return this.D()};function $e(a){var b=a&&a.code;return b?new K(b.substring(Ye.length),a.message):null}\nvar Ye=\"auth/\",Ze={\"argument-error\":\"\",\"app-not-authorized\":\"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.\",\"app-not-installed\":\"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.\",\"captcha-check-failed\":\"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.\",\n\"code-expired\":\"The SMS code has expired. Please re-send the verification code to try again.\",\"cordova-not-ready\":\"Cordova framework is not ready.\",\"cors-unsupported\":\"This browser is not supported.\",\"credential-already-in-use\":\"This credential is already associated with a different user account.\",\"custom-token-mismatch\":\"The custom token corresponds to a different audience.\",\"requires-recent-login\":\"This operation is sensitive and requires recent authentication. Log in again before retrying this request.\",\n\"dynamic-link-not-activated\":\"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.\",\"email-already-in-use\":\"The email address is already in use by another account.\",\"expired-action-code\":\"The action code has expired. \",\"cancelled-popup-request\":\"This operation has been cancelled due to another conflicting popup being opened.\",\"internal-error\":\"An internal error has occurred.\",\"invalid-app-credential\":\"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.\",\n\"invalid-app-id\":\"The mobile app identifier is not registed for the current project.\",\"invalid-user-token\":\"This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.\",\"invalid-auth-event\":\"An internal error has occurred.\",\"invalid-verification-code\":\"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.\",\n\"invalid-continue-uri\":\"The continue URL provided in the request is invalid.\",\"invalid-cordova-configuration\":\"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.\",\"invalid-custom-token\":\"The custom token format is incorrect. Please check the documentation.\",\"invalid-email\":\"The email address is badly formatted.\",\"invalid-api-key\":\"Your API key is invalid, please check you have copied it correctly.\",\n\"invalid-cert-hash\":\"The SHA-1 certificate hash provided is invalid.\",\"invalid-credential\":\"The supplied auth credential is malformed or has expired.\",\"invalid-persistence-type\":\"The specified persistence type is invalid. It can only be local, session or none.\",\"invalid-message-payload\":\"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-oauth-provider\":\"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.\",\n\"invalid-oauth-client-id\":\"The OAuth client ID provided is either invalid or does not match the specified API key.\",\"unauthorized-domain\":\"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.\",\"invalid-action-code\":\"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.\",\"wrong-password\":\"The password is invalid or the user does not have a password.\",\"invalid-phone-number\":\"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].\",\n\"invalid-recipient-email\":\"The email corresponding to this action failed to send as the provided recipient email address is invalid.\",\"invalid-sender\":\"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.\",\"invalid-verification-id\":\"The verification ID used to create the phone auth credential is invalid.\",\"missing-android-pkg-name\":\"An Android Package Name must be provided if the Android App is required to be installed.\",\n\"auth-domain-config-required\":\"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.\",\"missing-app-credential\":\"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.\",\"missing-verification-code\":\"The phone auth credential was created with an empty SMS verification code.\",\"missing-continue-uri\":\"A continue URL must be provided in the request.\",\"missing-iframe-start\":\"An internal error has occurred.\",\n\"missing-ios-bundle-id\":\"An iOS Bundle ID must be provided if an App Store ID is provided.\",\"missing-phone-number\":\"To send verification codes, provide a phone number for the recipient.\",\"missing-verification-id\":\"The phone auth credential was created with an empty verification ID.\",\"app-deleted\":\"This instance of FirebaseApp has been deleted.\",\"account-exists-with-different-credential\":\"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.\",\n\"network-request-failed\":\"A network error (such as timeout, interrupted connection or unreachable host) has occurred.\",\"no-auth-event\":\"An internal error has occurred.\",\"no-such-provider\":\"User was not linked to an account with the given provider.\",\"null-user\":\"A null user object was provided as the argument for an operation which requires a non-null user object.\",\"operation-not-allowed\":\"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.\",\n\"operation-not-supported-in-this-environment\":'This operation is not supported in the environment this application is running on. \"location.protocol\" must be http, https or chrome-extension and web storage must be enabled.',\"popup-blocked\":\"Unable to establish a connection with the popup. It may have been blocked by the browser.\",\"popup-closed-by-user\":\"The popup has been closed by the user before finalizing the operation.\",\"provider-already-linked\":\"User can only be linked to one identity for the given provider.\",\n\"quota-exceeded\":\"The project's quota for this operation has been exceeded.\",\"redirect-cancelled-by-user\":\"The redirect operation has been cancelled by the user before finalizing.\",\"redirect-operation-pending\":\"A redirect sign-in operation is already pending.\",timeout:\"The operation has timed out.\",\"user-token-expired\":\"The user's credential is no longer valid. The user must sign in again.\",\"too-many-requests\":\"We have blocked all requests from this device due to unusual activity. Try again later.\",\n\"unauthorized-continue-uri\":\"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.\",\"unsupported-persistence-type\":\"The current environment does not support the specified persistence type.\",\"user-cancelled\":\"User did not grant your application the permissions it requested.\",\"user-not-found\":\"There is no user record corresponding to this identifier. The user may have been deleted.\",\"user-disabled\":\"The user account has been disabled by an administrator.\",\n\"user-mismatch\":\"The supplied credentials do not correspond to the previously signed in user.\",\"user-signed-out\":\"\",\"weak-password\":\"The password must be 6 characters long or more.\",\"web-storage-unsupported\":\"This browser is not supported or 3rd party cookies and data may be disabled.\"};function af(a){var b=a[bf];if(\"undefined\"===typeof b)throw new K(\"missing-continue-uri\");if(\"string\"!==typeof b||\"string\"===typeof b&&!b.length)throw new K(\"invalid-continue-uri\");this.h=b;this.b=this.a=null;this.g=!1;var c=a[cf];if(c&&\"object\"===typeof c){b=c[df];var d=c[ef];c=c[ff];if(\"string\"===typeof b&&b.length){this.a=b;if(\"undefined\"!==typeof d&&\"boolean\"!==typeof d)throw new K(\"argument-error\",ef+\" property must be a boolean when specified.\");this.g=!!d;if(\"undefined\"!==typeof c&&(\"string\"!==\ntypeof c||\"string\"===typeof c&&!c.length))throw new K(\"argument-error\",ff+\" property must be a non empty string when specified.\");this.b=c||null}else{if(\"undefined\"!==typeof b)throw new K(\"argument-error\",df+\" property must be a non empty string when specified.\");if(\"undefined\"!==typeof d||\"undefined\"!==typeof c)throw new K(\"missing-android-pkg-name\");}}else if(\"undefined\"!==typeof c)throw new K(\"argument-error\",cf+\" property must be a non null object when specified.\");this.f=null;if((b=a[gf])&&\"object\"===\ntypeof b)if(b=b[hf],\"string\"===typeof b&&b.length)this.f=b;else{if(\"undefined\"!==typeof b)throw new K(\"argument-error\",hf+\" property must be a non empty string when specified.\");}else if(\"undefined\"!==typeof b)throw new K(\"argument-error\",gf+\" property must be a non null object when specified.\");a=a[jf];if(\"undefined\"!==typeof a&&\"boolean\"!==typeof a)throw new K(\"argument-error\",jf+\" property must be a boolean when specified.\");this.c=!!a}\nvar cf=\"android\",jf=\"handleCodeInApp\",gf=\"iOS\",bf=\"url\",ef=\"installApp\",ff=\"minimumVersion\",df=\"packageName\",hf=\"bundleId\";function kf(a){var b={};b.continueUrl=a.h;b.canHandleCodeInApp=a.c;if(b.androidPackageName=a.a)b.androidMinimumVersion=a.b,b.androidInstallApp=a.g;b.iOSBundleId=a.f;for(var c in b)null===b[c]&&delete b[c];return b};function lf(a){return Ba(a,function(a){a=a.toString(16);return 1<a.length?a:\"0\"+a}).join(\"\")};var mf=null,nf=null;function of(a){var b=\"\";pf(a,function(a){b+=String.fromCharCode(a)});return b}function pf(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=nf[c];if(null!=e)return e;if(!/^[\\s\\xa0]*$/.test(c))throw Error(\"Unknown base64 encoding at char: \"+c);}return b}qf();for(var d=0;;){var e=c(-1),f=c(0),h=c(64),m=c(64);if(64===m&&-1===e)break;b(e<<2|f>>4);64!=h&&(b(f<<4&240|h>>2),64!=m&&b(h<<6&192|m))}}\nfunction qf(){if(!mf){mf={};nf={};for(var a=0;65>a;a++)mf[a]=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".charAt(a),nf[mf[a]]=a,62<=a&&(nf[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\".charAt(a)]=a)}};function rf(a){this.c=a.sub;na();this.a=a.provider_id||a.firebase&&a.firebase.sign_in_provider||null;this.b=!!a.is_anonymous||\"anonymous\"==this.a}rf.prototype.f=function(){return this.b};function sf(a){return(a=tf(a))&&a.sub&&a.iss&&a.aud&&a.exp?new rf(a):null}function tf(a){if(!a)return null;a=a.split(\".\");if(3!=a.length)return null;a=a[1];for(var b=(4-a.length%4)%4,c=0;c<b;c++)a+=\".\";try{return JSON.parse(of(a))}catch(d){}return null};var uf=\"oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version\".split(\" \"),vf=[\"client_id\",\"response_type\",\"scope\",\"redirect_uri\",\"state\"],wf={Tc:{Ma:\"locale\",Ba:500,Aa:600,Na:\"facebook.com\",eb:vf},Vc:{Ma:null,Ba:500,Aa:620,Na:\"github.com\",eb:vf},Wc:{Ma:\"hl\",Ba:515,Aa:680,Na:\"google.com\",eb:vf},bd:{Ma:\"lang\",Ba:485,Aa:705,Na:\"twitter.com\",eb:uf}};function xf(a){for(var b in wf)if(wf[b].Na==a)return wf[b];return null};function yf(a){var b={};b[\"facebook.com\"]=zf;b[\"google.com\"]=Af;b[\"github.com\"]=Bf;b[\"twitter.com\"]=Cf;var c=a&&a[Df];try{if(c)return b[c]?new b[c](a):new Ef(a);if(\"undefined\"!==typeof a[Ff])return new Gf(a)}catch(d){}return null}var Ff=\"idToken\",Df=\"providerId\";\nfunction Gf(a){var b=a[Df];if(!b&&a[Ff]){var c=sf(a[Ff]);c&&c.a&&(b=c.a)}if(!b)throw Error(\"Invalid additional user info!\");if(\"anonymous\"==b||\"custom\"==b)b=null;c=!1;\"undefined\"!==typeof a.isNewUser?c=!!a.isNewUser:\"identitytoolkit#SignupNewUserResponse\"===a.kind&&(c=!0);I(this,\"providerId\",b);I(this,\"isNewUser\",c)}function Ef(a){Gf.call(this,a);a=ze(a.rawUserInfo||\"{}\");I(this,\"profile\",Oe(a||{}))}t(Ef,Gf);\nfunction zf(a){Ef.call(this,a);if(\"facebook.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");}t(zf,Ef);function Bf(a){Ef.call(this,a);if(\"github.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");I(this,\"username\",this.profile&&this.profile.login||null)}t(Bf,Ef);function Af(a){Ef.call(this,a);if(\"google.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");}t(Af,Ef);\nfunction Cf(a){Ef.call(this,a);if(\"twitter.com\"!=this.providerId)throw Error(\"Invalid provider ID!\");I(this,\"username\",a.screenName||null)}t(Cf,Ef);function Hf(a){this.a=ed(a)};function If(a){var b=ed(a),c=dd(b,\"link\"),d=dd(ed(c),\"link\");b=dd(b,\"deep_link_id\");return dd(ed(b),\"link\")||b||d||c||a};function Jf(a,b){return a.then(function(a){if(a[L]){var c=sf(a[L]);if(!c||b!=c.c)throw new K(\"user-mismatch\");return a}throw new K(\"user-mismatch\");}).s(function(a){throw a&&a.code&&a.code==Ye+\"user-not-found\"?new K(\"user-mismatch\"):a;})}\nfunction Kf(a,b,c){if(b.idToken||b.accessToken)b.idToken&&I(this,\"idToken\",b.idToken),b.accessToken&&I(this,\"accessToken\",b.accessToken);else if(b.oauthToken&&b.oauthTokenSecret)I(this,\"accessToken\",b.oauthToken),I(this,\"secret\",b.oauthTokenSecret);else throw new K(\"internal-error\",\"failed to construct a credential\");I(this,\"providerId\",a);I(this,\"signInMethod\",c)}Kf.prototype.ya=function(a){return Lf(a,Mf(this))};Kf.prototype.c=function(a,b){var c=Mf(this);c.idToken=b;return Nf(a,c)};\nKf.prototype.f=function(a,b){var c=Mf(this);return Jf(Of(a,c),b)};function Mf(a){var b={};a.idToken&&(b.id_token=a.idToken);a.accessToken&&(b.access_token=a.accessToken);a.secret&&(b.oauth_token_secret=a.secret);b.providerId=a.providerId;return{postBody:id(b).toString(),requestUri:\"http://localhost\"}}\nKf.prototype.D=function(){var a={providerId:this.providerId,signInMethod:this.signInMethod};this.idToken&&(a.oauthIdToken=this.idToken);this.accessToken&&(a.oauthAccessToken=this.accessToken);this.secret&&(a.oauthTokenSecret=this.secret);return a};function Pf(a,b){this.Ac=b||[];J(this,{providerId:a,isOAuthProvider:!0});this.vb={};this.$a=(xf(a)||{}).Ma||null;this.Ya=null}Pf.prototype.Da=function(a){this.vb=$a(a);return this};function M(a){Pf.call(this,a,vf);this.a=[]}t(M,Pf);\nM.prototype.ta=function(a){Fa(this.a,a)||this.a.push(a);return this};M.prototype.Ab=function(){return Ja(this.a)};M.prototype.credential=function(a,b){if(!a&&!b)throw new K(\"argument-error\",\"credential failed: must provide the ID token and/or the access token.\");return new Kf(this.providerId,{idToken:a||null,accessToken:b||null},this.providerId)};function Qf(){M.call(this,\"facebook.com\")}t(Qf,M);I(Qf,\"PROVIDER_ID\",\"facebook.com\");I(Qf,\"FACEBOOK_SIGN_IN_METHOD\",\"facebook.com\");\nfunction Rf(a){if(!a)throw new K(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new Qf).credential(null,b)}function Sf(){M.call(this,\"github.com\")}t(Sf,M);I(Sf,\"PROVIDER_ID\",\"github.com\");I(Sf,\"GITHUB_SIGN_IN_METHOD\",\"github.com\");function Tf(a){if(!a)throw new K(\"argument-error\",\"credential failed: expected 1 argument (the OAuth access token).\");var b=a;q(a)&&(b=a.accessToken);return(new Sf).credential(null,b)}\nfunction Uf(){M.call(this,\"google.com\");this.ta(\"profile\")}t(Uf,M);I(Uf,\"PROVIDER_ID\",\"google.com\");I(Uf,\"GOOGLE_SIGN_IN_METHOD\",\"google.com\");function Vf(a,b){var c=a;q(a)&&(c=a.idToken,b=a.accessToken);return(new Uf).credential(c,b)}function Wf(){Pf.call(this,\"twitter.com\",uf)}t(Wf,Pf);I(Wf,\"PROVIDER_ID\",\"twitter.com\");I(Wf,\"TWITTER_SIGN_IN_METHOD\",\"twitter.com\");\nfunction Xf(a,b){var c=a;q(c)||(c={oauthToken:a,oauthTokenSecret:b});if(!c.oauthToken||!c.oauthTokenSecret)throw new K(\"argument-error\",\"credential failed: expected 2 arguments (the OAuth access token and secret).\");return new Kf(\"twitter.com\",c,\"twitter.com\")}function Yf(a,b,c){this.a=a;this.b=b;I(this,\"providerId\",\"password\");I(this,\"signInMethod\",c===N.EMAIL_LINK_SIGN_IN_METHOD?N.EMAIL_LINK_SIGN_IN_METHOD:N.EMAIL_PASSWORD_SIGN_IN_METHOD)}\nYf.prototype.ya=function(a){return this.signInMethod==N.EMAIL_LINK_SIGN_IN_METHOD?O(a,Zf,{email:this.a,oobCode:this.b}):O(a,$f,{email:this.a,password:this.b})};Yf.prototype.c=function(a,b){return this.signInMethod==N.EMAIL_LINK_SIGN_IN_METHOD?O(a,ag,{idToken:b,email:this.a,oobCode:this.b}):O(a,bg,{idToken:b,email:this.a,password:this.b})};Yf.prototype.f=function(a,b){return Jf(this.ya(a),b)};Yf.prototype.D=function(){return{email:this.a,password:this.b,signInMethod:this.signInMethod}};\nfunction N(){J(this,{providerId:\"password\",isOAuthProvider:!1})}function cg(a,b){b=dg(b);if(!b)throw new K(\"argument-error\",\"Invalid email link!\");return new Yf(a,b,N.EMAIL_LINK_SIGN_IN_METHOD)}function dg(a){a=If(a);a=new Hf(a);var b=dd(a.a,\"oobCode\")||null;return\"signIn\"===(dd(a.a,\"mode\")||null)&&b?b:null}J(N,{PROVIDER_ID:\"password\"});J(N,{EMAIL_LINK_SIGN_IN_METHOD:\"emailLink\"});J(N,{EMAIL_PASSWORD_SIGN_IN_METHOD:\"password\"});\nfunction eg(a){if(!(a.Sa&&a.Ra||a.Fa&&a.$))throw new K(\"internal-error\");this.a=a;I(this,\"providerId\",\"phone\");I(this,\"signInMethod\",\"phone\")}eg.prototype.ya=function(a){return a.Ta(fg(this))};eg.prototype.c=function(a,b){var c=fg(this);c.idToken=b;return O(a,gg,c)};eg.prototype.f=function(a,b){var c=fg(this);c.operation=\"REAUTH\";a=O(a,hg,c);return Jf(a,b)};\neg.prototype.D=function(){var a={providerId:\"phone\"};this.a.Sa&&(a.verificationId=this.a.Sa);this.a.Ra&&(a.verificationCode=this.a.Ra);this.a.Fa&&(a.temporaryProof=this.a.Fa);this.a.$&&(a.phoneNumber=this.a.$);return a};function fg(a){return a.a.Fa&&a.a.$?{temporaryProof:a.a.Fa,phoneNumber:a.a.$}:{sessionInfo:a.a.Sa,code:a.a.Ra}}\nfunction ig(a){try{this.a=a||firebase.auth()}catch(b){throw new K(\"argument-error\",\"Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().\");}J(this,{providerId:\"phone\",isOAuthProvider:!1})}\nig.prototype.Ta=function(a,b){var c=this.a.b;return A(b.verify()).then(function(d){if(!l(d))throw new K(\"argument-error\",\"An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.\");switch(b.type){case \"recaptcha\":return jg(c,{phoneNumber:a,recaptchaToken:d}).then(function(a){\"function\"===typeof b.reset&&b.reset();return a},function(a){\"function\"===typeof b.reset&&b.reset();throw a;});default:throw new K(\"argument-error\",\n'Only firebase.auth.ApplicationVerifiers with type=\"recaptcha\" are currently supported.');}})};function kg(a,b){if(!a)throw new K(\"missing-verification-id\");if(!b)throw new K(\"missing-verification-code\");return new eg({Sa:a,Ra:b})}J(ig,{PROVIDER_ID:\"phone\"});J(ig,{PHONE_SIGN_IN_METHOD:\"phone\"});\nfunction lg(a){if(a.temporaryProof&&a.phoneNumber)return new eg({Fa:a.temporaryProof,$:a.phoneNumber});var b=a&&a.providerId;if(!b||\"password\"===b)return null;var c=a&&a.oauthAccessToken,d=a&&a.oauthTokenSecret;a=a&&a.oauthIdToken;try{switch(b){case \"google.com\":return Vf(a,c);case \"facebook.com\":return Rf(c);case \"github.com\":return Tf(c);case \"twitter.com\":return Xf(c,d);default:return(new M(b)).credential(a,c)}}catch(e){return null}}\nfunction mg(a){if(!a.isOAuthProvider)throw new K(\"invalid-oauth-provider\");};function ng(a,b,c,d,e){this.b=a;this.c=b||null;this.f=c||null;this.g=d||null;this.a=e||null;if(this.f||this.a){if(this.f&&this.a)throw new K(\"invalid-auth-event\");if(this.f&&!this.g)throw new K(\"invalid-auth-event\");}else throw new K(\"invalid-auth-event\");}ng.prototype.D=function(){return{type:this.b,eventId:this.c,urlResponse:this.f,sessionId:this.g,error:this.a&&this.a.D()}};function og(a){a=a||{};return a.type?new ng(a.type,a.eventId,a.urlResponse,a.sessionId,a.error&&$e(a.error)):null};function pg(){this.b=null;this.a=[]}var qg=null;pg.prototype.subscribe=function(a){var b=this;this.a.push(a);this.b||(this.b=function(a){for(var c=0;c<b.a.length;c++)b.a[c](a)},a=H(\"universalLinks.subscribe\",k),\"function\"===typeof a&&a(null,this.b))};pg.prototype.unsubscribe=function(a){Ha(this.a,function(b){return b==a})};function rg(a){var b=\"unauthorized-domain\",c=void 0,d=ed(a);a=d.b;d=d.c;\"chrome-extension\"==d?c=Ka(\"This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):\"http\"==d||\"https\"==d?c=Ka(\"This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.\",a):b=\"operation-not-supported-in-this-environment\";\nK.call(this,b,c)}t(rg,K);function sg(a,b,c){K.call(this,a,c);a=b||{};a.wb&&I(this,\"email\",a.wb);a.$&&I(this,\"phoneNumber\",a.$);a.credential&&I(this,\"credential\",a.credential)}t(sg,K);sg.prototype.D=function(){var a={code:this.code,message:this.message};this.email&&(a.email=this.email);this.phoneNumber&&(a.phoneNumber=this.phoneNumber);var b=this.credential&&this.credential.D();b&&bb(a,b);return a};sg.prototype.toJSON=function(){return this.D()};\nfunction tg(a){if(a.code){var b=a.code||\"\";0==b.indexOf(Ye)&&(b=b.substring(Ye.length));var c={credential:lg(a)};if(a.email)c.wb=a.email;else if(a.phoneNumber)c.$=a.phoneNumber;else return new K(b,a.message||void 0);return new sg(b,c,a.message)}return null};var ug=/^[+a-zA-Z0-9_.!#$%&'*\\/=?^`{|}~-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9]{2,63}$/;function vg(){}vg.prototype.c=null;function wg(a){return a.c||(a.c=a.b())};var xg;function yg(){}t(yg,vg);yg.prototype.a=function(){var a=zg(this);return a?new ActiveXObject(a):new XMLHttpRequest};yg.prototype.b=function(){var a={};zg(this)&&(a[0]=!0,a[1]=!0);return a};\nfunction zg(a){if(!a.f&&\"undefined\"==typeof XMLHttpRequest&&\"undefined\"!=typeof ActiveXObject){for(var b=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.f=d}catch(e){}}throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");}return a.f}xg=new yg;function Ag(){}t(Ag,vg);Ag.prototype.a=function(){var a=new XMLHttpRequest;if(\"withCredentials\"in a)return a;if(\"undefined\"!=typeof XDomainRequest)return new Bg;throw Error(\"Unsupported browser\");};Ag.prototype.b=function(){return{}};\nfunction Bg(){this.a=new XDomainRequest;this.readyState=0;this.onreadystatechange=null;this.responseText=\"\";this.status=-1;this.statusText=\"\";this.a.onload=r(this.bc,this);this.a.onerror=r(this.Bb,this);this.a.onprogress=r(this.cc,this);this.a.ontimeout=r(this.fc,this)}g=Bg.prototype;g.open=function(a,b,c){if(null!=c&&!c)throw Error(\"Only async requests are supported.\");this.a.open(a,b)};\ng.send=function(a){if(a)if(\"string\"==typeof a)this.a.send(a);else throw Error(\"Only string data is supported\");else this.a.send()};g.abort=function(){this.a.abort()};g.setRequestHeader=function(){};g.getResponseHeader=function(a){return\"content-type\"==a.toLowerCase()?this.a.contentType:\"\"};g.bc=function(){this.status=200;this.responseText=this.a.responseText;Cg(this,4)};g.Bb=function(){this.status=500;this.responseText=\"\";Cg(this,4)};g.fc=function(){this.Bb()};\ng.cc=function(){this.status=200;Cg(this,1)};function Cg(a,b){a.readyState=b;if(a.onreadystatechange)a.onreadystatechange()}g.getAllResponseHeaders=function(){return\"content-type: \"+this.a.contentType};function Dg(a,b,c){this.reset(a,b,c,void 0,void 0)}Dg.prototype.a=null;var Eg=0;Dg.prototype.reset=function(a,b,c,d,e){\"number\"==typeof e||Eg++;d||na();delete this.a};function Fg(a){this.f=a;this.b=this.c=this.a=null}function Gg(a,b){this.name=a;this.value=b}Gg.prototype.toString=function(){return this.name};var Hg=new Gg(\"SEVERE\",1E3),Ig=new Gg(\"WARNING\",900),Jg=new Gg(\"CONFIG\",700),Kg=new Gg(\"FINE\",500);function Lg(a){if(a.c)return a.c;if(a.a)return Lg(a.a);ra(\"Root logger has no level set.\");return null}Fg.prototype.log=function(a,b,c){if(a.value>=Lg(this).value)for(n(b)&&(b=b()),a=new Dg(a,String(b),this.f),c&&(a.a=c),c=this;c;)c=c.a};var Mg={},Ng=null;\nfunction Og(a){Ng||(Ng=new Fg(\"\"),Mg[\"\"]=Ng,Ng.c=Jg);var b;if(!(b=Mg[a])){b=new Fg(a);var c=a.lastIndexOf(\".\"),d=a.substr(c+1);c=Og(a.substr(0,c));c.b||(c.b={});c.b[d]=b;b.a=c;Mg[a]=b}return b};function P(a,b){a&&a.log(Kg,b,void 0)};function Pg(a){this.f=a}t(Pg,vg);Pg.prototype.a=function(){return new Qg(this.f)};Pg.prototype.b=function(a){return function(){return a}}({});function Qg(a){E.call(this);this.i=a;this.readyState=Rg;this.status=0;this.responseText=this.statusText=\"\";this.onreadystatechange=null;this.g=new Headers;this.b=null;this.h=\"GET\";this.c=\"\";this.a=!1;this.f=Og(\"goog.net.FetchXmlHttp\")}t(Qg,E);var Rg=0;g=Qg.prototype;\ng.open=function(a,b){if(this.readyState!=Rg)throw this.abort(),Error(\"Error reopening a connection\");this.h=a;this.c=b;this.readyState=1;Sg(this)};g.send=function(a){if(1!=this.readyState)throw this.abort(),Error(\"need to call open() first. \");this.a=!0;var b={headers:this.g,method:this.h,credentials:void 0,cache:void 0};a&&(b.body=a);this.i.fetch(new Request(this.c,b)).then(this.ec.bind(this),this.Cb.bind(this))};\ng.abort=function(){this.responseText=\"\";this.g=new Headers;this.status=0;1<=this.readyState&&this.a&&4!=this.readyState&&(this.readyState=4,this.a=!1,Sg(this));this.readyState=Rg};g.ec=function(a){this.a&&(this.b||(this.b=a.headers,this.readyState=2,Sg(this)),this.a&&(this.readyState=3,Sg(this),this.a&&a.text().then(this.dc.bind(this,a),this.Cb.bind(this))))};g.dc=function(a,b){this.a&&(this.status=a.status,this.statusText=a.statusText,this.responseText=b,this.readyState=4,Sg(this))};\ng.Cb=function(a){var b=this.f;b&&b.log(Ig,\"Failed to fetch url \"+this.c,a instanceof Error?a:Error(a));this.a&&(this.readyState=4,Sg(this))};g.setRequestHeader=function(a,b){this.g.append(a,b)};g.getResponseHeader=function(a){return this.b?this.b.get(a.toLowerCase())||\"\":((a=this.f)&&a.log(Ig,\"Attempting to get response header but no headers have been received for url: \"+this.c,void 0),\"\")};\ng.getAllResponseHeaders=function(){if(!this.b){var a=this.f;a&&a.log(Ig,\"Attempting to get all response headers but no headers have been received for url: \"+this.c,void 0);return\"\"}a=[];for(var b=this.b.entries(),c=b.next();!c.done;)c=c.value,a.push(c[0]+\": \"+c[1]),c=b.next();return a.join(\"\\r\\n\")};function Sg(a){a.onreadystatechange&&a.onreadystatechange.call(a)};function Tg(a){E.call(this);this.headers=new Lc;this.C=a||null;this.c=!1;this.w=this.a=null;this.h=this.N=this.l=\"\";this.f=this.I=this.i=this.G=!1;this.g=0;this.u=null;this.o=Ug;this.v=this.O=!1}t(Tg,E);var Ug=\"\";Tg.prototype.b=Og(\"goog.net.XhrIo\");var Vg=/^https?$/i,Wg=[\"POST\",\"PUT\"];\nfunction Xg(a,b,c,d,e){if(a.a)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+a.l+\"; newUri=\"+b);c=c?c.toUpperCase():\"GET\";a.l=b;a.h=\"\";a.N=c;a.G=!1;a.c=!0;a.a=a.C?a.C.a():xg.a();a.w=a.C?wg(a.C):wg(xg);a.a.onreadystatechange=r(a.Fb,a);try{P(a.b,Yg(a,\"Opening Xhr\")),a.I=!0,a.a.open(c,String(b),!0),a.I=!1}catch(h){P(a.b,Yg(a,\"Error opening Xhr: \"+h.message));Zg(a,h);return}b=d||\"\";var f=new Lc(a.headers);e&&Kc(e,function(a,b){f.set(b,a)});e=Da(f.U());d=k.FormData&&b instanceof\nk.FormData;!Fa(Wg,c)||e||d||f.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");f.forEach(function(a,b){this.a.setRequestHeader(b,a)},a);a.o&&(a.a.responseType=a.o);\"withCredentials\"in a.a&&a.a.withCredentials!==a.O&&(a.a.withCredentials=a.O);try{$g(a),0<a.g&&(a.v=ah(a.a),P(a.b,Yg(a,\"Will abort after \"+a.g+\"ms if incomplete, xhr2 \"+a.v)),a.v?(a.a.timeout=a.g,a.a.ontimeout=r(a.Ga,a)):a.u=Gc(a.Ga,a.g,a)),P(a.b,Yg(a,\"Sending request\")),a.i=!0,a.a.send(b),a.i=!1}catch(h){P(a.b,Yg(a,\n\"Send error: \"+h.message)),Zg(a,h)}}function ah(a){return Ob&&Yb(9)&&\"number\"==typeof a.timeout&&void 0!==a.ontimeout}function Ea(a){return\"content-type\"==a.toLowerCase()}g=Tg.prototype;g.Ga=function(){\"undefined\"!=typeof aa&&this.a&&(this.h=\"Timed out after \"+this.g+\"ms, aborting\",P(this.b,Yg(this,this.h)),this.dispatchEvent(\"timeout\"),this.abort(8))};function Zg(a,b){a.c=!1;a.a&&(a.f=!0,a.a.abort(),a.f=!1);a.h=b;bh(a);ch(a)}\nfunction bh(a){a.G||(a.G=!0,a.dispatchEvent(\"complete\"),a.dispatchEvent(\"error\"))}g.abort=function(){this.a&&this.c&&(P(this.b,Yg(this,\"Aborting\")),this.c=!1,this.f=!0,this.a.abort(),this.f=!1,this.dispatchEvent(\"complete\"),this.dispatchEvent(\"abort\"),ch(this))};g.ua=function(){this.a&&(this.c&&(this.c=!1,this.f=!0,this.a.abort(),this.f=!1),ch(this,!0));Tg.lb.ua.call(this)};g.Fb=function(){this.pa||(this.I||this.i||this.f?dh(this):this.tc())};g.tc=function(){dh(this)};\nfunction dh(a){if(a.c&&\"undefined\"!=typeof aa)if(a.w[1]&&4==eh(a)&&2==fh(a))P(a.b,Yg(a,\"Local request error detected and ignored\"));else if(a.i&&4==eh(a))Gc(a.Fb,0,a);else if(a.dispatchEvent(\"readystatechange\"),4==eh(a)){P(a.b,Yg(a,\"Request complete\"));a.c=!1;try{var b=fh(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.l).match(Oc)[1]||null;if(!f&&k.self&&k.self.location){var h=k.self.location.protocol;\nf=h.substr(0,h.length-1)}e=!Vg.test(f?f.toLowerCase():\"\")}d=e}if(d)a.dispatchEvent(\"complete\"),a.dispatchEvent(\"success\");else{try{var m=2<eh(a)?a.a.statusText:\"\"}catch(p){P(a.b,\"Can not get status: \"+p.message),m=\"\"}a.h=m+\" [\"+fh(a)+\"]\";bh(a)}}finally{ch(a)}}}function ch(a,b){if(a.a){$g(a);var c=a.a,d=a.w[0]?ca:null;a.a=null;a.w=null;b||a.dispatchEvent(\"ready\");try{c.onreadystatechange=d}catch(e){(a=a.b)&&a.log(Hg,\"Problem encountered resetting onreadystatechange: \"+e.message,void 0)}}}\nfunction $g(a){a.a&&a.v&&(a.a.ontimeout=null);a.u&&(k.clearTimeout(a.u),a.u=null)}function eh(a){return a.a?a.a.readyState:0}function fh(a){try{return 2<eh(a)?a.a.status:-1}catch(b){return-1}}function gh(a){try{return a.a?a.a.responseText:\"\"}catch(b){return P(a.b,\"Can not get responseText: \"+b.message),\"\"}}\ng.getResponse=function(){try{if(!this.a)return null;if(\"response\"in this.a)return this.a.response;switch(this.o){case Ug:case \"text\":return this.a.responseText;case \"arraybuffer\":if(\"mozResponseArrayBuffer\"in this.a)return this.a.mozResponseArrayBuffer}var a=this.b;a&&a.log(Hg,\"Response type \"+this.o+\" is not supported on this browser\",void 0);return null}catch(b){return P(this.b,\"Can not get response: \"+b.message),null}};function Yg(a,b){return b+\" [\"+a.N+\" \"+a.l+\" \"+fh(a)+\"]\"};/*\n Portions of this code are from MochiKit, received by\n The Closure Authors under the MIT license. All other code is Copyright\n 2005-2009 The Closure Authors. All Rights Reserved.\n*/\nfunction hh(a,b){this.g=[];this.v=a;this.u=b||null;this.f=this.a=!1;this.c=void 0;this.l=this.w=this.i=!1;this.h=0;this.b=null;this.m=0}hh.prototype.cancel=function(a){if(this.a)this.c instanceof hh&&this.c.cancel();else{if(this.b){var b=this.b;delete this.b;a?b.cancel(a):(b.m--,0>=b.m&&b.cancel())}this.v?this.v.call(this.u,this):this.l=!0;this.a||(a=new ih(this),jh(this),kh(this,!1,a))}};hh.prototype.o=function(a,b){this.i=!1;kh(this,a,b)};function kh(a,b,c){a.a=!0;a.c=c;a.f=!b;lh(a)}\nfunction jh(a){if(a.a){if(!a.l)throw new mh(a);a.l=!1}}hh.prototype.C=function(){jh(this);kh(this,!0,null)};function nh(a,b){oh(a,null,b,void 0)}function oh(a,b,c,d){a.g.push([b,c,d]);a.a&&lh(a)}hh.prototype.then=function(a,b,c){var d,e,f=new y(function(a,b){d=a;e=b});oh(this,d,function(a){a instanceof ih?f.cancel():e(a)});return f.then(a,b,c)};oa(hh);function ph(a){return Ca(a.g,function(a){return n(a[1])})}\nfunction lh(a){if(a.h&&a.a&&ph(a)){var b=a.h,c=qh[b];c&&(k.clearTimeout(c.a),delete qh[b]);a.h=0}a.b&&(a.b.m--,delete a.b);b=a.c;for(var d=c=!1;a.g.length&&!a.i;){var e=a.g.shift(),f=e[0],h=e[1];e=e[2];if(f=a.f?h:f)try{var m=f.call(e||a.u,b);void 0!==m&&(a.f=a.f&&(m==b||m instanceof Error),a.c=b=m);if(pa(b)||\"function\"===typeof k.Promise&&b instanceof k.Promise)d=!0,a.i=!0}catch(p){b=p,a.f=!0,ph(a)||(c=!0)}}a.c=b;d&&(m=r(a.o,a,!0),d=r(a.o,a,!1),b instanceof hh?(oh(b,m,d),b.w=!0):b.then(m,d));c&&(b=\nnew rh(b),qh[b.a]=b,a.h=b.a)}function mh(){u.call(this)}t(mh,u);mh.prototype.message=\"Deferred has already fired\";mh.prototype.name=\"AlreadyCalledError\";function ih(){u.call(this)}t(ih,u);ih.prototype.message=\"Deferred was canceled\";ih.prototype.name=\"CanceledError\";function rh(a){this.a=k.setTimeout(r(this.c,this),0);this.b=a}rh.prototype.c=function(){delete qh[this.a];throw this.b;};var qh={};function sh(a){var b={},c=b.document||document,d=ud(a),e=document.createElement(\"SCRIPT\"),f={Hb:e,Ga:void 0},h=new hh(th,f),m=null,p=null!=b.timeout?b.timeout:5E3;0<p&&(m=window.setTimeout(function(){uh(e,!0);var a=new vh(wh,\"Timeout reached for loading script \"+d);jh(h);kh(h,!1,a)},p),f.Ga=m);e.onload=e.onreadystatechange=function(){e.readyState&&\"loaded\"!=e.readyState&&\"complete\"!=e.readyState||(uh(e,b.dd||!1,m),h.C())};e.onerror=function(){uh(e,!0,m);var a=new vh(xh,\"Error while loading script \"+\nd);jh(h);kh(h,!1,a)};f=b.attributes||{};bb(f,{type:\"text/javascript\",charset:\"UTF-8\"});Kd(e,f);e.src=ud(a);yh(c).appendChild(e);return h}function yh(a){var b;return(b=(a||document).getElementsByTagName(\"HEAD\"))&&0!=b.length?b[0]:a.documentElement}function th(){if(this&&this.Hb){var a=this.Hb;a&&\"SCRIPT\"==a.tagName&&uh(a,!0,this.Ga)}}\nfunction uh(a,b,c){null!=c&&k.clearTimeout(c);a.onload=ca;a.onerror=ca;a.onreadystatechange=ca;b&&window.setTimeout(function(){a&&a.parentNode&&a.parentNode.removeChild(a)},0)}var xh=0,wh=1;function vh(a,b){var c=\"Jsloader error (code #\"+a+\")\";b&&(c+=\": \"+b);u.call(this,c);this.code=a}t(vh,u);function zh(a){this.f=a}t(zh,vg);zh.prototype.a=function(){return new this.f};zh.prototype.b=function(){return{}};\nfunction Ah(a,b,c){this.b=a;a=b||{};this.i=a.secureTokenEndpoint||\"https://securetoken.googleapis.com/v1/token\";this.m=a.secureTokenTimeout||Bh;this.f=$a(a.secureTokenHeaders||Ch);this.g=a.firebaseEndpoint||\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\";this.h=a.firebaseTimeout||Dh;this.a=$a(a.firebaseHeaders||Eh);c&&(this.a[\"X-Client-Version\"]=c,this.f[\"X-Client-Version\"]=c);c=\"Node\"==ne();c=k.XMLHttpRequest||c&&firebase.INTERNAL.node&&firebase.INTERNAL.node.XMLHttpRequest;if(!c&&\n!me())throw new K(\"internal-error\",\"The XMLHttpRequest compatibility library was not found.\");this.c=void 0;me()?this.c=new Pg(self):oe()?this.c=new zh(c):this.c=new Ag}var Fh,L=\"idToken\",Bh=new Ce(3E4,6E4),Ch={\"Content-Type\":\"application/x-www-form-urlencoded\"},Dh=new Ce(3E4,6E4),Eh={\"Content-Type\":\"application/json\"};function Gh(a,b){b?a.a[\"X-Firebase-Locale\"]=b:delete a.a[\"X-Firebase-Locale\"]}\nfunction Hh(a,b){b?(a.a[\"X-Client-Version\"]=b,a.f[\"X-Client-Version\"]=b):(delete a.a[\"X-Client-Version\"],delete a.f[\"X-Client-Version\"])}function Ih(a,b,c,d,e,f,h){Zd()||me()?a=r(a.o,a):(Fh||(Fh=new y(function(a,b){Jh(a,b)})),a=r(a.l,a));a(b,c,d,e,f,h)}\nAh.prototype.o=function(a,b,c,d,e,f){if(me()&&(\"undefined\"===typeof k.fetch||\"undefined\"===typeof k.Headers||\"undefined\"===typeof k.Request))throw new K(\"operation-not-supported-in-this-environment\",\"fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.\");var h=new Tg(this.c);if(f){h.g=Math.max(0,f);var m=setTimeout(function(){h.dispatchEvent(\"timeout\")},f)}uc(h,\"complete\",function(){m&&clearTimeout(m);var a=null;try{a=\nJSON.parse(gh(this))||null}catch(z){a=null}b&&b(a)});Ac(h,\"ready\",function(){m&&clearTimeout(m);Jb(this)});Ac(h,\"timeout\",function(){m&&clearTimeout(m);Jb(this);b&&b(null)});Xg(h,a,c,d,e)};var Kh=rd(\"https://apis.google.com/js/client.js?onload=%{onload}\"),Lh=\"__fcb\"+Math.floor(1E6*Math.random()).toString();\nfunction Jh(a,b){if(((window.gapi||{}).client||{}).request)a();else{k[Lh]=function(){((window.gapi||{}).client||{}).request?a():b(Error(\"CORS_UNSUPPORTED\"))};var c=vd(Kh,{onload:Lh});nh(sh(c),function(){b(Error(\"CORS_UNSUPPORTED\"))})}}\nAh.prototype.l=function(a,b,c,d,e){var f=this;Fh.then(function(){window.gapi.client.setApiKey(f.b);var h=window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({path:a,method:c,body:d,headers:e,authType:\"none\",callback:function(a){window.gapi.auth.setToken(h);b&&b(a)}})}).s(function(a){b&&b({error:{message:a&&a.message||\"CORS_UNSUPPORTED\"}})})};\nfunction Mh(a,b){return new y(function(c,d){\"refresh_token\"==b.grant_type&&b.refresh_token||\"authorization_code\"==b.grant_type&&b.code?Ih(a,a.i+\"?key=\"+encodeURIComponent(a.b),function(a){a?a.error?d(Nh(a)):a.access_token&&a.refresh_token?c(a):d(new K(\"internal-error\")):d(new K(\"network-request-failed\"))},\"POST\",id(b).toString(),a.f,a.m.get()):d(new K(\"internal-error\"))})}\nfunction Oh(a,b,c,d,e,f){var h=ed(a.g+b);F(h,\"key\",a.b);f&&F(h,\"cb\",na().toString());var m=\"GET\"==c;if(m)for(var p in d)d.hasOwnProperty(p)&&F(h,p,d[p]);return new y(function(b,f){Ih(a,h.toString(),function(a){a?a.error?f(Nh(a,e||{})):b(a):f(new K(\"network-request-failed\"))},c,m?void 0:Pd(ye(d)),a.a,a.h.get())})}function Ph(a){if(!ug.test(a.email))throw new K(\"invalid-email\");}function Qh(a){\"email\"in a&&Ph(a)}\nfunction Rh(a,b){return O(a,Sh,{identifier:b,continueUri:ve()?Wd():\"http://localhost\"}).then(function(a){return a.allProviders||[]})}function Th(a,b){return O(a,Sh,{identifier:b,continueUri:ve()?Wd():\"http://localhost\"}).then(function(a){return a.signinMethods||[]})}function Uh(a){return O(a,Vh,{}).then(function(a){return a.authorizedDomains||[]})}function Wh(a){if(!a[L])throw new K(\"internal-error\");}\nfunction Xh(a){if(a.phoneNumber||a.temporaryProof){if(!a.phoneNumber||!a.temporaryProof)throw new K(\"internal-error\");}else{if(!a.sessionInfo)throw new K(\"missing-verification-id\");if(!a.code)throw new K(\"missing-verification-code\");}}Ah.prototype.Pa=function(){return O(this,Yh,{})};Ah.prototype.mb=function(a,b){return O(this,Zh,{idToken:a,email:b})};Ah.prototype.nb=function(a,b){return O(this,bg,{idToken:a,password:b})};var $h={displayName:\"DISPLAY_NAME\",photoUrl:\"PHOTO_URL\"};g=Ah.prototype;\ng.ob=function(a,b){var c={idToken:a},d=[];Ya($h,function(a,f){var e=b[f];null===e?d.push(a):f in b&&(c[f]=e)});d.length&&(c.deleteAttribute=d);return O(this,Zh,c)};g.hb=function(a,b){a={requestType:\"PASSWORD_RESET\",email:a};bb(a,b);return O(this,ai,a)};g.ib=function(a,b){a={requestType:\"EMAIL_SIGNIN\",email:a};bb(a,b);return O(this,bi,a)};g.gb=function(a,b){a={requestType:\"VERIFY_EMAIL\",idToken:a};bb(a,b);return O(this,ci,a)};function jg(a,b){return O(a,di,b)}g.Ta=function(a){return O(this,ei,a)};\nfunction fi(a,b,c){return O(a,gi,{idToken:b,deleteProvider:c})}function hi(a){if(!a.requestUri||!a.sessionId&&!a.postBody)throw new K(\"internal-error\");}\nfunction ii(a){var b=null;a.needConfirmation?(a.code=\"account-exists-with-different-credential\",b=tg(a)):\"FEDERATED_USER_ID_ALREADY_LINKED\"==a.errorMessage?(a.code=\"credential-already-in-use\",b=tg(a)):\"EMAIL_EXISTS\"==a.errorMessage?(a.code=\"email-already-in-use\",b=tg(a)):a.errorMessage&&(b=ji(a.errorMessage));if(b)throw b;if(!a[L])throw new K(\"internal-error\");}function Lf(a,b){b.returnIdpCredential=!0;return O(a,ki,b)}function Nf(a,b){b.returnIdpCredential=!0;return O(a,li,b)}\nfunction Of(a,b){b.returnIdpCredential=!0;b.autoCreate=!1;return O(a,mi,b)}function ni(a){if(!a.oobCode)throw new K(\"invalid-action-code\");}g.Xa=function(a,b){return O(this,oi,{oobCode:a,newPassword:b})};g.Ja=function(a){return O(this,pi,{oobCode:a})};g.Va=function(a){return O(this,qi,{oobCode:a})};\nvar qi={endpoint:\"setAccountInfo\",B:ni,da:\"email\"},pi={endpoint:\"resetPassword\",B:ni,J:function(a){var b=a.requestType;if(!b||!a.email&&\"EMAIL_SIGNIN\"!=b)throw new K(\"internal-error\");}},ri={endpoint:\"signupNewUser\",B:function(a){Ph(a);if(!a.password)throw new K(\"weak-password\");},J:Wh,R:!0},Sh={endpoint:\"createAuthUri\"},si={endpoint:\"deleteAccount\",T:[\"idToken\"]},gi={endpoint:\"setAccountInfo\",T:[\"idToken\",\"deleteProvider\"],B:function(a){if(!fa(a.deleteProvider))throw new K(\"internal-error\");}},Zf=\n{endpoint:\"emailLinkSignin\",T:[\"email\",\"oobCode\"],B:Ph,J:Wh,R:!0},ag={endpoint:\"emailLinkSignin\",T:[\"idToken\",\"email\",\"oobCode\"],B:Ph,J:Wh,R:!0},ti={endpoint:\"getAccountInfo\"},bi={endpoint:\"getOobConfirmationCode\",T:[\"requestType\"],B:function(a){if(\"EMAIL_SIGNIN\"!=a.requestType)throw new K(\"internal-error\");Ph(a)},da:\"email\"},ci={endpoint:\"getOobConfirmationCode\",T:[\"idToken\",\"requestType\"],B:function(a){if(\"VERIFY_EMAIL\"!=a.requestType)throw new K(\"internal-error\");},da:\"email\"},ai={endpoint:\"getOobConfirmationCode\",\nT:[\"requestType\"],B:function(a){if(\"PASSWORD_RESET\"!=a.requestType)throw new K(\"internal-error\");Ph(a)},da:\"email\"},Vh={rb:!0,endpoint:\"getProjectConfig\",Eb:\"GET\"},ui={rb:!0,endpoint:\"getRecaptchaParam\",Eb:\"GET\",J:function(a){if(!a.recaptchaSiteKey)throw new K(\"internal-error\");}},oi={endpoint:\"resetPassword\",B:ni,da:\"email\"},di={endpoint:\"sendVerificationCode\",T:[\"phoneNumber\",\"recaptchaToken\"],da:\"sessionInfo\"},Zh={endpoint:\"setAccountInfo\",T:[\"idToken\"],B:Qh,R:!0},bg={endpoint:\"setAccountInfo\",\nT:[\"idToken\"],B:function(a){Qh(a);if(!a.password)throw new K(\"weak-password\");},J:Wh,R:!0},Yh={endpoint:\"signupNewUser\",J:Wh,R:!0},ki={endpoint:\"verifyAssertion\",B:hi,J:ii,R:!0},mi={endpoint:\"verifyAssertion\",B:hi,J:function(a){if(a.errorMessage&&\"USER_NOT_FOUND\"==a.errorMessage)throw new K(\"user-not-found\");if(a.errorMessage)throw ji(a.errorMessage);if(!a[L])throw new K(\"internal-error\");},R:!0},li={endpoint:\"verifyAssertion\",B:function(a){hi(a);if(!a.idToken)throw new K(\"internal-error\");},J:ii,\nR:!0},vi={endpoint:\"verifyCustomToken\",B:function(a){if(!a.token)throw new K(\"invalid-custom-token\");},J:Wh,R:!0},$f={endpoint:\"verifyPassword\",B:function(a){Ph(a);if(!a.password)throw new K(\"wrong-password\");},J:Wh,R:!0},ei={endpoint:\"verifyPhoneNumber\",B:Xh,J:Wh},gg={endpoint:\"verifyPhoneNumber\",B:function(a){if(!a.idToken)throw new K(\"internal-error\");Xh(a)},J:function(a){if(a.temporaryProof)throw a.code=\"credential-already-in-use\",tg(a);Wh(a)}},hg={Tb:{USER_NOT_FOUND:\"user-not-found\"},endpoint:\"verifyPhoneNumber\",\nB:Xh,J:Wh};function O(a,b,c){if(!Ne(c,b.T))return B(new K(\"internal-error\"));var d=b.Eb||\"POST\",e;return A(c).then(b.B).then(function(){b.R&&(c.returnSecureToken=!0);return Oh(a,b.endpoint,d,c,b.Tb,b.rb||!1)}).then(function(a){return e=a}).then(b.J).then(function(){if(!b.da)return e;if(!(b.da in e))throw new K(\"internal-error\");return e[b.da]})}function ji(a){return Nh({error:{errors:[{message:a}],code:400,message:a}})}\nfunction Nh(a,b){var c=(a.error&&a.error.errors&&a.error.errors[0]||{}).reason||\"\";var d={keyInvalid:\"invalid-api-key\",ipRefererBlocked:\"app-not-authorized\"};if(c=d[c]?new K(d[c]):null)return c;c=a.error&&a.error.message||\"\";d={INVALID_CUSTOM_TOKEN:\"invalid-custom-token\",CREDENTIAL_MISMATCH:\"custom-token-mismatch\",MISSING_CUSTOM_TOKEN:\"internal-error\",INVALID_IDENTIFIER:\"invalid-email\",MISSING_CONTINUE_URI:\"internal-error\",INVALID_EMAIL:\"invalid-email\",INVALID_PASSWORD:\"wrong-password\",USER_DISABLED:\"user-disabled\",\nMISSING_PASSWORD:\"internal-error\",EMAIL_EXISTS:\"email-already-in-use\",PASSWORD_LOGIN_DISABLED:\"operation-not-allowed\",INVALID_IDP_RESPONSE:\"invalid-credential\",FEDERATED_USER_ID_ALREADY_LINKED:\"credential-already-in-use\",INVALID_MESSAGE_PAYLOAD:\"invalid-message-payload\",INVALID_RECIPIENT_EMAIL:\"invalid-recipient-email\",INVALID_SENDER:\"invalid-sender\",EMAIL_NOT_FOUND:\"user-not-found\",EXPIRED_OOB_CODE:\"expired-action-code\",INVALID_OOB_CODE:\"invalid-action-code\",MISSING_OOB_CODE:\"internal-error\",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:\"requires-recent-login\",\nINVALID_ID_TOKEN:\"invalid-user-token\",TOKEN_EXPIRED:\"user-token-expired\",USER_NOT_FOUND:\"user-token-expired\",CORS_UNSUPPORTED:\"cors-unsupported\",DYNAMIC_LINK_NOT_ACTIVATED:\"dynamic-link-not-activated\",INVALID_APP_ID:\"invalid-app-id\",TOO_MANY_ATTEMPTS_TRY_LATER:\"too-many-requests\",WEAK_PASSWORD:\"weak-password\",OPERATION_NOT_ALLOWED:\"operation-not-allowed\",USER_CANCELLED:\"user-cancelled\",CAPTCHA_CHECK_FAILED:\"captcha-check-failed\",INVALID_APP_CREDENTIAL:\"invalid-app-credential\",INVALID_CODE:\"invalid-verification-code\",\nINVALID_PHONE_NUMBER:\"invalid-phone-number\",INVALID_SESSION_INFO:\"invalid-verification-id\",INVALID_TEMPORARY_PROOF:\"invalid-credential\",MISSING_APP_CREDENTIAL:\"missing-app-credential\",MISSING_CODE:\"missing-verification-code\",MISSING_PHONE_NUMBER:\"missing-phone-number\",MISSING_SESSION_INFO:\"missing-verification-id\",QUOTA_EXCEEDED:\"quota-exceeded\",SESSION_EXPIRED:\"code-expired\",INVALID_CONTINUE_URI:\"invalid-continue-uri\",MISSING_ANDROID_PACKAGE_NAME:\"missing-android-pkg-name\",MISSING_IOS_BUNDLE_ID:\"missing-ios-bundle-id\",\nUNAUTHORIZED_DOMAIN:\"unauthorized-continue-uri\",INVALID_OAUTH_CLIENT_ID:\"invalid-oauth-client-id\",INVALID_CERT_HASH:\"invalid-cert-hash\"};bb(d,b||{});b=(b=c.match(/^[^\\s]+\\s*:\\s*(.*)$/))&&1<b.length?b[1]:void 0;for(var e in d)if(0===c.indexOf(e))return new K(d[e],b);!b&&a&&(b=xe(a));return new K(\"internal-error\",b)};var wi={Yc:{Za:\"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\",fb:\"https://securetoken.googleapis.com/v1/token\",id:\"p\"},$c:{Za:\"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/\",fb:\"https://staging-securetoken.sandbox.googleapis.com/v1/token\",id:\"s\"},ad:{Za:\"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/\",fb:\"https://test-securetoken.sandbox.googleapis.com/v1/token\",id:\"t\"}};\nfunction xi(a){for(var b in wi)if(wi[b].id===a)return a=wi[b],{firebaseEndpoint:a.Za,secureTokenEndpoint:a.fb};return null}var yi;yi=xi(\"__EID__\")?\"__EID__\":void 0;function zi(a){this.b=a;this.a=null;this.bb=Ai(this)}\nfunction Ai(a){return Bi().then(function(){return new y(function(b,c){H(\"gapi.iframes.getContext\")().open({where:document.body,url:a.b,messageHandlersFilter:H(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"),attributes:{style:{position:\"absolute\",top:\"-100px\",width:\"1px\",height:\"1px\"}},dontclear:!0},function(d){function e(){clearTimeout(f);b()}a.a=d;a.a.restyle({setHideOnLeave:!1});var f=setTimeout(function(){c(Error(\"Network Error\"))},Ci.get());d.ping(e).then(e,function(){c(Error(\"Network Error\"))})})})})}\nfunction Di(a,b){return a.bb.then(function(){return new y(function(c){a.a.send(b.type,b,c,H(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})})}function Ei(a,b){a.bb.then(function(){a.a.register(\"authEvent\",b,H(\"gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\"))})}var Fi=rd(\"https://apis.google.com/js/api.js?onload=%{onload}\"),Gi=new Ce(3E4,6E4),Ci=new Ce(5E3,15E3),Hi=null;\nfunction Bi(){return Hi?Hi:Hi=(new y(function(a,b){function c(){Be();H(\"gapi.load\")(\"gapi.iframes\",{callback:a,ontimeout:function(){Be();b(Error(\"Network Error\"))},timeout:Gi.get()})}if(H(\"gapi.iframes.Iframe\"))a();else if(H(\"gapi.load\"))c();else{var d=\"__iframefcb\"+Math.floor(1E6*Math.random()).toString();k[d]=function(){H(\"gapi.load\")?c():b(Error(\"Network Error\"))};d=vd(Fi,{onload:d});A(sh(d)).s(function(){b(Error(\"Network Error\"))})}})).s(function(a){Hi=null;throw a;})};function Ii(a,b,c){this.i=a;this.g=b;this.h=c;this.f=null;this.a=fd(this.i,\"/__/auth/iframe\");F(this.a,\"apiKey\",this.g);F(this.a,\"appName\",this.h);this.b=null;this.c=[]}Ii.prototype.toString=function(){this.f?F(this.a,\"v\",this.f):ld(this.a.a,\"v\");this.b?F(this.a,\"eid\",this.b):ld(this.a.a,\"eid\");this.c.length?F(this.a,\"fw\",this.c.join(\",\")):ld(this.a.a,\"fw\");return this.a.toString()};function Ji(a,b,c,d,e){this.o=a;this.l=b;this.c=c;this.m=d;this.h=this.g=this.i=null;this.a=e;this.f=null}\nJi.prototype.toString=function(){var a=fd(this.o,\"/__/auth/handler\");F(a,\"apiKey\",this.l);F(a,\"appName\",this.c);F(a,\"authType\",this.m);if(this.a.isOAuthProvider){var b=this.a;try{var c=firebase.app(this.c).auth().ea()}catch(m){c=null}b.Ya=c;F(a,\"providerId\",this.a.providerId);b=this.a;c=ye(b.vb);for(var d in c)c[d]=c[d].toString();d=b.Ac;c=$a(c);for(var e=0;e<d.length;e++){var f=d[e];f in c&&delete c[f]}b.$a&&b.Ya&&!c[b.$a]&&(c[b.$a]=b.Ya);Za(c)||F(a,\"customParameters\",xe(c))}\"function\"===typeof this.a.Ab&&\n(b=this.a.Ab(),b.length&&F(a,\"scopes\",b.join(\",\")));this.i?F(a,\"redirectUrl\",this.i):ld(a.a,\"redirectUrl\");this.g?F(a,\"eventId\",this.g):ld(a.a,\"eventId\");this.h?F(a,\"v\",this.h):ld(a.a,\"v\");if(this.b)for(var h in this.b)this.b.hasOwnProperty(h)&&!dd(a,h)&&F(a,h,this.b[h]);this.f?F(a,\"eid\",this.f):ld(a.a,\"eid\");h=Ki(this.c);h.length&&F(a,\"fw\",h.join(\",\"));return a.toString()};function Ki(a){try{return firebase.app(a).auth().xa()}catch(b){return[]}}\nfunction Li(a,b,c,d,e){this.l=a;this.f=b;this.b=c;this.c=d||null;this.h=e||null;this.o=this.u=this.v=null;this.g=[];this.m=this.a=null}\nfunction Mi(a){var b=Wd();return Uh(a).then(function(a){a:{var c=ed(b),e=c.c;c=c.b;for(var f=0;f<a.length;f++){var h=a[f];var m=c;var p=e;0==h.indexOf(\"chrome-extension://\")?m=ed(h).b==m&&\"chrome-extension\"==p:\"http\"!=p&&\"https\"!=p?m=!1:ge.test(h)?m=m==h:(h=h.split(\".\").join(\"\\\\.\"),m=(new RegExp(\"^(.+\\\\.\"+h+\"|\"+h+\")$\",\"i\")).test(m));if(m){a=!0;break a}}a=!1}if(!a)throw new rg(Wd());})}\nfunction Ni(a){if(a.m)return a.m;a.m=he().then(function(){if(!a.u){var b=a.c,c=a.h,d=Ki(a.b),e=new Ii(a.l,a.f,a.b);e.f=b;e.b=c;e.c=Ja(d||[]);a.u=e.toString()}a.i=new zi(a.u);Oi(a)});return a.m}g=Li.prototype;g.Ea=function(a,b,c){var d=new K(\"popup-closed-by-user\"),e=new K(\"web-storage-unsupported\"),f=this,h=!1;return this.ga().then(function(){Pi(f).then(function(c){c||(a&&ce(a),b(e),h=!0)})}).s(function(){}).then(function(){if(!h)return fe(a)}).then(function(){if(!h)return Hc(c).then(function(){b(d)})})};\ng.Ib=function(){var a=G();return!we(a)&&!Ae(a)};g.Db=function(){return!1};\ng.zb=function(a,b,c,d,e,f,h){if(!a)return B(new K(\"popup-blocked\"));if(h&&!we())return this.ga().s(function(b){ce(a);e(b)}),d(),A();this.a||(this.a=Mi(Qi(this)));var m=this;return this.a.then(function(){var b=m.ga().s(function(b){ce(a);e(b);throw b;});d();return b}).then(function(){mg(c);if(!h){var d=Ri(m.l,m.f,m.b,b,c,null,f,m.c,void 0,m.h);Xd(d,a)}}).s(function(a){\"auth/network-request-failed\"==a.code&&(m.a=null);throw a;})};\nfunction Qi(a){a.o||(a.v=a.c?re(a.c,Ki(a.b)):null,a.o=new Ah(a.f,xi(a.h),a.v));return a.o}g.Ca=function(a,b,c){this.a||(this.a=Mi(Qi(this)));var d=this;return this.a.then(function(){mg(b);var e=Ri(d.l,d.f,d.b,a,b,Wd(),c,d.c,void 0,d.h);Xd(e)}).s(function(a){\"auth/network-request-failed\"==a.code&&(d.a=null);throw a;})};g.ga=function(){var a=this;return Ni(this).then(function(){return a.i.bb}).s(function(){a.a=null;throw new K(\"network-request-failed\");})};g.Mb=function(){return!0};\nfunction Ri(a,b,c,d,e,f,h,m,p,z){a=new Ji(a,b,c,d,e);a.i=f;a.g=h;a.h=m;a.b=$a(p||null);a.f=z;return a.toString()}function Oi(a){if(!a.i)throw Error(\"IfcHandler must be initialized!\");Ei(a.i,function(b){var c={};if(b&&b.authEvent){var d=!1;b=og(b.authEvent);for(c=0;c<a.g.length;c++)d=a.g[c](b)||d;c={};c.status=d?\"ACK\":\"ERROR\";return A(c)}c.status=\"ERROR\";return A(c)})}\nfunction Pi(a){var b={type:\"webStorageSupport\"};return Ni(a).then(function(){return Di(a.i,b)}).then(function(a){if(a&&a.length&&\"undefined\"!==typeof a[0].webStorageSupport)return a[0].webStorageSupport;throw Error();})}g.va=function(a){this.g.push(a)};g.Ka=function(a){Ha(this.g,function(b){return b==a})};function Si(a){this.a=a||firebase.INTERNAL.reactNative&&firebase.INTERNAL.reactNative.AsyncStorage;if(!this.a)throw new K(\"internal-error\",\"The React Native compatibility library was not found.\");this.type=\"asyncStorage\"}g=Si.prototype;g.get=function(a){return A(this.a.getItem(a)).then(function(a){return a&&ze(a)})};g.set=function(a,b){return A(this.a.setItem(a,xe(b)))};g.P=function(a){return A(this.a.removeItem(a))};g.Y=function(){};g.ca=function(){};function Ti(){if(!Ui())throw new K(\"web-storage-unsupported\");this.f={};this.a=[];this.b=0;this.g=k.indexedDB;this.type=\"indexedDB\"}var Vi;function Wi(a){return new y(function(b,c){var d=a.g.deleteDatabase(\"firebaseLocalStorageDb\");d.onsuccess=function(){b()};d.onerror=function(a){c(Error(a.target.error))}})}\nfunction Xi(a){return new y(function(b,c){var d=a.g.open(\"firebaseLocalStorageDb\",1);d.onerror=function(a){try{a.preventDefault()}catch(f){}c(Error(a.target.error))};d.onupgradeneeded=function(a){a=a.target.result;try{a.createObjectStore(\"firebaseLocalStorage\",{keyPath:\"fbase_key\"})}catch(f){c(f)}};d.onsuccess=function(d){d=d.target.result;d.objectStoreNames.contains(\"firebaseLocalStorage\")?b(d):Wi(a).then(function(){return Xi(a)}).then(function(a){b(a)}).s(function(a){c(a)})}})}\nfunction Yi(a){a.h||(a.h=Xi(a));return a.h}function Ui(){try{return!!k.indexedDB}catch(a){return!1}}function Zi(a){return a.objectStore(\"firebaseLocalStorage\")}function $i(a,b){return a.transaction([\"firebaseLocalStorage\"],b?\"readwrite\":\"readonly\")}function aj(a){return new y(function(b,c){a.onsuccess=function(a){a&&a.target?b(a.target.result):b()};a.onerror=function(a){c(Error(a.target.errorCode))}})}g=Ti.prototype;\ng.set=function(a,b){var c=!1,d,e=this;return Yi(this).then(function(b){d=b;b=Zi($i(d,!0));return aj(b.get(a))}).then(function(f){var h=Zi($i(d,!0));if(f)return f.value=b,aj(h.put(f));e.b++;c=!0;f={};f.fbase_key=a;f.value=b;return aj(h.add(f))}).then(function(){e.f[a]=b}).ia(function(){c&&e.b--})};g.get=function(a){return Yi(this).then(function(b){return aj(Zi($i(b,!1)).get(a))}).then(function(a){return a&&a.value})};\ng.P=function(a){var b=!1,c=this;return Yi(this).then(function(d){b=!0;c.b++;return aj(Zi($i(d,!0))[\"delete\"](a))}).then(function(){delete c.f[a]}).ia(function(){b&&c.b--})};\ng.Kc=function(){var a=this;return Yi(this).then(function(a){var b=Zi($i(a,!1));return b.getAll?aj(b.getAll()):new y(function(a,c){var d=[],e=b.openCursor();e.onsuccess=function(b){(b=b.target.result)?(d.push(b.value),b[\"continue\"]()):a(d)};e.onerror=function(a){c(Error(a.target.errorCode))}})}).then(function(b){var c={},d=[];if(0==a.b){for(d=0;d<b.length;d++)c[b[d].fbase_key]=b[d].value;d=Yd(a.f,c);a.f=c}return d})};g.Y=function(a){0==this.a.length&&bj(this);this.a.push(a)};\ng.ca=function(a){Ha(this.a,function(b){return b==a});0==this.a.length&&this.c&&this.c.cancel(\"STOP_EVENT\")};function bj(a){function b(){a.c=Hc(800).then(r(a.Kc,a)).then(function(b){0<b.length&&v(a.a,function(a){a(b)})}).then(b).s(function(a){\"STOP_EVENT\"!=a.message&&b()});return a.c}a.c&&a.c.cancel(\"STOP_EVENT\");b()};function cj(a){var b=this,c=null;this.a=[];this.type=\"indexedDB\";this.c=a;this.b=A().then(function(){return Ui()?(Vi||(Vi=new Ti),c=Vi,c.set(\"__sak\",\"!\").then(function(){return c.get(\"__sak\")}).then(function(a){if(\"!\"!==a)throw Error(\"indexedDB not supported!\");return c.P(\"__sak\")}).then(function(){return c}).s(function(){return b.c})):b.c}).then(function(a){b.type=a.type;a.Y(function(a){v(b.a,function(b){b(a)})});return a})}g=cj.prototype;g.get=function(a){return this.b.then(function(b){return b.get(a)})};\ng.set=function(a,b){return this.b.then(function(c){return c.set(a,b)})};g.P=function(a){return this.b.then(function(b){return b.P(a)})};g.Y=function(a){this.a.push(a)};g.ca=function(a){Ha(this.a,function(b){return b==a})};function dj(){this.a={};this.type=\"inMemory\"}g=dj.prototype;g.get=function(a){return A(this.a[a])};g.set=function(a,b){this.a[a]=b;return A()};g.P=function(a){delete this.a[a];return A()};g.Y=function(){};g.ca=function(){};function ej(){if(!fj()){if(\"Node\"==ne())throw new K(\"internal-error\",\"The LocalStorage compatibility library was not found.\");throw new K(\"web-storage-unsupported\");}this.a=gj()||firebase.INTERNAL.node.localStorage;this.type=\"localStorage\"}function gj(){try{var a=k.localStorage,b=te();a&&(a.setItem(b,\"1\"),a.removeItem(b));return a}catch(c){return null}}\nfunction fj(){var a=\"Node\"==ne();a=gj()||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.localStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}}g=ej.prototype;g.get=function(a){var b=this;return A().then(function(){var c=b.a.getItem(a);return ze(c)})};g.set=function(a,b){var c=this;return A().then(function(){var d=xe(b);null===d?c.P(a):c.a.setItem(a,d)})};g.P=function(a){var b=this;return A().then(function(){b.a.removeItem(a)})};\ng.Y=function(a){k.window&&rc(k.window,\"storage\",a)};g.ca=function(a){k.window&&D(k.window,\"storage\",a)};function hj(){this.type=\"nullStorage\"}g=hj.prototype;g.get=function(){return A(null)};g.set=function(){return A()};g.P=function(){return A()};g.Y=function(){};g.ca=function(){};function ij(){if(!jj()){if(\"Node\"==ne())throw new K(\"internal-error\",\"The SessionStorage compatibility library was not found.\");throw new K(\"web-storage-unsupported\");}this.a=kj()||firebase.INTERNAL.node.sessionStorage;this.type=\"sessionStorage\"}function kj(){try{var a=k.sessionStorage,b=te();a&&(a.setItem(b,\"1\"),a.removeItem(b));return a}catch(c){return null}}\nfunction jj(){var a=\"Node\"==ne();a=kj()||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.sessionStorage;if(!a)return!1;try{return a.setItem(\"__sak\",\"1\"),a.removeItem(\"__sak\"),!0}catch(b){return!1}}g=ij.prototype;g.get=function(a){var b=this;return A().then(function(){var c=b.a.getItem(a);return ze(c)})};g.set=function(a,b){var c=this;return A().then(function(){var d=xe(b);null===d?c.P(a):c.a.setItem(a,d)})};g.P=function(a){var b=this;return A().then(function(){b.a.removeItem(a)})};g.Y=function(){};\ng.ca=function(){};function lj(){var a={};a.Browser=mj;a.Node=nj;a.ReactNative=oj;a.Worker=pj;this.a=a[ne()]}var qj,mj={A:ej,Qa:ij},nj={A:ej,Qa:ij},oj={A:Si,Qa:hj},pj={A:ej,Qa:hj};var rj={Xc:\"local\",NONE:\"none\",Zc:\"session\"};function sj(a){var b=new K(\"invalid-persistence-type\"),c=new K(\"unsupported-persistence-type\");a:{for(d in rj)if(rj[d]==a){var d=!0;break a}d=!1}if(!d||\"string\"!==typeof a)throw b;switch(ne()){case \"ReactNative\":if(\"session\"===a)throw c;break;case \"Node\":if(\"none\"!==a)throw c;break;default:if(!se()&&\"none\"!==a)throw c;}}\nfunction tj(){var a=!Ae(G())&&le()?!0:!1,b=we(),c=se();this.o=a;this.h=b;this.m=c;this.a={};qj||(qj=new lj);a=qj;try{this.g=!Vd()&&Ge()||!k.indexedDB?new a.a.A:new cj(me()?new dj:new a.a.A)}catch(d){this.g=new dj,this.h=!0}try{this.i=new a.a.Qa}catch(d){this.i=new dj}this.l=new dj;this.f=r(this.Lb,this);this.b={}}var uj;function vj(){uj||(uj=new tj);return uj}function wj(a,b){switch(b){case \"session\":return a.i;case \"none\":return a.l;default:return a.g}}\nfunction xj(a,b){return\"firebase:\"+a.name+(b?\":\"+b:\"\")}function yj(a,b,c){var d=xj(b,c),e=wj(a,b.A);return a.get(b,c).then(function(f){var h=null;try{h=ze(k.localStorage.getItem(d))}catch(m){}if(h&&!f)return k.localStorage.removeItem(d),a.set(b,h,c);h&&f&&\"localStorage\"!=e.type&&k.localStorage.removeItem(d)})}g=tj.prototype;g.get=function(a,b){return wj(this,a.A).get(xj(a,b))};function zj(a,b,c){c=xj(b,c);\"local\"==b.A&&(a.b[c]=null);return wj(a,b.A).P(c)}\ng.set=function(a,b,c){var d=xj(a,c),e=this,f=wj(this,a.A);return f.set(d,b).then(function(){return f.get(d)}).then(function(b){\"local\"==a.A&&(e.b[d]=b)})};g.addListener=function(a,b,c){a=xj(a,b);this.m&&(this.b[a]=k.localStorage.getItem(a));Za(this.a)&&(wj(this,\"local\").Y(this.f),this.h||(Vd()||!Ge())&&k.indexedDB||!this.m||Aj(this));this.a[a]||(this.a[a]=[]);this.a[a].push(c)};\ng.removeListener=function(a,b,c){a=xj(a,b);this.a[a]&&(Ha(this.a[a],function(a){return a==c}),0==this.a[a].length&&delete this.a[a]);Za(this.a)&&(wj(this,\"local\").ca(this.f),Bj(this))};function Aj(a){Bj(a);a.c=setInterval(function(){for(var b in a.a){var c=k.localStorage.getItem(b),d=a.b[b];c!=d&&(a.b[b]=c,c=new ec({type:\"storage\",key:b,target:window,oldValue:d,newValue:c,a:!0}),a.Lb(c))}},1E3)}function Bj(a){a.c&&(clearInterval(a.c),a.c=null)}\ng.Lb=function(a){if(a&&a.f){var b=a.a.key;if(null==b)for(var c in this.a){var d=this.b[c];\"undefined\"===typeof d&&(d=null);var e=k.localStorage.getItem(c);e!==d&&(this.b[c]=e,this.Wa(c))}else if(0==b.indexOf(\"firebase:\")&&this.a[b]){\"undefined\"!==typeof a.a.a?wj(this,\"local\").ca(this.f):Bj(this);if(this.o)if(c=k.localStorage.getItem(b),d=a.a.newValue,d!==c)null!==d?k.localStorage.setItem(b,d):k.localStorage.removeItem(b);else if(this.b[b]===d&&\"undefined\"===typeof a.a.a)return;var f=this;c=function(){if(\"undefined\"!==\ntypeof a.a.a||f.b[b]!==k.localStorage.getItem(b))f.b[b]=k.localStorage.getItem(b),f.Wa(b)};Ob&&Zb&&10==Zb&&k.localStorage.getItem(b)!==a.a.newValue&&a.a.newValue!==a.a.oldValue?setTimeout(c,10):c()}}else v(a,r(this.Wa,this))};g.Wa=function(a){this.a[a]&&v(this.a[a],function(a){a()})};function Cj(a){this.a=a;this.b=vj()}var Dj={name:\"authEvent\",A:\"local\"};function Ej(a){return a.b.get(Dj,a.a).then(function(a){return og(a)})};function Fj(){this.a=vj()};function Gj(){this.b=-1};function Hj(a,b){this.b=-1;this.b=Ij;this.f=k.Uint8Array?new Uint8Array(this.b):Array(this.b);this.g=this.c=0;this.a=[];this.i=a;this.h=b;this.m=k.Int32Array?new Int32Array(64):Array(64);void 0!==Jj||(k.Int32Array?Jj=new Int32Array(Kj):Jj=Kj);this.reset()}var Jj;t(Hj,Gj);for(var Ij=64,Lj=Ij-1,Mj=[],Nj=0;Nj<Lj;Nj++)Mj[Nj]=0;var Oj=Ia(128,Mj);Hj.prototype.reset=function(){this.g=this.c=0;this.a=k.Int32Array?new Int32Array(this.h):Ja(this.h)};\nfunction Pj(a){for(var b=a.f,c=a.m,d=0,e=0;e<b.length;)c[d++]=b[e]<<24|b[e+1]<<16|b[e+2]<<8|b[e+3],e=4*d;for(b=16;64>b;b++){e=c[b-15]|0;d=c[b-2]|0;var f=(c[b-16]|0)+((e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3)|0,h=(c[b-7]|0)+((d>>>17|d<<15)^(d>>>19|d<<13)^d>>>10)|0;c[b]=f+h|0}d=a.a[0]|0;e=a.a[1]|0;var m=a.a[2]|0,p=a.a[3]|0,z=a.a[4]|0,pc=a.a[5]|0,Pc=a.a[6]|0;f=a.a[7]|0;for(b=0;64>b;b++){var Rl=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&e^d&m^e&m)|0;h=z&pc^~z&Pc;f=f+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>\n25|z<<7))|0;h=h+(Jj[b]|0)|0;h=f+(h+(c[b]|0)|0)|0;f=Pc;Pc=pc;pc=z;z=p+h|0;p=m;m=e;e=d;d=h+Rl|0}a.a[0]=a.a[0]+d|0;a.a[1]=a.a[1]+e|0;a.a[2]=a.a[2]+m|0;a.a[3]=a.a[3]+p|0;a.a[4]=a.a[4]+z|0;a.a[5]=a.a[5]+pc|0;a.a[6]=a.a[6]+Pc|0;a.a[7]=a.a[7]+f|0}\nfunction Qj(a,b,c){void 0===c&&(c=b.length);var d=0,e=a.c;if(l(b))for(;d<c;)a.f[e++]=b.charCodeAt(d++),e==a.b&&(Pj(a),e=0);else if(ha(b))for(;d<c;){var f=b[d++];if(!(\"number\"==typeof f&&0<=f&&255>=f&&f==(f|0)))throw Error(\"message must be a byte array\");a.f[e++]=f;e==a.b&&(Pj(a),e=0)}else throw Error(\"message must be string or array\");a.c=e;a.g+=c}\nvar Kj=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,\n4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function Rj(){Hj.call(this,8,Sj)}t(Rj,Hj);var Sj=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function Tj(a,b,c,d,e){this.l=a;this.i=b;this.m=c;this.o=d||null;this.u=e||null;this.h=b+\":\"+c;this.v=new Fj;this.g=new Cj(this.h);this.f=null;this.b=[];this.a=this.c=null}function Uj(a){return new K(\"invalid-cordova-configuration\",a)}g=Tj.prototype;\ng.ga=function(){return this.za?this.za:this.za=ie().then(function(){if(\"function\"!==typeof H(\"universalLinks.subscribe\",k))throw Uj(\"cordova-universal-links-plugin is not installed\");if(\"undefined\"===typeof H(\"BuildInfo.packageName\",k))throw Uj(\"cordova-plugin-buildinfo is not installed\");if(\"function\"!==typeof H(\"cordova.plugins.browsertab.openUrl\",k))throw Uj(\"cordova-plugin-browsertab is not installed\");if(\"function\"!==typeof H(\"cordova.InAppBrowser.open\",k))throw Uj(\"cordova-plugin-inappbrowser is not installed\");\n},function(){throw new K(\"cordova-not-ready\");})};function Vj(){for(var a=20,b=[];0<a;)b.push(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".charAt(Math.floor(62*Math.random()))),a--;return b.join(\"\")}function Wj(a){var b=new Rj;Qj(b,a);a=[];var c=8*b.g;56>b.c?Qj(b,Oj,56-b.c):Qj(b,Oj,b.b-(b.c-56));for(var d=63;56<=d;d--)b.f[d]=c&255,c/=256;Pj(b);for(d=c=0;d<b.i;d++)for(var e=24;0<=e;e-=8)a[c++]=b.a[d]>>e&255;return lf(a)}\ng.Ea=function(a,b){b(new K(\"operation-not-supported-in-this-environment\"));return A()};g.zb=function(){return B(new K(\"operation-not-supported-in-this-environment\"))};g.Mb=function(){return!1};g.Ib=function(){return!0};g.Db=function(){return!0};\ng.Ca=function(a,b,c){if(this.c)return B(new K(\"redirect-operation-pending\"));var d=this,e=k.document,f=null,h=null,m=null,p=null;return this.c=A().then(function(){mg(b);return Xj(d)}).then(function(){return Yj(d,a,b,c)}).then(function(){return(new y(function(a,b){h=function(){var b=H(\"cordova.plugins.browsertab.close\",k);a();\"function\"===typeof b&&b();d.a&&\"function\"===typeof d.a.close&&(d.a.close(),d.a=null);return!1};d.va(h);m=function(){f||(f=Hc(2E3).then(function(){b(new K(\"redirect-cancelled-by-user\"))}))};\np=function(){De()&&m()};e.addEventListener(\"resume\",m,!1);G().toLowerCase().match(/android/)||e.addEventListener(\"visibilitychange\",p,!1)})).s(function(a){return Zj(d).then(function(){throw a;})})}).ia(function(){m&&e.removeEventListener(\"resume\",m,!1);p&&e.removeEventListener(\"visibilitychange\",p,!1);f&&f.cancel();h&&d.Ka(h);d.c=null})};\nfunction Yj(a,b,c,d){var e=Vj(),f=new ng(b,d,null,e,new K(\"no-auth-event\")),h=H(\"BuildInfo.packageName\",k);if(\"string\"!==typeof h)throw new K(\"invalid-cordova-configuration\");var m=H(\"BuildInfo.displayName\",k),p={};if(G().toLowerCase().match(/iphone|ipad|ipod/))p.ibi=h;else if(G().toLowerCase().match(/android/))p.apn=h;else return B(new K(\"operation-not-supported-in-this-environment\"));m&&(p.appDisplayName=m);e=Wj(e);p.sessionId=e;var z=Ri(a.l,a.i,a.m,b,c,null,d,a.o,p,a.u);return a.ga().then(function(){var b=\na.h;return a.v.a.set(Dj,f.D(),b)}).then(function(){var b=H(\"cordova.plugins.browsertab.isAvailable\",k);if(\"function\"!==typeof b)throw new K(\"invalid-cordova-configuration\");var c=null;b(function(b){if(b){c=H(\"cordova.plugins.browsertab.openUrl\",k);if(\"function\"!==typeof c)throw new K(\"invalid-cordova-configuration\");c(z)}else{c=H(\"cordova.InAppBrowser.open\",k);if(\"function\"!==typeof c)throw new K(\"invalid-cordova-configuration\");b=G();b=!(!b.match(/(iPad|iPhone|iPod).*OS 7_\\d/i)&&!b.match(/(iPad|iPhone|iPod).*OS 8_\\d/i));\na.a=c(z,b?\"_blank\":\"_system\",\"location=yes\")}})})}function ak(a,b){for(var c=0;c<a.b.length;c++)try{a.b[c](b)}catch(d){}}function Xj(a){a.f||(a.f=a.ga().then(function(){return new y(function(b){function c(d){b(d);a.Ka(c);return!1}a.va(c);bk(a)})}));return a.f}function Zj(a){var b=null;return Ej(a.g).then(function(c){b=c;c=a.g;return zj(c.b,Dj,c.a)}).then(function(){return b})}\nfunction bk(a){function b(b){d=!0;e&&e.cancel();Zj(a).then(function(d){var e=c;if(d&&b&&b.url){var f=null;e=If(b.url);-1!=e.indexOf(\"/__/auth/callback\")&&(f=ed(e),f=ze(dd(f,\"firebaseError\")||null),f=(f=\"object\"===typeof f?$e(f):null)?new ng(d.b,d.c,null,null,f):new ng(d.b,d.c,e,d.g));e=f||c}ak(a,e)})}var c=new ng(\"unknown\",null,null,null,new K(\"no-auth-event\")),d=!1,e=Hc(500).then(function(){return Zj(a).then(function(){d||ak(a,c)})}),f=k.handleOpenURL;k.handleOpenURL=function(a){0==a.toLowerCase().indexOf(H(\"BuildInfo.packageName\",\nk).toLowerCase()+\"://\")&&b({url:a});if(\"function\"===typeof f)try{f(a)}catch(m){console.error(m)}};qg||(qg=new pg);qg.subscribe(b)}g.va=function(a){this.b.push(a);Xj(this).s(function(b){\"auth/invalid-cordova-configuration\"===b.code&&(b=new ng(\"unknown\",null,null,null,new K(\"no-auth-event\")),a(b))})};g.Ka=function(a){Ha(this.b,function(b){return b==a})};function ck(a){this.a=a;this.b=vj()}var dk={name:\"pendingRedirect\",A:\"session\"};function ek(a){return a.b.set(dk,\"pending\",a.a)}function fk(a){return zj(a.b,dk,a.a)}function gk(a){return a.b.get(dk,a.a).then(function(a){return\"pending\"==a})};function hk(a,b,c){this.v=a;this.m=b;this.l=c;this.h=[];this.f=!1;this.i=r(this.o,this);this.c=new ik;this.u=new jk;this.g=new ck(this.m+\":\"+this.l);this.b={};this.b.unknown=this.c;this.b.signInViaRedirect=this.c;this.b.linkViaRedirect=this.c;this.b.reauthViaRedirect=this.c;this.b.signInViaPopup=this.u;this.b.linkViaPopup=this.u;this.b.reauthViaPopup=this.u;this.a=kk(this.v,this.m,this.l,yi)}function kk(a,b,c,d){var e=firebase.SDK_VERSION||null;return je()?new Tj(a,b,c,e,d):new Li(a,b,c,e,d)}\nhk.prototype.reset=function(){this.f=!1;this.a.Ka(this.i);this.a=kk(this.v,this.m,this.l)};function lk(a){a.f||(a.f=!0,a.a.va(a.i));var b=a.a;return a.a.ga().s(function(c){a.a==b&&a.reset();throw c;})}function mk(a){a.a.Ib()&&lk(a).s(function(b){var c=new ng(\"unknown\",null,null,null,new K(\"operation-not-supported-in-this-environment\"));nk(b)&&a.o(c)});a.a.Db()||ok(a.c)}\nhk.prototype.subscribe=function(a){Fa(this.h,a)||this.h.push(a);if(!this.f){var b=this;gk(this.g).then(function(a){a?fk(b.g).then(function(){lk(b).s(function(a){var c=new ng(\"unknown\",null,null,null,new K(\"operation-not-supported-in-this-environment\"));nk(a)&&b.o(c)})}):mk(b)}).s(function(){mk(b)})}};hk.prototype.unsubscribe=function(a){Ha(this.h,function(b){return b==a})};\nhk.prototype.o=function(a){if(!a)throw new K(\"invalid-auth-event\");for(var b=!1,c=0;c<this.h.length;c++){var d=this.h[c];if(d.sb(a.b,a.c)){(b=this.b[a.b])&&b.h(a,d);b=!0;break}}ok(this.c);return b};var pk=new Ce(2E3,1E4),qk=new Ce(3E4,6E4);hk.prototype.fa=function(){return this.c.fa()};function rk(a,b,c,d,e,f){return a.a.zb(b,c,d,function(){a.f||(a.f=!0,a.a.va(a.i))},function(){a.reset()},e,f)}function nk(a){return a&&\"auth/cordova-not-ready\"==a.code?!0:!1}\nhk.prototype.Ca=function(a,b,c){var d=this,e;return ek(this.g).then(function(){return d.a.Ca(a,b,c).s(function(a){if(nk(a))throw new K(\"operation-not-supported-in-this-environment\");e=a;return fk(d.g).then(function(){throw e;})}).then(function(){return d.a.Mb()?new y(function(){}):fk(d.g).then(function(){return d.fa()}).then(function(){}).s(function(){})})})};hk.prototype.Ea=function(a,b,c,d){return this.a.Ea(c,function(c){a.ha(b,null,c,d)},pk.get())};var sk={};\nfunction tk(a,b,c){var d=b+\":\"+c;sk[d]||(sk[d]=new hk(a,b,c));return sk[d]}function ik(){this.b=null;this.f=[];this.c=[];this.a=null;this.g=!1}ik.prototype.reset=function(){this.b=null;this.a&&(this.a.cancel(),this.a=null)};\nik.prototype.h=function(a,b){if(a){this.reset();this.g=!0;var c=a.b,d=a.c,e=a.a&&\"auth/web-storage-unsupported\"==a.a.code,f=a.a&&\"auth/operation-not-supported-in-this-environment\"==a.a.code;\"unknown\"!=c||e||f?a.a?(uk(this,!0,null,a.a),A()):b.wa(c,d)?vk(this,a,b):B(new K(\"invalid-auth-event\")):(uk(this,!1,null,null),A())}else B(new K(\"invalid-auth-event\"))};function ok(a){a.g||(a.g=!0,uk(a,!1,null,null))}\nfunction vk(a,b,c){c=c.wa(b.b,b.c);var d=b.f,e=b.g,f=!!b.b.match(/Redirect$/);c(d,e).then(function(b){uk(a,f,b,null)}).s(function(b){uk(a,f,null,b)})}function wk(a,b){a.b=function(){return B(b)};if(a.c.length)for(var c=0;c<a.c.length;c++)a.c[c](b)}function xk(a,b){a.b=function(){return A(b)};if(a.f.length)for(var c=0;c<a.f.length;c++)a.f[c](b)}function uk(a,b,c,d){b?d?wk(a,d):xk(a,c):xk(a,{user:null});a.f=[];a.c=[]}\nik.prototype.fa=function(){var a=this;return new y(function(b,c){a.b?a.b().then(b,c):(a.f.push(b),a.c.push(c),yk(a))})};function yk(a){var b=new K(\"timeout\");a.a&&a.a.cancel();a.a=Hc(qk.get()).then(function(){a.b||uk(a,!0,null,b)})}function jk(){}jk.prototype.h=function(a,b){if(a){var c=a.b,d=a.c;a.a?(b.ha(a.b,null,a.a,a.c),A()):b.wa(c,d)?zk(a,b):B(new K(\"invalid-auth-event\"))}else B(new K(\"invalid-auth-event\"))};\nfunction zk(a,b){var c=a.c,d=a.b;b.wa(d,c)(a.f,a.g).then(function(a){b.ha(d,a,null,c)}).s(function(a){b.ha(d,null,a,c)})};function Ak(){this.pb=!1;Object.defineProperty(this,\"appVerificationDisabled\",{get:function(){return this.pb},set:function(a){this.pb=a},enumerable:!1})};function Bk(a,b){this.a=b;I(this,\"verificationId\",a)}Bk.prototype.confirm=function(a){a=kg(this.verificationId,a);return this.a(a)};function Ck(a,b,c,d){return(new ig(a)).Ta(b,c).then(function(a){return new Bk(a,d)})};function Dk(a){var b=tf(a);if(!(b&&b.exp&&b.auth_time&&b.iat))throw new K(\"internal-error\",\"An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.\");J(this,{token:a,expirationTime:Fe(1E3*b.exp),authTime:Fe(1E3*b.auth_time),issuedAtTime:Fe(1E3*b.iat),signInProvider:b.firebase&&b.firebase.sign_in_provider?b.firebase.sign_in_provider:null,claims:b})};function Ek(a,b,c){this.h=a;this.i=b;this.g=c;this.c=3E4;this.f=96E4;this.b=null;this.a=this.c;if(this.f<this.c)throw Error(\"Proactive refresh lower bound greater than upper bound!\");}Ek.prototype.start=function(){this.a=this.c;Fk(this,!0)};function Gk(a,b){if(b)return a.a=a.c,a.g();b=a.a;a.a*=2;a.a>a.f&&(a.a=a.f);return b}function Fk(a,b){a.stop();a.b=Hc(Gk(a,b)).then(function(){return Ee()}).then(function(){return a.h()}).then(function(){Fk(a,!0)}).s(function(b){a.i(b)&&Fk(a,!1)})}\nEk.prototype.stop=function(){this.b&&(this.b.cancel(),this.b=null)};function Hk(a){this.f=a;this.b=this.a=null;this.c=0}Hk.prototype.D=function(){return{apiKey:this.f.b,refreshToken:this.a,accessToken:this.b,expirationTime:this.c}};function Ik(a,b){var c=b[L],d=b.refreshToken;b=Jk(b.expiresIn);a.b=c;a.c=b;a.a=d}function Kk(a,b){a.b=b.b;a.a=b.a;a.c=b.c}function Jk(a){return na()+1E3*parseInt(a,10)}\nfunction Lk(a,b){return Mh(a.f,b).then(function(b){a.b=b.access_token;a.c=Jk(b.expires_in);a.a=b.refresh_token;return{accessToken:a.b,expirationTime:a.c,refreshToken:a.a}}).s(function(b){\"auth/user-token-expired\"==b.code&&(a.a=null);throw b;})}Hk.prototype.getToken=function(a){a=!!a;return this.b&&!this.a?B(new K(\"user-token-expired\")):a||!this.b||na()>this.c-3E4?this.a?Lk(this,{grant_type:\"refresh_token\",refresh_token:this.a}):A(null):A({accessToken:this.b,expirationTime:this.c,refreshToken:this.a})};function Mk(a,b){this.a=a||null;this.b=b||null;J(this,{lastSignInTime:Fe(b||null),creationTime:Fe(a||null)})}function Nk(a){return new Mk(a.a,a.b)}Mk.prototype.D=function(){return{lastLoginAt:this.b,createdAt:this.a}};function Ok(a,b,c,d,e,f){J(this,{uid:a,displayName:d||null,photoURL:e||null,email:c||null,phoneNumber:f||null,providerId:b})}function Pk(a,b){C.call(this,a);for(var c in b)this[c]=b[c]}t(Pk,C);\nfunction Q(a,b,c){this.G=[];this.l=a.apiKey;this.o=a.appName;this.u=a.authDomain||null;a=firebase.SDK_VERSION?re(firebase.SDK_VERSION):null;this.b=new Ah(this.l,xi(yi),a);this.h=new Hk(this.b);Qk(this,b[L]);Ik(this.h,b);I(this,\"refreshToken\",this.h.a);Rk(this,c||{});E.call(this);this.I=!1;this.u&&ue()&&(this.a=tk(this.u,this.l,this.o));this.N=[];this.i=null;this.w=Sk(this);this.V=r(this.Ha,this);var d=this;this.ka=null;this.sa=function(a){d.oa(a.g)};this.X=null;this.O=[];this.ra=function(a){Tk(d,\na.c)};this.W=null}t(Q,E);Q.prototype.oa=function(a){this.ka=a;Gh(this.b,a)};Q.prototype.ea=function(){return this.ka};function Uk(a,b){a.X&&D(a.X,\"languageCodeChanged\",a.sa);(a.X=b)&&rc(b,\"languageCodeChanged\",a.sa)}function Tk(a,b){a.O=b;Hh(a.b,firebase.SDK_VERSION?re(firebase.SDK_VERSION,a.O):null)}Q.prototype.xa=function(){return Ja(this.O)};function Vk(a,b){a.W&&D(a.W,\"frameworkChanged\",a.ra);(a.W=b)&&rc(b,\"frameworkChanged\",a.ra)}Q.prototype.Ha=function(){this.w.b&&(this.w.stop(),this.w.start())};\nfunction Wk(a){try{return firebase.app(a.o).auth()}catch(b){throw new K(\"internal-error\",\"No firebase.auth.Auth instance is available for the Firebase App '\"+a.o+\"'!\");}}function Sk(a){return new Ek(function(){return a.F(!0)},function(a){return a&&\"auth/network-request-failed\"==a.code?!0:!1},function(){var b=a.h.c-na()-3E5;return 0<b?b:0})}function Xk(a){a.C||a.w.b||(a.w.start(),D(a,\"tokenChanged\",a.V),rc(a,\"tokenChanged\",a.V))}function Yk(a){D(a,\"tokenChanged\",a.V);a.w.stop()}\nfunction Qk(a,b){a.qa=b;I(a,\"_lat\",b)}function Zk(a,b){Ha(a.N,function(a){return a==b})}function $k(a){for(var b=[],c=0;c<a.N.length;c++)b.push(a.N[c](a));return vb(b).then(function(){return a})}function al(a){a.a&&!a.I&&(a.I=!0,a.a.subscribe(a))}\nfunction Rk(a,b){J(a,{uid:b.uid,displayName:b.displayName||null,photoURL:b.photoURL||null,email:b.email||null,emailVerified:b.emailVerified||!1,phoneNumber:b.phoneNumber||null,isAnonymous:b.isAnonymous||!1,metadata:new Mk(b.createdAt,b.lastLoginAt),providerData:[]})}I(Q.prototype,\"providerId\",\"firebase\");function bl(){}function cl(a){return A().then(function(){if(a.C)throw new K(\"app-deleted\");})}function dl(a){return Ba(a.providerData,function(a){return a.providerId})}\nfunction el(a,b){b&&(fl(a,b.providerId),a.providerData.push(b))}function fl(a,b){Ha(a.providerData,function(a){return a.providerId==b})}function gl(a,b,c){(\"uid\"!=b||c)&&a.hasOwnProperty(b)&&I(a,b,c)}\nfunction hl(a,b){a!=b&&(J(a,{uid:b.uid,displayName:b.displayName,photoURL:b.photoURL,email:b.email,emailVerified:b.emailVerified,phoneNumber:b.phoneNumber,isAnonymous:b.isAnonymous,providerData:[]}),b.metadata?I(a,\"metadata\",Nk(b.metadata)):I(a,\"metadata\",new Mk),v(b.providerData,function(b){el(a,b)}),Kk(a.h,b.h),I(a,\"refreshToken\",a.h.a))}g=Q.prototype;g.reload=function(){var a=this;return R(this,cl(this).then(function(){return il(a).then(function(){return $k(a)}).then(bl)}))};\nfunction il(a){return a.F().then(function(b){var c=a.isAnonymous;return jl(a,b).then(function(){c||gl(a,\"isAnonymous\",!1);return b})})}g.ac=function(a){return this.F(a).then(function(a){return new Dk(a)})};g.F=function(a){var b=this;return R(this,cl(this).then(function(){return b.h.getToken(a)}).then(function(a){if(!a)throw new K(\"internal-error\");a.accessToken!=b.qa&&(Qk(b,a.accessToken),b.dispatchEvent(new Pk(\"tokenChanged\")));gl(b,\"refreshToken\",a.refreshToken);return a.accessToken}))};\nfunction kl(a,b){b[L]&&a.qa!=b[L]&&(Ik(a.h,b),a.dispatchEvent(new Pk(\"tokenChanged\")),Qk(a,b[L]),gl(a,\"refreshToken\",a.h.a))}function jl(a,b){return O(a.b,ti,{idToken:b}).then(r(a.uc,a))}\ng.uc=function(a){a=a.users;if(!a||!a.length)throw new K(\"internal-error\");a=a[0];Rk(this,{uid:a.localId,displayName:a.displayName,photoURL:a.photoUrl,email:a.email,emailVerified:!!a.emailVerified,phoneNumber:a.phoneNumber,lastLoginAt:a.lastLoginAt,createdAt:a.createdAt});for(var b=ll(a),c=0;c<b.length;c++)el(this,b[c]);gl(this,\"isAnonymous\",!(this.email&&a.passwordHash)&&!(this.providerData&&this.providerData.length))};\nfunction ll(a){return(a=a.providerUserInfo)&&a.length?Ba(a,function(a){return new Ok(a.rawId,a.providerId,a.email,a.displayName,a.photoUrl,a.phoneNumber)}):[]}g.cb=function(a){var b=this,c=null;return R(this,a.f(this.b,this.uid).then(function(a){kl(b,a);c=ml(b,a,\"reauthenticate\");b.i=null;return b.reload()}).then(function(){return c}),!0)};\ng.vc=function(a){Ie(\"firebase.User.prototype.reauthenticateWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential instead.\");return this.cb(a).then(function(){})};function nl(a,b){return il(a).then(function(){if(Fa(dl(a),b))return $k(a).then(function(){throw new K(\"provider-already-linked\");})})}\ng.ab=function(a){var b=this,c=null;return R(this,nl(this,a.providerId).then(function(){return b.F()}).then(function(c){return a.c(b.b,c)}).then(function(a){c=ml(b,a,\"link\");return ol(b,a)}).then(function(){return c}))};g.mc=function(a){Ie(\"firebase.User.prototype.linkWithCredential is deprecated. Please use firebase.User.prototype.linkAndRetrieveDataWithCredential instead.\");return this.ab(a).then(function(a){return a.user})};\ng.nc=function(a,b){var c=this;return R(this,nl(this,\"phone\").then(function(){return Ck(Wk(c),a,b,r(c.ab,c))}))};g.wc=function(a,b){var c=this;return R(this,A().then(function(){return Ck(Wk(c),a,b,r(c.cb,c))}),!0)};function ml(a,b,c){var d=lg(b);b=yf(b);return Le({user:a,credential:d,additionalUserInfo:b,operationType:c})}function ol(a,b){kl(a,b);return a.reload().then(function(){return a})}\ng.mb=function(a){var b=this;return R(this,this.F().then(function(c){return b.b.mb(c,a)}).then(function(a){kl(b,a);return b.reload()}))};g.Pc=function(a){var b=this;return R(this,this.F().then(function(c){return a.c(b.b,c)}).then(function(a){kl(b,a);return b.reload()}))};g.nb=function(a){var b=this;return R(this,this.F().then(function(c){return b.b.nb(c,a)}).then(function(a){kl(b,a);return b.reload()}))};\ng.ob=function(a){if(void 0===a.displayName&&void 0===a.photoURL)return cl(this);var b=this;return R(this,this.F().then(function(c){return b.b.ob(c,{displayName:a.displayName,photoUrl:a.photoURL})}).then(function(a){kl(b,a);gl(b,\"displayName\",a.displayName||null);gl(b,\"photoURL\",a.photoUrl||null);v(b.providerData,function(a){\"password\"===a.providerId&&(I(a,\"displayName\",b.displayName),I(a,\"photoURL\",b.photoURL))});return $k(b)}).then(bl))};\ng.Nc=function(a){var b=this;return R(this,il(this).then(function(c){return Fa(dl(b),a)?fi(b.b,c,[a]).then(function(a){var c={};v(a.providerUserInfo||[],function(a){c[a.providerId]=!0});v(dl(b),function(a){c[a]||fl(b,a)});c[ig.PROVIDER_ID]||I(b,\"phoneNumber\",null);return $k(b)}):$k(b).then(function(){throw new K(\"no-such-provider\");})}))};\ng.delete=function(){var a=this;return R(this,this.F().then(function(b){return O(a.b,si,{idToken:b})}).then(function(){a.dispatchEvent(new Pk(\"userDeleted\"))})).then(function(){for(var b=0;b<a.G.length;b++)a.G[b].cancel(\"app-deleted\");Uk(a,null);Vk(a,null);a.G=[];a.C=!0;Yk(a);I(a,\"refreshToken\",null);a.a&&a.a.unsubscribe(a)})};\ng.sb=function(a,b){return\"linkViaPopup\"==a&&(this.g||null)==b&&this.f||\"reauthViaPopup\"==a&&(this.g||null)==b&&this.f||\"linkViaRedirect\"==a&&(this.aa||null)==b||\"reauthViaRedirect\"==a&&(this.aa||null)==b?!0:!1};g.ha=function(a,b,c,d){\"linkViaPopup\"!=a&&\"reauthViaPopup\"!=a||d!=(this.g||null)||(c&&this.v?this.v(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.v)};\ng.wa=function(a,b){return\"linkViaPopup\"==a&&b==(this.g||null)?r(this.xb,this):\"reauthViaPopup\"==a&&b==(this.g||null)?r(this.yb,this):\"linkViaRedirect\"==a&&(this.aa||null)==b?r(this.xb,this):\"reauthViaRedirect\"==a&&(this.aa||null)==b?r(this.yb,this):null};g.oc=function(a){var b=this;return pl(this,\"linkViaPopup\",a,function(){return nl(b,a.providerId).then(function(){return $k(b)})},!1)};g.xc=function(a){return pl(this,\"reauthViaPopup\",a,function(){return A()},!0)};\nfunction pl(a,b,c,d,e){if(!ue())return B(new K(\"operation-not-supported-in-this-environment\"));if(a.i&&!e)return B(a.i);var f=xf(c.providerId),h=te(a.uid+\":::\"),m=null;(!we()||le())&&a.u&&c.isOAuthProvider&&(m=Ri(a.u,a.l,a.o,b,c,null,h,firebase.SDK_VERSION||null));var p=de(m,f&&f.Ba,f&&f.Aa);d=d().then(function(){ql(a);if(!e)return a.F().then(function(){})}).then(function(){return rk(a.a,p,b,c,h,!!m)}).then(function(){return new y(function(c,d){a.ha(b,null,new K(\"cancelled-popup-request\"),a.g||null);\na.f=c;a.v=d;a.g=h;a.c=a.a.Ea(a,b,p,h)})}).then(function(a){p&&ce(p);return a?Le(a):null}).s(function(a){p&&ce(p);throw a;});return R(a,d,e)}g.pc=function(a){var b=this;return rl(this,\"linkViaRedirect\",a,function(){return nl(b,a.providerId)},!1)};g.yc=function(a){return rl(this,\"reauthViaRedirect\",a,function(){return A()},!0)};\nfunction rl(a,b,c,d,e){if(!ue())return B(new K(\"operation-not-supported-in-this-environment\"));if(a.i&&!e)return B(a.i);var f=null,h=te(a.uid+\":::\");d=d().then(function(){ql(a);if(!e)return a.F().then(function(){})}).then(function(){a.aa=h;return $k(a)}).then(function(b){a.ba&&(b=a.ba,b=b.b.set(sl,a.D(),b.a));return b}).then(function(){return a.a.Ca(b,c,h)}).s(function(b){f=b;if(a.ba)return tl(a.ba);throw f;}).then(function(){if(f)throw f;});return R(a,d,e)}\nfunction ql(a){if(!a.a||!a.I){if(a.a&&!a.I)throw new K(\"internal-error\");throw new K(\"auth-domain-config-required\");}}g.xb=function(a,b){var c=this;this.c&&(this.c.cancel(),this.c=null);var d=null,e=this.F().then(function(d){return Nf(c.b,{requestUri:a,sessionId:b,idToken:d})}).then(function(a){d=ml(c,a,\"link\");return ol(c,a)}).then(function(){return d});return R(this,e)};\ng.yb=function(a,b){var c=this;this.c&&(this.c.cancel(),this.c=null);var d=null,e=A().then(function(){return Jf(Of(c.b,{requestUri:a,sessionId:b}),c.uid)}).then(function(a){d=ml(c,a,\"reauthenticate\");kl(c,a);c.i=null;return c.reload()}).then(function(){return d});return R(this,e,!0)};g.gb=function(a){var b=this,c=null;return R(this,this.F().then(function(b){c=b;return\"undefined\"===typeof a||Za(a)?{}:kf(new af(a))}).then(function(a){return b.b.gb(c,a)}).then(function(a){if(b.email!=a)return b.reload()}).then(function(){}))};\nfunction R(a,b,c){var d=ul(a,b,c);a.G.push(d);d.ia(function(){Ga(a.G,d)});return d}function ul(a,b,c){return a.i&&!c?(b.cancel(),B(a.i)):b.s(function(b){!b||\"auth/user-disabled\"!=b.code&&\"auth/user-token-expired\"!=b.code||(a.i||a.dispatchEvent(new Pk(\"userInvalidated\")),a.i=b);throw b;})}g.toJSON=function(){return this.D()};\ng.D=function(){var a={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,providerData:[],apiKey:this.l,appName:this.o,authDomain:this.u,stsTokenManager:this.h.D(),redirectEventId:this.aa||null};this.metadata&&bb(a,this.metadata.D());v(this.providerData,function(b){a.providerData.push(Me(b))});return a};\nfunction vl(a){if(!a.apiKey)return null;var b={apiKey:a.apiKey,authDomain:a.authDomain,appName:a.appName},c={};if(a.stsTokenManager&&a.stsTokenManager.accessToken&&a.stsTokenManager.expirationTime)c[L]=a.stsTokenManager.accessToken,c.refreshToken=a.stsTokenManager.refreshToken||null,c.expiresIn=(a.stsTokenManager.expirationTime-na())/1E3;else return null;var d=new Q(b,c,a);a.providerData&&v(a.providerData,function(a){a&&el(d,Le(a))});a.redirectEventId&&(d.aa=a.redirectEventId);return d}\nfunction wl(a,b,c,d){var e=new Q(a,b);c&&(e.ba=c);d&&Tk(e,d);return e.reload().then(function(){return e})}function xl(a,b,c,d){b=b||{apiKey:a.l,authDomain:a.u,appName:a.o};var e=a.h,f={};f[L]=e.b;f.refreshToken=e.a;f.expiresIn=(e.c-na())/1E3;b=new Q(b,f);c&&(b.ba=c);d&&Tk(b,d);hl(b,a);return b};function yl(a){this.a=a;this.b=vj()}var sl={name:\"redirectUser\",A:\"session\"};function tl(a){return zj(a.b,sl,a.a)}function zl(a,b){return a.b.get(sl,a.a).then(function(a){a&&b&&(a.authDomain=b);return vl(a||{})})};function Al(a){this.a=a;this.b=vj();this.c=null;this.f=Bl(this);this.b.addListener(Cl(\"local\"),this.a,r(this.g,this))}Al.prototype.g=function(){var a=this,b=Cl(\"local\");Dl(this,function(){return A().then(function(){return a.c&&\"local\"!=a.c.A?a.b.get(b,a.a):null}).then(function(c){if(c)return El(a,\"local\").then(function(){a.c=b})})})};function El(a,b){var c=[],d;for(d in rj)rj[d]!==b&&c.push(zj(a.b,Cl(rj[d]),a.a));c.push(zj(a.b,Fl,a.a));return ub(c)}\nfunction Bl(a){var b=Cl(\"local\"),c=Cl(\"session\"),d=Cl(\"none\");return yj(a.b,b,a.a).then(function(){return a.b.get(c,a.a)}).then(function(e){return e?c:a.b.get(d,a.a).then(function(c){return c?d:a.b.get(b,a.a).then(function(c){return c?b:a.b.get(Fl,a.a).then(function(a){return a?Cl(a):b})})})}).then(function(b){a.c=b;return El(a,b.A)}).s(function(){a.c||(a.c=b)})}var Fl={name:\"persistence\",A:\"session\"};function Cl(a){return{name:\"authUser\",A:a}}\nAl.prototype.jb=function(a){var b=null,c=this;sj(a);return Dl(this,function(){return a!=c.c.A?c.b.get(c.c,c.a).then(function(d){b=d;return El(c,a)}).then(function(){c.c=Cl(a);if(b)return c.b.set(c.c,b,c.a)}):A()})};function Gl(a){return Dl(a,function(){return a.b.set(Fl,a.c.A,a.a)})}function Hl(a,b){return Dl(a,function(){return a.b.set(a.c,b.D(),a.a)})}function Il(a){return Dl(a,function(){return zj(a.b,a.c,a.a)})}\nfunction Jl(a,b){return Dl(a,function(){return a.b.get(a.c,a.a).then(function(a){a&&b&&(a.authDomain=b);return vl(a||{})})})}function Dl(a,b){a.f=a.f.then(b,b);return a.f};function Kl(a){this.l=!1;I(this,\"settings\",new Ak);I(this,\"app\",a);if(S(this).options&&S(this).options.apiKey)a=firebase.SDK_VERSION?re(firebase.SDK_VERSION):null,this.b=new Ah(S(this).options&&S(this).options.apiKey,xi(yi),a);else throw new K(\"invalid-api-key\");this.N=[];this.o=[];this.I=[];this.Pb=firebase.INTERNAL.createSubscribe(r(this.ic,this));this.O=void 0;this.Qb=firebase.INTERNAL.createSubscribe(r(this.jc,this));Ll(this,null);this.h=new Al(S(this).options.apiKey+\":\"+S(this).name);this.w=\nnew yl(S(this).options.apiKey+\":\"+S(this).name);this.V=T(this,Ml(this));this.i=T(this,Nl(this));this.X=!1;this.ka=r(this.Jc,this);this.Ha=r(this.Z,this);this.qa=r(this.Yb,this);this.ra=r(this.gc,this);this.sa=r(this.hc,this);Ol(this);this.INTERNAL={};this.INTERNAL[\"delete\"]=r(this.delete,this);this.INTERNAL.logFramework=r(this.qc,this);this.u=0;E.call(this);Pl(this);this.G=[]}t(Kl,E);function Ql(a){C.call(this,\"languageCodeChanged\");this.g=a}t(Ql,C);\nfunction Sl(a){C.call(this,\"frameworkChanged\");this.c=a}t(Sl,C);g=Kl.prototype;g.jb=function(a){a=this.h.jb(a);return T(this,a)};g.oa=function(a){this.W===a||this.l||(this.W=a,Gh(this.b,this.W),this.dispatchEvent(new Ql(this.ea())))};g.ea=function(){return this.W};g.Qc=function(){var a=k.navigator;this.oa(a?a.languages&&a.languages[0]||a.language||a.userLanguage||null:null)};g.qc=function(a){this.G.push(a);Hh(this.b,firebase.SDK_VERSION?re(firebase.SDK_VERSION,this.G):null);this.dispatchEvent(new Sl(this.G))};\ng.xa=function(){return Ja(this.G)};function Pl(a){Object.defineProperty(a,\"lc\",{get:function(){return this.ea()},set:function(a){this.oa(a)},enumerable:!1});a.W=null}g.toJSON=function(){return{apiKey:S(this).options.apiKey,authDomain:S(this).options.authDomain,appName:S(this).name,currentUser:U(this)&&U(this).D()}};function Tl(a){return a.Ob||B(new K(\"auth-domain-config-required\"))}\nfunction Ol(a){var b=S(a).options.authDomain,c=S(a).options.apiKey;b&&ue()&&(a.Ob=a.V.then(function(){if(!a.l){a.a=tk(b,c,S(a).name);a.a.subscribe(a);U(a)&&al(U(a));if(a.C){al(a.C);var d=a.C;d.oa(a.ea());Uk(d,a);d=a.C;Tk(d,a.G);Vk(d,a);a.C=null}return a.a}}))}g.sb=function(a,b){switch(a){case \"unknown\":case \"signInViaRedirect\":return!0;case \"signInViaPopup\":return this.g==b&&!!this.f;default:return!1}};\ng.ha=function(a,b,c,d){\"signInViaPopup\"==a&&this.g==d&&(c&&this.v?this.v(c):b&&!c&&this.f&&this.f(b),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.v)};g.wa=function(a,b){return\"signInViaRedirect\"==a||\"signInViaPopup\"==a&&this.g==b&&this.f?r(this.Xb,this):null};\ng.Xb=function(a,b){var c=this;a={requestUri:a,sessionId:b};this.c&&(this.c.cancel(),this.c=null);var d=null,e=null,f=Lf(c.b,a).then(function(a){d=lg(a);e=yf(a);return a});a=c.V.then(function(){return f}).then(function(a){return Ul(c,a)}).then(function(){return Le({user:U(c),credential:d,additionalUserInfo:e,operationType:\"signIn\"})});return T(this,a)};\ng.Hc=function(a){if(!ue())return B(new K(\"operation-not-supported-in-this-environment\"));var b=this,c=xf(a.providerId),d=te(),e=null;(!we()||le())&&S(this).options.authDomain&&a.isOAuthProvider&&(e=Ri(S(this).options.authDomain,S(this).options.apiKey,S(this).name,\"signInViaPopup\",a,null,d,firebase.SDK_VERSION||null));var f=de(e,c&&c.Ba,c&&c.Aa);c=Tl(this).then(function(b){return rk(b,f,\"signInViaPopup\",a,d,!!e)}).then(function(){return new y(function(a,c){b.ha(\"signInViaPopup\",null,new K(\"cancelled-popup-request\"),\nb.g);b.f=a;b.v=c;b.g=d;b.c=b.a.Ea(b,\"signInViaPopup\",f,d)})}).then(function(a){f&&ce(f);return a?Le(a):null}).s(function(a){f&&ce(f);throw a;});return T(this,c)};g.Ic=function(a){if(!ue())return B(new K(\"operation-not-supported-in-this-environment\"));var b=this,c=Tl(this).then(function(){return Gl(b.h)}).then(function(){return b.a.Ca(\"signInViaRedirect\",a)});return T(this,c)};\ng.fa=function(){if(!ue())return B(new K(\"operation-not-supported-in-this-environment\"));var a=this,b=Tl(this).then(function(){return a.a.fa()}).then(function(a){return a?Le(a):null});return T(this,b)};\ng.Oc=function(a){if(!a)return B(new K(\"null-user\"));var b=this,c={};c.apiKey=S(this).options.apiKey;c.authDomain=S(this).options.authDomain;c.appName=S(this).name;var d=xl(a,c,b.w,b.xa());return T(this,this.i.then(function(){if(S(b).options.apiKey!=a.l)return d.reload()}).then(function(){if(U(b)&&a.uid==U(b).uid)return hl(U(b),a),b.Z(a);Ll(b,d);al(d);return b.Z(d)}).then(function(){Vl(b)}))};\nfunction Ul(a,b){var c={};c.apiKey=S(a).options.apiKey;c.authDomain=S(a).options.authDomain;c.appName=S(a).name;return a.V.then(function(){return wl(c,b,a.w,a.xa())}).then(function(b){if(U(a)&&b.uid==U(a).uid)return hl(U(a),b),a.Z(b);Ll(a,b);al(b);return a.Z(b)}).then(function(){Vl(a)})}\nfunction Ll(a,b){U(a)&&(Zk(U(a),a.Ha),D(U(a),\"tokenChanged\",a.qa),D(U(a),\"userDeleted\",a.ra),D(U(a),\"userInvalidated\",a.sa),Yk(U(a)));b&&(b.N.push(a.Ha),rc(b,\"tokenChanged\",a.qa),rc(b,\"userDeleted\",a.ra),rc(b,\"userInvalidated\",a.sa),0<a.u&&Xk(b));I(a,\"currentUser\",b);b&&(b.oa(a.ea()),Uk(b,a),Tk(b,a.G),Vk(b,a))}g.kb=function(){var a=this,b=this.i.then(function(){if(!U(a))return A();Ll(a,null);return Il(a.h).then(function(){Vl(a)})});return T(this,b)};\nfunction Wl(a){var b=zl(a.w,S(a).options.authDomain).then(function(b){if(a.C=b)b.ba=a.w;return tl(a.w)});return T(a,b)}function Ml(a){var b=S(a).options.authDomain,c=Wl(a).then(function(){return Jl(a.h,b)}).then(function(b){return b?(b.ba=a.w,a.C&&(a.C.aa||null)==(b.aa||null)?b:b.reload().then(function(){return Hl(a.h,b).then(function(){return b})}).s(function(c){return\"auth/network-request-failed\"==c.code?b:Il(a.h)})):null}).then(function(b){Ll(a,b||null)});return T(a,c)}\nfunction Nl(a){return a.V.then(function(){return a.fa()}).s(function(){}).then(function(){if(!a.l)return a.ka()}).s(function(){}).then(function(){if(!a.l){a.X=!0;var b=a.h;b.b.addListener(Cl(\"local\"),b.a,a.ka)}})}\ng.Jc=function(){var a=this;return Jl(this.h,S(this).options.authDomain).then(function(b){if(!a.l){var c;if(c=U(a)&&b){c=U(a).uid;var d=b.uid;c=void 0===c||null===c||\"\"===c||void 0===d||null===d||\"\"===d?!1:c==d}if(c)return hl(U(a),b),U(a).F();if(U(a)||b)Ll(a,b),b&&(al(b),b.ba=a.w),a.a&&a.a.subscribe(a),Vl(a)}})};g.Z=function(a){return Hl(this.h,a)};g.Yb=function(){Vl(this);this.Z(U(this))};g.gc=function(){this.kb()};g.hc=function(){this.kb()};\nfunction Xl(a,b){var c=null,d=null;return T(a,b.then(function(b){c=lg(b);d=yf(b);return Ul(a,b)}).then(function(){return Le({user:U(a),credential:c,additionalUserInfo:d,operationType:\"signIn\"})}))}g.ic=function(a){var b=this;this.addAuthTokenListener(function(){a.next(U(b))})};g.jc=function(a){var b=this;Yl(this,function(){a.next(U(b))})};g.sc=function(a,b,c){var d=this;this.X&&firebase.Promise.resolve().then(function(){n(a)?a(U(d)):n(a.next)&&a.next(U(d))});return this.Pb(a,b,c)};\ng.rc=function(a,b,c){var d=this;this.X&&firebase.Promise.resolve().then(function(){d.O=d.getUid();n(a)?a(U(d)):n(a.next)&&a.next(U(d))});return this.Qb(a,b,c)};g.$b=function(a){var b=this,c=this.i.then(function(){return U(b)?U(b).F(a).then(function(a){return{accessToken:a}}):null});return T(this,c)};g.Jb=function(a){var b=this;return this.i.then(function(){return Xl(b,O(b.b,vi,{token:a}))}).then(function(a){var c=a.user;gl(c,\"isAnonymous\",!1);b.Z(c);return a})};\ng.Bc=function(a){Ie(\"firebase.auth.Auth.prototype.signInAndRetrieveDataWithCustomToken is deprecated. Please use firebase.auth.Auth.prototype.signInWithCustomToken instead.\");return this.Jb(a)};g.Cc=function(a,b){Ie(\"firebase.auth.Auth.prototype.signInAndRetrieveDataWithEmailAndPassword is deprecated. Please use firebase.auth.Auth.prototype.signInWithEmailAndPassword instead.\");return this.Kb(a,b)};g.Kb=function(a,b){var c=this;return this.i.then(function(){return Xl(c,O(c.b,$f,{email:a,password:b}))})};\ng.ub=function(a,b){var c=this;return this.i.then(function(){return Xl(c,O(c.b,ri,{email:a,password:b}))})};g.Sb=function(a,b){Ie(\"firebase.auth.Auth.prototype.createUserAndRetrieveDataWithEmailAndPassword is deprecated. Please use firebase.auth.Auth.prototype.createUserWithEmailAndPassword instead.\");return this.ub(a,b)};g.Ec=function(a){Ie(\"firebase.auth.Auth.prototype.signInWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential instead.\");return this.Oa(a).then(function(a){return a.user})};\ng.Oa=function(a){var b=this;return this.i.then(function(){return Xl(b,a.ya(b.b))})};g.Pa=function(){var a=this;return this.i.then(function(){var b=U(a);if(b&&b.isAnonymous){var c=Le({providerId:null,isNewUser:!1});return Le({user:b,credential:null,additionalUserInfo:c,operationType:\"signIn\"})}return Xl(a,a.b.Pa()).then(function(b){var c=b.user;gl(c,\"isAnonymous\",!0);a.Z(c);return b})})};\ng.Dc=function(){Ie(\"firebase.auth.Auth.prototype.signInAnonymouslyAndRetrieveData is deprecated. Please use firebase.auth.Auth.prototype.signInAnonymously instead.\");return this.Pa()};function S(a){return a.app}function U(a){return a.currentUser}g.getUid=function(){return U(this)&&U(this).uid||null};function Zl(a){return U(a)&&U(a)._lat||null}\nfunction Vl(a){if(a.X){for(var b=0;b<a.o.length;b++)if(a.o[b])a.o[b](Zl(a));if(a.O!==a.getUid()&&a.I.length)for(a.O=a.getUid(),b=0;b<a.I.length;b++)if(a.I[b])a.I[b](Zl(a))}}g.Rb=function(a){this.addAuthTokenListener(a);this.u++;0<this.u&&U(this)&&Xk(U(this))};g.zc=function(a){var b=this;v(this.o,function(c){c==a&&b.u--});0>this.u&&(this.u=0);0==this.u&&U(this)&&Yk(U(this));this.removeAuthTokenListener(a)};\ng.addAuthTokenListener=function(a){var b=this;this.o.push(a);T(this,this.i.then(function(){b.l||Fa(b.o,a)&&a(Zl(b))}))};g.removeAuthTokenListener=function(a){Ha(this.o,function(b){return b==a})};function Yl(a,b){a.I.push(b);T(a,a.i.then(function(){!a.l&&Fa(a.I,b)&&a.O!==a.getUid()&&(a.O=a.getUid(),b(Zl(a)))}))}\ng.delete=function(){this.l=!0;for(var a=0;a<this.N.length;a++)this.N[a].cancel(\"app-deleted\");this.N=[];this.h&&(a=this.h,a.b.removeListener(Cl(\"local\"),a.a,this.ka));this.a&&this.a.unsubscribe(this);return firebase.Promise.resolve()};function T(a,b){a.N.push(b);b.ia(function(){Ga(a.N,b)});return b}g.Vb=function(a){Ie(\"firebase.auth.Auth.prototype.fetchProvidersForEmail is deprecated. Please use firebase.auth.Auth.prototype.fetchSignInMethodsForEmail instead.\");return T(this,Rh(this.b,a))};\ng.Wb=function(a){return T(this,Th(this.b,a))};g.kc=function(a){return!!dg(a)};g.ib=function(a,b){var c=this;return T(this,A().then(function(){var a=new af(b);if(!a.c)throw new K(\"argument-error\",jf+\" must be true when sending sign in link to email\");return kf(a)}).then(function(b){return c.b.ib(a,b)}).then(function(){}))};g.Rc=function(a){return this.Ja(a).then(function(a){return a.data.email})};g.Xa=function(a,b){return T(this,this.b.Xa(a,b).then(function(){}))};g.Ja=function(a){return T(this,this.b.Ja(a).then(function(a){return new Pe(a)}))};\ng.Va=function(a){return T(this,this.b.Va(a).then(function(){}))};g.hb=function(a,b){var c=this;return T(this,A().then(function(){return\"undefined\"===typeof b||Za(b)?{}:kf(new af(b))}).then(function(b){return c.b.hb(a,b)}).then(function(){}))};g.Gc=function(a,b){return T(this,Ck(this,a,b,r(this.Oa,this)))};g.Fc=function(a,b){var c=this;return T(this,A().then(function(){var d=cg(a,b||Wd());return c.Oa(d)}))};function $l(){}$l.prototype.render=function(){};$l.prototype.reset=function(){};$l.prototype.getResponse=function(){};$l.prototype.execute=function(){};function am(){this.a={};this.b=1E12}var bm=null;am.prototype.render=function(a,b){this.a[this.b.toString()]=new cm(a,b);return this.b++};am.prototype.reset=function(a){var b=dm(this,a);a=em(a);b&&a&&(b.delete(),delete this.a[a])};am.prototype.getResponse=function(a){return(a=dm(this,a))?a.getResponse():null};am.prototype.execute=function(a){(a=dm(this,a))&&a.execute()};function dm(a,b){return(b=em(b))?a.a[b]||null:null}function em(a){return(a=\"undefined\"===typeof a?1E12:a)?a.toString():null}\nfunction cm(a,b){this.g=!1;this.c=b;this.a=this.b=null;this.h=\"invisible\"!==this.c.size;this.f=Jd(a);var c=this;this.i=function(){c.execute()};this.h?this.execute():rc(this.f,\"click\",this.i)}cm.prototype.getResponse=function(){fm(this);return this.b};\ncm.prototype.execute=function(){fm(this);var a=this;this.a||(this.a=setTimeout(function(){a.b=pe();var b=a.c.callback,c=a.c[\"expired-callback\"];if(b)try{b(a.b)}catch(d){}a.a=setTimeout(function(){a.a=null;a.b=null;if(c)try{c()}catch(d){}a.h&&a.execute()},6E4)},500))};cm.prototype.delete=function(){fm(this);this.g=!0;clearTimeout(this.a);this.a=null;D(this.f,\"click\",this.i)};function fm(a){if(a.g)throw Error(\"reCAPTCHA mock was already deleted!\");};function gm(){}gm.prototype.g=function(){bm||(bm=new am);return A(bm)};gm.prototype.c=function(){};var hm=null;function im(){this.b=k.grecaptcha?Infinity:0;this.f=null;this.a=\"__rcb\"+Math.floor(1E6*Math.random()).toString()}var jm=rd(\"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}\"),km=new Ce(3E4,6E4);\nim.prototype.g=function(a){var b=this;return new y(function(c,d){var e=setTimeout(function(){d(new K(\"network-request-failed\"))},km.get());if(!k.grecaptcha||a!==b.f&&!b.b){k[b.a]=function(){if(k.grecaptcha){b.f=a;var f=k.grecaptcha.render;k.grecaptcha.render=function(a,c){a=f(a,c);b.b++;return a};clearTimeout(e);c(k.grecaptcha)}else clearTimeout(e),d(new K(\"internal-error\"));delete k[b.a]};var f=vd(jm,{onload:b.a,hl:a||\"\"});A(sh(f)).s(function(){clearTimeout(e);d(new K(\"internal-error\",\"Unable to load external reCAPTCHA dependencies!\"))})}else clearTimeout(e),\nc(k.grecaptcha)})};im.prototype.c=function(){this.b--};var lm=null;function mm(a,b,c,d,e,f,h){I(this,\"type\",\"recaptcha\");this.c=this.f=null;this.C=!1;this.l=b;this.g=null;h?(hm||(hm=new gm),h=hm):(lm||(lm=new im),h=lm);this.o=h;this.a=c||{theme:\"light\",type:\"image\"};this.h=[];if(this.a[nm])throw new K(\"argument-error\",\"sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.\");this.i=\"invisible\"===this.a[om];if(!k.document)throw new K(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.\");\nif(!Jd(b)||!this.i&&Jd(b).hasChildNodes())throw new K(\"argument-error\",\"reCAPTCHA container is either not found or already contains inner elements!\");this.u=new Ah(a,f||null,e||null);this.v=d||function(){return null};var m=this;this.m=[];var p=this.a[pm];this.a[pm]=function(a){qm(m,a);if(\"function\"===typeof p)p(a);else if(\"string\"===typeof p){var b=H(p,k);\"function\"===typeof b&&b(a)}};var z=this.a[rm];this.a[rm]=function(){qm(m,null);if(\"function\"===typeof z)z();else if(\"string\"===typeof z){var a=\nH(z,k);\"function\"===typeof a&&a()}}}var pm=\"callback\",rm=\"expired-callback\",nm=\"sitekey\",om=\"size\";function qm(a,b){for(var c=0;c<a.m.length;c++)try{a.m[c](b)}catch(d){}}function sm(a,b){Ha(a.m,function(a){return a==b})}function tm(a,b){a.h.push(b);b.ia(function(){Ga(a.h,b)});return b}g=mm.prototype;\ng.za=function(){var a=this;return this.f?this.f:this.f=tm(this,A().then(function(){if(ve()&&!me())return he();throw new K(\"operation-not-supported-in-this-environment\",\"RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.\");}).then(function(){return a.o.g(a.v())}).then(function(b){a.g=b;return O(a.u,ui,{})}).then(function(b){a.a[nm]=b.recaptchaSiteKey}).s(function(b){a.f=null;throw b;}))};\ng.render=function(){um(this);var a=this;return tm(this,this.za().then(function(){if(null===a.c){var b=a.l;if(!a.i){var c=Jd(b);b=Md(\"DIV\");c.appendChild(b)}a.c=a.g.render(b,a.a)}return a.c}))};g.verify=function(){um(this);var a=this;return tm(this,this.render().then(function(b){return new y(function(c){var d=a.g.getResponse(b);if(d)c(d);else{var e=function(b){b&&(sm(a,e),c(b))};a.m.push(e);a.i&&a.g.execute(a.c)}})}))};g.reset=function(){um(this);null!==this.c&&this.g.reset(this.c)};\nfunction um(a){if(a.C)throw new K(\"internal-error\",\"RecaptchaVerifier instance has been destroyed.\");}g.clear=function(){um(this);this.C=!0;this.o.c();for(var a=0;a<this.h.length;a++)this.h[a].cancel(\"RecaptchaVerifier instance has been destroyed.\");if(!this.i){a=Jd(this.l);for(var b;b=a.firstChild;)a.removeChild(b)}};\nfunction vm(a,b,c){var d=!1;try{this.b=c||firebase.app()}catch(h){throw new K(\"argument-error\",\"No firebase.app.App instance is currently initialized.\");}if(this.b.options&&this.b.options.apiKey)c=this.b.options.apiKey;else throw new K(\"invalid-api-key\");var e=this,f=null;try{f=this.b.auth().xa()}catch(h){}try{d=this.b.auth().settings.appVerificationDisabledForTesting}catch(h){}f=firebase.SDK_VERSION?re(firebase.SDK_VERSION,f):null;mm.call(this,c,a,b,function(){try{var a=e.b.auth().ea()}catch(m){a=\nnull}return a},f,xi(yi),d)}t(vm,mm);function wm(a,b,c,d){a:{c=Array.prototype.slice.call(c);var e=0;for(var f=!1,h=0;h<b.length;h++)if(b[h].optional)f=!0;else{if(f)throw new K(\"internal-error\",\"Argument validator encountered a required argument after an optional argument.\");e++}f=b.length;if(c.length<e||f<c.length)d=\"Expected \"+(e==f?1==e?\"1 argument\":e+\" arguments\":e+\"-\"+f+\" arguments\")+\" but got \"+c.length+\".\";else{for(e=0;e<c.length;e++)if(f=b[e].optional&&void 0===c[e],!b[e].M(c[e])&&!f){b=b[e];if(0>e||e>=xm.length)throw new K(\"internal-error\",\n\"Argument validator received an unsupported number of arguments.\");c=xm[e];d=(d?\"\":c+\" argument \")+(b.name?'\"'+b.name+'\" ':\"\")+\"must be \"+b.K+\".\";break a}d=null}}if(d)throw new K(\"argument-error\",a+\" failed: \"+d);}var xm=\"First Second Third Fourth Fifth Sixth Seventh Eighth Ninth\".split(\" \");function V(a,b){return{name:a||\"\",K:\"a valid string\",optional:!!b,M:l}}function ym(a,b){return{name:a||\"\",K:\"a boolean\",optional:!!b,M:ba}}\nfunction W(a,b){return{name:a||\"\",K:\"a valid object\",optional:!!b,M:q}}function zm(a,b){return{name:a||\"\",K:\"a function\",optional:!!b,M:n}}function Am(a,b){return{name:a||\"\",K:\"null\",optional:!!b,M:ea}}function Bm(){return{name:\"\",K:\"an HTML element\",optional:!1,M:function(a){return!!(a&&a instanceof Element)}}}function Cm(){return{name:\"auth\",K:\"an instance of Firebase Auth\",optional:!0,M:function(a){return!!(a&&a instanceof Kl)}}}\nfunction Dm(){return{name:\"app\",K:\"an instance of Firebase App\",optional:!0,M:function(a){return!!(a&&a instanceof firebase.app.App)}}}function Em(a){return{name:a?a+\"Credential\":\"credential\",K:a?\"a valid \"+a+\" credential\":\"a valid credential\",optional:!1,M:function(b){if(!b)return!1;var c=!a||b.providerId===a;return!(!b.ya||!c)}}}\nfunction Fm(){return{name:\"authProvider\",K:\"a valid Auth provider\",optional:!1,M:function(a){return!!(a&&a.providerId&&a.hasOwnProperty&&a.hasOwnProperty(\"isOAuthProvider\"))}}}function Gm(){return{name:\"applicationVerifier\",K:\"an implementation of firebase.auth.ApplicationVerifier\",optional:!1,M:function(a){return!!(a&&l(a.type)&&n(a.verify))}}}function X(a,b,c,d){return{name:c||\"\",K:a.K+\" or \"+b.K,optional:!!d,M:function(c){return a.M(c)||b.M(c)}}};function Y(a,b){for(var c in b){var d=b[c].name;a[d]=Hm(d,a[c],b[c].j)}}function Im(a,b){for(var c in b){var d=b[c].name;if(d!==c){var e=b[c].qb;Object.defineProperty(a,d,{get:function(){return this[c]},set:function(a){wm(d,[e],[a],!0);this[c]=a},enumerable:!0})}}}function Z(a,b,c,d){a[b]=Hm(b,c,d)}\nfunction Hm(a,b,c){function d(){var a=Array.prototype.slice.call(arguments);wm(e,c,a);return b.apply(this,a)}if(!c)return b;var e=Jm(a),f;for(f in b)d[f]=b[f];for(f in b.prototype)d.prototype[f]=b.prototype[f];return d}function Jm(a){a=a.split(\".\");return a[a.length-1]};Y(Kl.prototype,{Va:{name:\"applyActionCode\",j:[V(\"code\")]},Ja:{name:\"checkActionCode\",j:[V(\"code\")]},Xa:{name:\"confirmPasswordReset\",j:[V(\"code\"),V(\"newPassword\")]},ub:{name:\"createUserWithEmailAndPassword\",j:[V(\"email\"),V(\"password\")]},Sb:{name:\"createUserAndRetrieveDataWithEmailAndPassword\",j:[V(\"email\"),V(\"password\")]},Vb:{name:\"fetchProvidersForEmail\",j:[V(\"email\")]},Wb:{name:\"fetchSignInMethodsForEmail\",j:[V(\"email\")]},fa:{name:\"getRedirectResult\",j:[]},kc:{name:\"isSignInWithEmailLink\",j:[V(\"emailLink\")]},\nrc:{name:\"onAuthStateChanged\",j:[X(W(),zm(),\"nextOrObserver\"),zm(\"opt_error\",!0),zm(\"opt_completed\",!0)]},sc:{name:\"onIdTokenChanged\",j:[X(W(),zm(),\"nextOrObserver\"),zm(\"opt_error\",!0),zm(\"opt_completed\",!0)]},hb:{name:\"sendPasswordResetEmail\",j:[V(\"email\"),X(W(\"opt_actionCodeSettings\",!0),Am(null,!0),\"opt_actionCodeSettings\",!0)]},ib:{name:\"sendSignInLinkToEmail\",j:[V(\"email\"),W(\"actionCodeSettings\")]},jb:{name:\"setPersistence\",j:[V(\"persistence\")]},Oa:{name:\"signInAndRetrieveDataWithCredential\",\nj:[Em()]},Pa:{name:\"signInAnonymously\",j:[]},Dc:{name:\"signInAnonymouslyAndRetrieveData\",j:[]},Ec:{name:\"signInWithCredential\",j:[Em()]},Jb:{name:\"signInWithCustomToken\",j:[V(\"token\")]},Bc:{name:\"signInAndRetrieveDataWithCustomToken\",j:[V(\"token\")]},Kb:{name:\"signInWithEmailAndPassword\",j:[V(\"email\"),V(\"password\")]},Fc:{name:\"signInWithEmailLink\",j:[V(\"email\"),V(\"emailLink\",!0)]},Cc:{name:\"signInAndRetrieveDataWithEmailAndPassword\",j:[V(\"email\"),V(\"password\")]},Gc:{name:\"signInWithPhoneNumber\",j:[V(\"phoneNumber\"),\nGm()]},Hc:{name:\"signInWithPopup\",j:[Fm()]},Ic:{name:\"signInWithRedirect\",j:[Fm()]},Oc:{name:\"updateCurrentUser\",j:[X(function(a){return{name:\"user\",K:\"an instance of Firebase User\",optional:!!a,M:function(a){return!!(a&&a instanceof Q)}}}(),Am(),\"user\")]},kb:{name:\"signOut\",j:[]},toJSON:{name:\"toJSON\",j:[V(null,!0)]},Qc:{name:\"useDeviceLanguage\",j:[]},Rc:{name:\"verifyPasswordResetCode\",j:[V(\"code\")]}});Im(Kl.prototype,{lc:{name:\"languageCode\",qb:X(V(),Am(),\"languageCode\")}});Kl.Persistence=rj;\nKl.Persistence.LOCAL=\"local\";Kl.Persistence.SESSION=\"session\";Kl.Persistence.NONE=\"none\";\nY(Q.prototype,{\"delete\":{name:\"delete\",j:[]},ac:{name:\"getIdTokenResult\",j:[ym(\"opt_forceRefresh\",!0)]},F:{name:\"getIdToken\",j:[ym(\"opt_forceRefresh\",!0)]},ab:{name:\"linkAndRetrieveDataWithCredential\",j:[Em()]},mc:{name:\"linkWithCredential\",j:[Em()]},nc:{name:\"linkWithPhoneNumber\",j:[V(\"phoneNumber\"),Gm()]},oc:{name:\"linkWithPopup\",j:[Fm()]},pc:{name:\"linkWithRedirect\",j:[Fm()]},cb:{name:\"reauthenticateAndRetrieveDataWithCredential\",j:[Em()]},vc:{name:\"reauthenticateWithCredential\",j:[Em()]},wc:{name:\"reauthenticateWithPhoneNumber\",\nj:[V(\"phoneNumber\"),Gm()]},xc:{name:\"reauthenticateWithPopup\",j:[Fm()]},yc:{name:\"reauthenticateWithRedirect\",j:[Fm()]},reload:{name:\"reload\",j:[]},gb:{name:\"sendEmailVerification\",j:[X(W(\"opt_actionCodeSettings\",!0),Am(null,!0),\"opt_actionCodeSettings\",!0)]},toJSON:{name:\"toJSON\",j:[V(null,!0)]},Nc:{name:\"unlink\",j:[V(\"provider\")]},mb:{name:\"updateEmail\",j:[V(\"email\")]},nb:{name:\"updatePassword\",j:[V(\"password\")]},Pc:{name:\"updatePhoneNumber\",j:[Em(\"phone\")]},ob:{name:\"updateProfile\",j:[W(\"profile\")]}});\nY(am.prototype,{execute:{name:\"execute\"},render:{name:\"render\"},reset:{name:\"reset\"},getResponse:{name:\"getResponse\"}});Y($l.prototype,{execute:{name:\"execute\"},render:{name:\"render\"},reset:{name:\"reset\"},getResponse:{name:\"getResponse\"}});Y(y.prototype,{ia:{name:\"finally\"},s:{name:\"catch\"},then:{name:\"then\"}});Im(Ak.prototype,{appVerificationDisabled:{name:\"appVerificationDisabledForTesting\",qb:ym(\"appVerificationDisabledForTesting\")}});Y(Bk.prototype,{confirm:{name:\"confirm\",j:[V(\"verificationCode\")]}});\nZ(N,\"credential\",function(a,b){return new Yf(a,b)},[V(\"email\"),V(\"password\")]);Y(Qf.prototype,{ta:{name:\"addScope\",j:[V(\"scope\")]},Da:{name:\"setCustomParameters\",j:[W(\"customOAuthParameters\")]}});Z(Qf,\"credential\",Rf,[X(V(),W(),\"token\")]);Z(N,\"credentialWithLink\",cg,[V(\"email\"),V(\"emailLink\")]);Y(Sf.prototype,{ta:{name:\"addScope\",j:[V(\"scope\")]},Da:{name:\"setCustomParameters\",j:[W(\"customOAuthParameters\")]}});Z(Sf,\"credential\",Tf,[X(V(),W(),\"token\")]);\nY(Uf.prototype,{ta:{name:\"addScope\",j:[V(\"scope\")]},Da:{name:\"setCustomParameters\",j:[W(\"customOAuthParameters\")]}});Z(Uf,\"credential\",Vf,[X(V(),X(W(),Am()),\"idToken\"),X(V(),Am(),\"accessToken\",!0)]);Y(Wf.prototype,{Da:{name:\"setCustomParameters\",j:[W(\"customOAuthParameters\")]}});Z(Wf,\"credential\",Xf,[X(V(),W(),\"token\"),V(\"secret\",!0)]);\nY(M.prototype,{ta:{name:\"addScope\",j:[V(\"scope\")]},credential:{name:\"credential\",j:[X(V(),Am(),\"idToken\",!0),X(V(),Am(),\"accessToken\",!0)]},Da:{name:\"setCustomParameters\",j:[W(\"customOAuthParameters\")]}});Z(ig,\"credential\",kg,[V(\"verificationId\"),V(\"verificationCode\")]);Y(ig.prototype,{Ta:{name:\"verifyPhoneNumber\",j:[V(\"phoneNumber\"),Gm()]}});Y(K.prototype,{toJSON:{name:\"toJSON\",j:[V(null,!0)]}});Y(sg.prototype,{toJSON:{name:\"toJSON\",j:[V(null,!0)]}});\nY(rg.prototype,{toJSON:{name:\"toJSON\",j:[V(null,!0)]}});Y(vm.prototype,{clear:{name:\"clear\",j:[]},render:{name:\"render\",j:[]},verify:{name:\"verify\",j:[]}});\n(function(){if(\"undefined\"!==typeof firebase&&firebase.INTERNAL&&firebase.INTERNAL.registerService){var a={Auth:Kl,Error:K};Z(a,\"EmailAuthProvider\",N,[]);Z(a,\"FacebookAuthProvider\",Qf,[]);Z(a,\"GithubAuthProvider\",Sf,[]);Z(a,\"GoogleAuthProvider\",Uf,[]);Z(a,\"TwitterAuthProvider\",Wf,[]);Z(a,\"OAuthProvider\",M,[V(\"providerId\")]);Z(a,\"PhoneAuthProvider\",ig,[Cm()]);Z(a,\"RecaptchaVerifier\",vm,[X(V(),Bm(),\"recaptchaContainer\"),W(\"recaptchaParameters\",!0),Dm()]);firebase.INTERNAL.registerService(\"auth\",function(a,\nc){a=new Kl(a);c({INTERNAL:{getUid:r(a.getUid,a),getToken:r(a.$b,a),addAuthTokenListener:r(a.Rb,a),removeAuthTokenListener:r(a.zc,a)}});return a},a,function(a,c){if(\"create\"===a)try{c.auth()}catch(d){}});firebase.INTERNAL.extendNamespace({User:Q})}else throw Error(\"Cannot find the firebase namespace; be sure to include firebase-app.js before this library.\");})();\n}).call(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/auth/dist/auth.js\n// module id = VuKk\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar webchannelWrapper = require('@firebase/webchannel-wrapper');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = firebase.SDK_VERSION;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/firestore');\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 1] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 2] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n// Helper methods are needed because variables can't be exported as read/write\r\nfunction getLogLevel() {\r\n    if (logClient.logLevel === logger.LogLevel.DEBUG) {\r\n        return LogLevel.DEBUG;\r\n    }\r\n    else if (logClient.logLevel === logger.LogLevel.SILENT) {\r\n        return LogLevel.SILENT;\r\n    }\r\n    else {\r\n        return LogLevel.ERROR;\r\n    }\r\n}\r\nfunction setLogLevel(newLevel) {\r\n    /**\r\n     * Map the new log level to the associated Firebase Log Level\r\n     */\r\n    switch (newLevel) {\r\n        case LogLevel.DEBUG:\r\n            logClient.logLevel = logger.LogLevel.DEBUG;\r\n            break;\r\n        case LogLevel.ERROR:\r\n            logClient.logLevel = logger.LogLevel.ERROR;\r\n            break;\r\n        case LogLevel.SILENT:\r\n            logClient.logLevel = logger.LogLevel.SILENT;\r\n            break;\r\n        default:\r\n            logClient.error(\"Firestore (\" + SDK_VERSION + \"): Invalid value passed to `setLogLevel`\");\r\n    }\r\n}\r\nfunction debug(tag, msg) {\r\n    var obj = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        obj[_i - 2] = arguments[_i];\r\n    }\r\n    if (logClient.logLevel <= logger.LogLevel.DEBUG) {\r\n        var args = obj.map(argToString);\r\n        logClient.debug.apply(logClient, [\"Firestore (\" + SDK_VERSION + \") [\" + tag + \"]: \" + msg].concat(args));\r\n    }\r\n}\r\nfunction error(msg) {\r\n    var obj = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        obj[_i - 1] = arguments[_i];\r\n    }\r\n    if (logClient.logLevel <= logger.LogLevel.ERROR) {\r\n        var args = obj.map(argToString);\r\n        logClient.error.apply(logClient, [\"Firestore (\" + SDK_VERSION + \"): \" + msg].concat(args));\r\n    }\r\n}\r\n/**\r\n * Converts an additional log parameter to a string representation.\r\n */\r\nfunction argToString(obj) {\r\n    if (typeof obj === 'string') {\r\n        return obj;\r\n    }\r\n    else {\r\n        var platform = PlatformSupport.getPlatform();\r\n        try {\r\n            return platform.formatJSON(obj);\r\n        }\r\n        catch (e) {\r\n            // Converting to JSON failed, just log the object directly\r\n            return obj;\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Unconditionally fails, throwing an Error with the given message.\r\n *\r\n * Returns any so it can be used in expressions:\r\n * @example\r\n * let futureVar = fail('not implemented yet');\r\n */\r\nfunction fail(failure) {\r\n    // Log the failure in addition to throw an exception, just in case the\r\n    // exception is swallowed.\r\n    var message = \"FIRESTORE (\" + SDK_VERSION + \") INTERNAL ASSERTION FAILED: \" + failure;\r\n    error(message);\r\n    // NOTE: We don't use FirestoreError here because these are internal failures\r\n    // that cannot be handled by the user. (Also it would create a circular\r\n    // dependency between the error and assert modules which doesn't work.)\r\n    throw new Error(message);\r\n}\r\n/**\r\n * Fails if the given assertion condition is false, throwing an Error with the\r\n * given message if it did.\r\n */\r\nfunction assert(assertion, message) {\r\n    if (!assertion) {\r\n        fail(message);\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides singleton helpers where setup code can inject a platform at runtime.\r\n * setPlatform needs to be set before Firestore is used and must be set exactly\r\n * once.\r\n */\r\nvar PlatformSupport = /** @class */ (function () {\r\n    function PlatformSupport() {\r\n    }\r\n    PlatformSupport.setPlatform = function (platform) {\r\n        if (PlatformSupport.platform) {\r\n            fail('Platform already defined');\r\n        }\r\n        PlatformSupport.platform = platform;\r\n    };\r\n    PlatformSupport.getPlatform = function () {\r\n        if (!PlatformSupport.platform) {\r\n            fail('Platform not set');\r\n        }\r\n        return PlatformSupport.platform;\r\n    };\r\n    return PlatformSupport;\r\n}());\r\n/**\r\n * Returns the representation of an empty \"proto\" byte string for the\r\n * platform.\r\n */\r\nfunction emptyByteString() {\r\n    return PlatformSupport.getPlatform().emptyByteString;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO(mcg): Change to a string enum once we've upgraded to typescript 2.4.\r\n//  tslint:disable-next-line:variable-name Intended to look like a TS 2.4 enum\r\nvar Code = {\r\n    // Causes are copied from:\r\n    // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\r\n    /** Not an error; returned on success. */\r\n    OK: 'ok',\r\n    /** The operation was cancelled (typically by the caller). */\r\n    CANCELLED: 'cancelled',\r\n    /** Unknown error or an error from a different error domain. */\r\n    UNKNOWN: 'unknown',\r\n    /**\r\n     * Client specified an invalid argument. Note that this differs from\r\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\r\n     * problematic regardless of the state of the system (e.g., a malformed file\r\n     * name).\r\n     */\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    /**\r\n     * Deadline expired before operation could complete. For operations that\r\n     * change the state of the system, this error may be returned even if the\r\n     * operation has completed successfully. For example, a successful response\r\n     * from a server could have been delayed long enough for the deadline to\r\n     * expire.\r\n     */\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    /** Some requested entity (e.g., file or directory) was not found. */\r\n    NOT_FOUND: 'not-found',\r\n    /**\r\n     * Some entity that we attempted to create (e.g., file or directory) already\r\n     * exists.\r\n     */\r\n    ALREADY_EXISTS: 'already-exists',\r\n    /**\r\n     * The caller does not have permission to execute the specified operation.\r\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\r\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\r\n     * PERMISSION_DENIED must not be used if the caller can not be identified\r\n     * (use UNAUTHENTICATED instead for those errors).\r\n     */\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    /**\r\n     * The request does not have valid authentication credentials for the\r\n     * operation.\r\n     */\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    /**\r\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\r\n     * entire file system is out of space.\r\n     */\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    /**\r\n     * Operation was rejected because the system is not in a state required for\r\n     * the operation's execution. For example, directory to be deleted may be\r\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\r\n     *\r\n     * A litmus test that may help a service implementor in deciding\r\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\r\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\r\n     *  (b) Use ABORTED if the client should retry at a higher-level\r\n     *      (e.g., restarting a read-modify-write sequence).\r\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\r\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\r\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\r\n     *      should be returned since the client should not retry unless\r\n     *      they have first fixed up the directory by deleting files from it.\r\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\r\n     *      REST Get/Update/Delete on a resource and the resource on the\r\n     *      server does not match the condition. E.g., conflicting\r\n     *      read-modify-write on the same resource.\r\n     */\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    /**\r\n     * The operation was aborted, typically due to a concurrency issue like\r\n     * sequencer check failures, transaction aborts, etc.\r\n     *\r\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\r\n     * and UNAVAILABLE.\r\n     */\r\n    ABORTED: 'aborted',\r\n    /**\r\n     * Operation was attempted past the valid range. E.g., seeking or reading\r\n     * past end of file.\r\n     *\r\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\r\n     * if the system state changes. For example, a 32-bit file system will\r\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\r\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\r\n     * an offset past the current file size.\r\n     *\r\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\r\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\r\n     * when it applies so that callers who are iterating through a space can\r\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\r\n     */\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    /** Operation is not implemented or not supported/enabled in this service. */\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    /**\r\n     * Internal errors. Means some invariants expected by underlying System has\r\n     * been broken. If you see one of these errors, Something is very broken.\r\n     */\r\n    INTERNAL: 'internal',\r\n    /**\r\n     * The service is currently unavailable. This is a most likely a transient\r\n     * condition and may be corrected by retrying with a backoff.\r\n     *\r\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\r\n     * and UNAVAILABLE.\r\n     */\r\n    UNAVAILABLE: 'unavailable',\r\n    /** Unrecoverable data loss or corruption. */\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An error class used for Firestore-generated errors. Ideally we should be\r\n * using FirebaseError, but integrating with it is overly arduous at the moment,\r\n * so we define our own compatible error class (with a `name` of 'FirebaseError'\r\n * and compatible `code` and `message` fields.)\r\n */\r\nvar FirestoreError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FirestoreError, _super);\r\n    function FirestoreError(code, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        _this.message = message;\r\n        _this.name = 'FirebaseError';\r\n        // HACK: We write a toString property directly because Error is not a real\r\n        // class and so inheritance does not work correctly. We could alternatively\r\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\r\n        _this.toString = function () { return _this.name + \": [code=\" + _this.code + \"]: \" + _this.message; };\r\n        return _this;\r\n    }\r\n    return FirestoreError;\r\n}(Error));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper function to prevent instantiation through the constructor.\r\n *\r\n * This method creates a new constructor that throws when it's invoked.\r\n * The prototype of that constructor is then set to the prototype of the hidden\r\n * \"class\" to expose all the prototype methods and allow for instanceof\r\n * checks.\r\n *\r\n * To also make all the static methods available, all properties of the\r\n * original constructor are copied to the new constructor.\r\n */\r\nfunction makeConstructorPrivate(cls, optionalMessage) {\r\n    function PublicConstructor() {\r\n        var error = 'This constructor is private.';\r\n        if (optionalMessage) {\r\n            error += ' ';\r\n            error += optionalMessage;\r\n        }\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, error);\r\n    }\r\n    // Make sure instanceof checks work and all methods are exposed on the public\r\n    // constructor\r\n    PublicConstructor.prototype = cls.prototype;\r\n    // Copy any static methods/members\r\n    for (var staticProperty in cls) {\r\n        if (cls.hasOwnProperty(staticProperty)) {\r\n            PublicConstructor[staticProperty] = cls[staticProperty];\r\n        }\r\n    }\r\n    return PublicConstructor;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n/** Returns the given value if it's defined or the defaultValue otherwise. */\r\nfunction defaulted(value, defaultValue) {\r\n    return value !== undefined ? value : defaultValue;\r\n}\r\nfunction forEachNumber(obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var num = Number(key);\r\n            if (!isNaN(num)) {\r\n                fn(num, obj[key]);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction forEach(obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    assert(obj != null && typeof obj === 'object', 'isEmpty() expects object parameter.');\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction shallowCopy(obj) {\r\n    assert(obj && typeof obj === 'object', 'shallowCopy() expects object parameter.');\r\n    var result = {};\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            result[key] = obj[key];\r\n        }\r\n    }\r\n    return result;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Validates the invocation of functionName has the exact number of arguments.\r\n *\r\n * Forward the magic \"arguments\" variable as second parameter on which the\r\n * parameter validation is performed:\r\n * validateExactNumberOfArgs('myFunction', arguments, 2);\r\n */\r\nfunction validateExactNumberOfArgs(functionName, args, numberOfArgs) {\r\n    if (args.length !== numberOfArgs) {\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires \" +\r\n            formatPlural(numberOfArgs, 'argument') +\r\n            ', but was called with ' +\r\n            formatPlural(args.length, 'argument') +\r\n            '.');\r\n    }\r\n}\r\n/**\r\n * Validates the invocation of functionName has at least the provided number of\r\n * arguments (but can have many more).\r\n *\r\n * Forward the magic \"arguments\" variable as second parameter on which the\r\n * parameter validation is performed:\r\n * validateAtLeastNumberOfArgs('myFunction', arguments, 2);\r\n */\r\nfunction validateAtLeastNumberOfArgs(functionName, args, minNumberOfArgs) {\r\n    if (args.length < minNumberOfArgs) {\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires at least \" +\r\n            formatPlural(minNumberOfArgs, 'argument') +\r\n            ', but was called with ' +\r\n            formatPlural(args.length, 'argument') +\r\n            '.');\r\n    }\r\n}\r\n/**\r\n * Validates the invocation of functionName has number of arguments between\r\n * the values provided.\r\n *\r\n * Forward the magic \"arguments\" variable as second parameter on which the\r\n * parameter validation is performed:\r\n * validateBetweenNumberOfArgs('myFunction', arguments, 2, 3);\r\n */\r\nfunction validateBetweenNumberOfArgs(functionName, args, minNumberOfArgs, maxNumberOfArgs) {\r\n    if (args.length < minNumberOfArgs || args.length > maxNumberOfArgs) {\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires between \" + minNumberOfArgs + \" and \" +\r\n            (maxNumberOfArgs + \" arguments, but was called with \") +\r\n            formatPlural(args.length, 'argument') +\r\n            '.');\r\n    }\r\n}\r\n/**\r\n * Validates the provided argument is an array and has as least the expected\r\n * number of elements.\r\n */\r\nfunction validateNamedArrayAtLeastNumberOfElements(functionName, value, name, minNumberOfElements) {\r\n    if (!(value instanceof Array) || value.length < minNumberOfElements) {\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + name + \" argument to be an \" +\r\n            'array with at least ' +\r\n            (formatPlural(minNumberOfElements, 'element') + \".\"));\r\n    }\r\n}\r\n/**\r\n * Validates the provided positional argument has the native JavaScript type\r\n * using typeof checks.\r\n */\r\nfunction validateArgType(functionName, type, position, argument) {\r\n    validateType(functionName, type, ordinal(position) + \" argument\", argument);\r\n}\r\n/**\r\n * Validates the provided argument has the native JavaScript type using\r\n * typeof checks or is undefined.\r\n */\r\nfunction validateOptionalArgType(functionName, type, position, argument) {\r\n    if (argument !== undefined) {\r\n        validateArgType(functionName, type, position, argument);\r\n    }\r\n}\r\n/**\r\n * Validates the provided named option has the native JavaScript type using\r\n * typeof checks.\r\n */\r\nfunction validateNamedType(functionName, type, optionName, argument) {\r\n    validateType(functionName, type, optionName + \" option\", argument);\r\n}\r\n/**\r\n * Validates the provided named option has the native JavaScript type using\r\n * typeof checks or is undefined.\r\n */\r\nfunction validateNamedOptionalType(functionName, type, optionName, argument) {\r\n    if (argument !== undefined) {\r\n        validateNamedType(functionName, type, optionName, argument);\r\n    }\r\n}\r\nfunction validateArrayElements(functionName, optionName, typeDescription, argument, validator) {\r\n    if (!(argument instanceof Array)) {\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + optionName + \" \" +\r\n            (\"option to be an array, but it was: \" + valueDescription(argument)));\r\n    }\r\n    for (var i = 0; i < argument.length; ++i) {\r\n        if (!validator(argument[i])) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires all \" + optionName + \" \" +\r\n                (\"elements to be \" + typeDescription + \", but the value at index \" + i + \" \") +\r\n                (\"was: \" + valueDescription(argument[i])));\r\n        }\r\n    }\r\n}\r\nfunction validateOptionalArrayElements(functionName, optionName, typeDescription, argument, validator) {\r\n    if (argument !== undefined) {\r\n        validateArrayElements(functionName, optionName, typeDescription, argument, validator);\r\n    }\r\n}\r\n/**\r\n * Validates that the provided named option equals one of the expected values.\r\n */\r\nfunction validateNamedPropertyEquals(functionName, inputName, optionName, input, expected) {\r\n    var expectedDescription = [];\r\n    for (var _i = 0, expected_1 = expected; _i < expected_1.length; _i++) {\r\n        var val = expected_1[_i];\r\n        if (val === input) {\r\n            return;\r\n        }\r\n        expectedDescription.push(valueDescription(val));\r\n    }\r\n    var actualDescription = valueDescription(input);\r\n    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid value \" + actualDescription + \" provided to function \" + functionName + \"() for option \\\"\" + optionName + \"\\\". Acceptable values: \" + expectedDescription.join(', '));\r\n}\r\n/**\r\n * Validates that the provided named option equals one of the expected values or\r\n * is undefined.\r\n */\r\nfunction validateNamedOptionalPropertyEquals(functionName, inputName, optionName, input, expected) {\r\n    if (input !== undefined) {\r\n        validateNamedPropertyEquals(functionName, inputName, optionName, input, expected);\r\n    }\r\n}\r\n/** Helper to validate the type of a provided input. */\r\nfunction validateType(functionName, type, inputName, input) {\r\n    if (typeof input !== type || (type === 'object' && !isPlainObject(input))) {\r\n        var description = valueDescription(input);\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + inputName + \" \" +\r\n            (\"to be of type \" + type + \", but it was: \" + description));\r\n    }\r\n}\r\n/**\r\n * Returns true if it's a non-null object without a custom prototype\r\n * (i.e. excludes Array, Date, etc.).\r\n */\r\nfunction isPlainObject(input) {\r\n    return (typeof input === 'object' &&\r\n        input !== null &&\r\n        (Object.getPrototypeOf(input) === Object.prototype ||\r\n            Object.getPrototypeOf(input) === null));\r\n}\r\n/** Returns a string describing the type / value of the provided input. */\r\nfunction valueDescription(input) {\r\n    if (input === undefined) {\r\n        return 'undefined';\r\n    }\r\n    else if (input === null) {\r\n        return 'null';\r\n    }\r\n    else if (typeof input === 'string') {\r\n        if (input.length > 20) {\r\n            input = input.substring(0, 20) + \"...\";\r\n        }\r\n        return JSON.stringify(input);\r\n    }\r\n    else if (typeof input === 'number' || typeof input === 'boolean') {\r\n        return '' + input;\r\n    }\r\n    else if (typeof input === 'object') {\r\n        if (input instanceof Array) {\r\n            return 'an array';\r\n        }\r\n        else {\r\n            var customObjectName = tryGetCustomObjectType(input);\r\n            if (customObjectName) {\r\n                return \"a custom \" + customObjectName + \" object\";\r\n            }\r\n            else {\r\n                return 'an object';\r\n            }\r\n        }\r\n    }\r\n    else if (typeof input === 'function') {\r\n        return 'a function';\r\n    }\r\n    else {\r\n        return fail('Unknown wrong type: ' + typeof input);\r\n    }\r\n}\r\n/** Hacky method to try to get the constructor name for an object. */\r\nfunction tryGetCustomObjectType(input) {\r\n    if (input.constructor) {\r\n        var funcNameRegex = /function\\s+([^\\s(]+)\\s*\\(/;\r\n        var results = funcNameRegex.exec(input.constructor.toString());\r\n        if (results && results.length > 1) {\r\n            return results[1];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/** Validates the provided argument is defined. */\r\nfunction validateDefined(functionName, position, argument) {\r\n    if (argument === undefined) {\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires a valid \" + ordinal(position) + \" \" +\r\n            \"argument, but it was undefined.\");\r\n    }\r\n}\r\n/**\r\n * Validates the provided positional argument is an object, and its keys and\r\n * values match the expected keys and types provided in optionTypes.\r\n */\r\nfunction validateOptionNames(functionName, options, optionNames) {\r\n    forEach(options, function (key, _) {\r\n        if (optionNames.indexOf(key) < 0) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Unknown option '\" + key + \"' passed to function \" + functionName + \"(). \" +\r\n                'Available options: ' +\r\n                optionNames.join(', '));\r\n        }\r\n    });\r\n}\r\n/**\r\n * Helper method to throw an error that the provided argument did not pass\r\n * an instanceof check.\r\n */\r\nfunction invalidClassError(functionName, type, position, argument) {\r\n    var description = valueDescription(argument);\r\n    return new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + functionName + \"() requires its \" + ordinal(position) + \" \" +\r\n        (\"argument to be a \" + type + \", but it was: \" + description));\r\n}\r\n/** Converts a number to its english word representation */\r\nfunction ordinal(num) {\r\n    switch (num) {\r\n        case 1:\r\n            return 'first';\r\n        case 2:\r\n            return 'second';\r\n        case 3:\r\n            return 'third';\r\n        default:\r\n            return num + 'th';\r\n    }\r\n}\r\n/**\r\n * Formats the given word as plural conditionally given the preceding number.\r\n */\r\nfunction formatPlural(num, str) {\r\n    return num + \" \" + str + (num === 1 ? '' : 's');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// tslint:disable-next-line:class-as-namespace\r\nvar AutoId = /** @class */ (function () {\r\n    function AutoId() {\r\n    }\r\n    AutoId.newId = function () {\r\n        // Alphanumeric characters\r\n        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var autoId = '';\r\n        for (var i = 0; i < 20; i++) {\r\n            autoId += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        assert(autoId.length === 20, 'Invalid auto ID: ' + autoId);\r\n        return autoId;\r\n    };\r\n    return AutoId;\r\n}());\r\nfunction primitiveComparator(left, right) {\r\n    if (left < right)\r\n        return -1;\r\n    if (left > right)\r\n        return 1;\r\n    return 0;\r\n}\r\n/** Helper to compare nullable (or undefined-able) objects using isEqual(). */\r\nfunction equals(left, right) {\r\n    if (left !== null && left !== undefined) {\r\n        return !!(right && left.isEqual(right));\r\n    }\r\n    else {\r\n        // HACK: Explicitly cast since TypeScript's type narrowing apparently isn't\r\n        // smart enough.\r\n        return left === right;\r\n    }\r\n}\r\n/** Helper to compare arrays using isEqual(). */\r\nfunction arrayEquals(left, right) {\r\n    if (left.length !== right.length) {\r\n        return false;\r\n    }\r\n    for (var i = 0; i < left.length; i++) {\r\n        if (!left[i].isEqual(right[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Returns the largest lexicographically smaller string of equal or smaller\r\n * length. Returns an empty string if there is no such predecessor (if the input\r\n * is empty).\r\n *\r\n * Strings returned from this method can be invalid UTF-16 but this is sufficent\r\n * in use for indexeddb because that depends on lexicographical ordering but\r\n * shouldn't be used elsewhere.\r\n */\r\nfunction immediatePredecessor(s) {\r\n    // We can decrement the last character in the string and be done\r\n    // unless that character is 0 (0x0000), in which case we have to erase the\r\n    // last character.\r\n    var lastIndex = s.length - 1;\r\n    if (s.length === 0) {\r\n        // Special case the empty string.\r\n        return '';\r\n    }\r\n    else if (s.charAt(lastIndex) === '\\0') {\r\n        return s.substring(0, lastIndex);\r\n    }\r\n    else {\r\n        return (s.substring(0, lastIndex) +\r\n            String.fromCharCode(s.charCodeAt(lastIndex) - 1));\r\n    }\r\n}\r\n/**\r\n * Returns the immediate lexicographically-following string. This is useful to\r\n * construct an inclusive range for indexeddb iterators.\r\n */\r\nfunction immediateSuccessor(s) {\r\n    // Return the input string, with an additional NUL byte appended.\r\n    return s + '\\0';\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Helper function to assert Uint8Array is available at runtime. */\r\nfunction assertUint8ArrayAvailable() {\r\n    if (typeof Uint8Array === 'undefined') {\r\n        throw new FirestoreError(Code.UNIMPLEMENTED, 'Uint8Arrays are not available in this environment.');\r\n    }\r\n}\r\n/** Helper function to assert Base64 functions are available at runtime. */\r\nfunction assertBase64Available() {\r\n    if (!PlatformSupport.getPlatform().base64Available) {\r\n        throw new FirestoreError(Code.UNIMPLEMENTED, 'Blobs are unavailable in Firestore in this environment.');\r\n    }\r\n}\r\n/**\r\n * Immutable class holding a blob (binary data).\r\n * This class is directly exposed in the public API.\r\n *\r\n * Note that while you can't hide the constructor in JavaScript code, we are\r\n * using the hack above to make sure no-one outside this module can call it.\r\n */\r\nvar Blob = /** @class */ (function () {\r\n    function Blob(binaryString) {\r\n        assertBase64Available();\r\n        this._binaryString = binaryString;\r\n    }\r\n    Blob.fromBase64String = function (base64) {\r\n        validateExactNumberOfArgs('Blob.fromBase64String', arguments, 1);\r\n        validateArgType('Blob.fromBase64String', 'string', 1, base64);\r\n        assertBase64Available();\r\n        try {\r\n            var binaryString = PlatformSupport.getPlatform().atob(base64);\r\n            return new Blob(binaryString);\r\n        }\r\n        catch (e) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Failed to construct Blob from Base64 string: ' + e);\r\n        }\r\n    };\r\n    Blob.fromUint8Array = function (array) {\r\n        validateExactNumberOfArgs('Blob.fromUint8Array', arguments, 1);\r\n        assertUint8ArrayAvailable();\r\n        if (!(array instanceof Uint8Array)) {\r\n            throw invalidClassError('Blob.fromUint8Array', 'Uint8Array', 1, array);\r\n        }\r\n        // We can't call array.map directly because it expects the return type to\r\n        // be a Uint8Array, whereas we can convert it to a regular array by invoking\r\n        // map on the Array prototype.\r\n        var binaryString = Array.prototype.map\r\n            .call(array, function (char) {\r\n            return String.fromCharCode(char);\r\n        })\r\n            .join('');\r\n        return new Blob(binaryString);\r\n    };\r\n    Blob.prototype.toBase64 = function () {\r\n        validateExactNumberOfArgs('Blob.toBase64', arguments, 0);\r\n        assertBase64Available();\r\n        return PlatformSupport.getPlatform().btoa(this._binaryString);\r\n    };\r\n    Blob.prototype.toUint8Array = function () {\r\n        validateExactNumberOfArgs('Blob.toUint8Array', arguments, 0);\r\n        assertUint8ArrayAvailable();\r\n        var buffer = new Uint8Array(this._binaryString.length);\r\n        for (var i = 0; i < this._binaryString.length; i++) {\r\n            buffer[i] = this._binaryString.charCodeAt(i);\r\n        }\r\n        return buffer;\r\n    };\r\n    Blob.prototype.toString = function () {\r\n        return 'Blob(base64: ' + this.toBase64() + ')';\r\n    };\r\n    Blob.prototype.isEqual = function (other) {\r\n        return this._binaryString === other._binaryString;\r\n    };\r\n    /**\r\n     * Actually private to JS consumers of our API, so this function is prefixed\r\n     * with an underscore.\r\n     */\r\n    Blob.prototype._compareTo = function (other) {\r\n        return primitiveComparator(this._binaryString, other._binaryString);\r\n    };\r\n    return Blob;\r\n}());\r\n// Public instance that disallows construction at runtime. This constructor is\r\n// used when exporting Blob on firebase.firestore.Blob and will be called Blob\r\n// publicly. Internally we still use Blob which has a type checked private\r\n// constructor. Note that Blob and PublicBlob can be used interchangeably in\r\n// instanceof checks.\r\n// For our internal TypeScript code PublicBlob doesn't exist as a type, and so\r\n// we need to use Blob as type and export it too.\r\n// tslint:disable-next-line:variable-name We're treating this as a class name.\r\nvar PublicBlob = makeConstructorPrivate(Blob, 'Use Blob.fromUint8Array() or Blob.fromBase64String() instead.');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Immutable class representing a geo point as latitude-longitude pair.\r\n * This class is directly exposed in the public API, including its constructor.\r\n */\r\nvar GeoPoint = /** @class */ (function () {\r\n    function GeoPoint(latitude, longitude) {\r\n        validateExactNumberOfArgs('GeoPoint', arguments, 2);\r\n        validateArgType('GeoPoint', 'number', 1, latitude);\r\n        validateArgType('GeoPoint', 'number', 2, longitude);\r\n        if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Latitude must be a number between -90 and 90, but was: ' + latitude);\r\n        }\r\n        if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Longitude must be a number between -180 and 180, but was: ' + longitude);\r\n        }\r\n        this._lat = latitude;\r\n        this._long = longitude;\r\n    }\r\n    Object.defineProperty(GeoPoint.prototype, \"latitude\", {\r\n        /**\r\n         * Returns the latitude of this geo point, a number between -90 and 90.\r\n         */\r\n        get: function () {\r\n            return this._lat;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GeoPoint.prototype, \"longitude\", {\r\n        /**\r\n         * Returns the longitude of this geo point, a number between -180 and 180.\r\n         */\r\n        get: function () {\r\n            return this._long;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GeoPoint.prototype.isEqual = function (other) {\r\n        return this._lat === other._lat && this._long === other._long;\r\n    };\r\n    /**\r\n     * Actually private to JS consumers of our API, so this function is prefixed\r\n     * with an underscore.\r\n     */\r\n    GeoPoint.prototype._compareTo = function (other) {\r\n        return (primitiveComparator(this._lat, other._lat) ||\r\n            primitiveComparator(this._long, other._long));\r\n    };\r\n    return GeoPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Timestamp = /** @class */ (function () {\r\n    function Timestamp(seconds, nanoseconds) {\r\n        this.seconds = seconds;\r\n        this.nanoseconds = nanoseconds;\r\n        if (nanoseconds < 0) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp nanoseconds out of range: ' + nanoseconds);\r\n        }\r\n        if (nanoseconds >= 1e9) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp nanoseconds out of range: ' + nanoseconds);\r\n        }\r\n        // Midnight at the beginning of 1/1/1 is the earliest Firestore supports.\r\n        if (seconds < -62135596800) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp seconds out of range: ' + seconds);\r\n        }\r\n        // This will break in the year 10,000.\r\n        if (seconds >= 253402300800) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Timestamp seconds out of range: ' + seconds);\r\n        }\r\n    }\r\n    Timestamp.now = function () {\r\n        return Timestamp.fromMillis(Date.now());\r\n    };\r\n    Timestamp.fromDate = function (date) {\r\n        return Timestamp.fromMillis(date.getTime());\r\n    };\r\n    Timestamp.fromMillis = function (milliseconds) {\r\n        var seconds = Math.floor(milliseconds / 1000);\r\n        var nanos = (milliseconds - seconds * 1000) * 1e6;\r\n        return new Timestamp(seconds, nanos);\r\n    };\r\n    Timestamp.prototype.toDate = function () {\r\n        return new Date(this.toMillis());\r\n    };\r\n    Timestamp.prototype.toMillis = function () {\r\n        return this.seconds * 1000 + this.nanoseconds / 1e6;\r\n    };\r\n    Timestamp.prototype._compareTo = function (other) {\r\n        if (this.seconds === other.seconds) {\r\n            return primitiveComparator(this.nanoseconds, other.nanoseconds);\r\n        }\r\n        return primitiveComparator(this.seconds, other.seconds);\r\n    };\r\n    Timestamp.prototype.isEqual = function (other) {\r\n        return (other.seconds === this.seconds && other.nanoseconds === this.nanoseconds);\r\n    };\r\n    Timestamp.prototype.toString = function () {\r\n        return ('Timestamp(seconds=' +\r\n            this.seconds +\r\n            ', nanoseconds=' +\r\n            this.nanoseconds +\r\n            ')');\r\n    };\r\n    return Timestamp;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DatabaseInfo = /** @class */ (function () {\r\n    /**\r\n     * Constructs a DatabaseInfo using the provided host, databaseId and\r\n     * persistenceKey.\r\n     *\r\n     * @param databaseId The database to use.\r\n     * @param persistenceKey A unique identifier for this Firestore's local\r\n     * storage (used in conjunction with the databaseId).\r\n     * @param host The Firestore backend host to connect to.\r\n     * @param ssl Whether to use SSL when connecting.\r\n     */\r\n    function DatabaseInfo(databaseId, persistenceKey, host, ssl) {\r\n        this.databaseId = databaseId;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host;\r\n        this.ssl = ssl;\r\n    }\r\n    return DatabaseInfo;\r\n}());\r\n/** The default database name for a project. */\r\nvar DEFAULT_DATABASE_NAME = '(default)';\r\n/** Represents the database ID a Firestore client is associated with. */\r\nvar DatabaseId = /** @class */ (function () {\r\n    function DatabaseId(projectId, database) {\r\n        this.projectId = projectId;\r\n        this.database = database ? database : DEFAULT_DATABASE_NAME;\r\n    }\r\n    Object.defineProperty(DatabaseId.prototype, \"isDefaultDatabase\", {\r\n        get: function () {\r\n            return this.database === DEFAULT_DATABASE_NAME;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DatabaseId.prototype.isEqual = function (other) {\r\n        return (other instanceof DatabaseId &&\r\n            other.projectId === this.projectId &&\r\n            other.database === this.database);\r\n    };\r\n    DatabaseId.prototype.compareTo = function (other) {\r\n        return (primitiveComparator(this.projectId, other.projectId) ||\r\n            primitiveComparator(this.database, other.database));\r\n    };\r\n    return DatabaseId;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DOCUMENT_KEY_NAME = '__name__';\r\n/**\r\n * Path represents an ordered sequence of string segments.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    function Path(segments, offset, length) {\r\n        this.init(segments, offset, length);\r\n    }\r\n    /**\r\n     * An initialization method that can be called from outside the constructor.\r\n     * We need this so that we can have a non-static construct method that returns\r\n     * the polymorphic `this` type.\r\n     */\r\n    Path.prototype.init = function (segments, offset, length) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n        else if (offset > segments.length) {\r\n            fail('offset ' + offset + ' out of range ' + segments.length);\r\n        }\r\n        if (length === undefined) {\r\n            length = segments.length - offset;\r\n        }\r\n        else if (length > segments.length - offset) {\r\n            fail('length ' + length + ' out of range ' + (segments.length - offset));\r\n        }\r\n        this.segments = segments;\r\n        this.offset = offset;\r\n        this.len = length;\r\n    };\r\n    /**\r\n     * Constructs a new instance of Path using the same concrete type as `this`.\r\n     * We need this instead of using the normal constructor, because polymorphic\r\n     * `this` doesn't work on static methods.\r\n     */\r\n    Path.prototype.construct = function (segments, offset, length) {\r\n        var path = Object.create(Object.getPrototypeOf(this));\r\n        path.init(segments, offset, length);\r\n        return path;\r\n    };\r\n    Object.defineProperty(Path.prototype, \"length\", {\r\n        get: function () {\r\n            return this.len;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.isEqual = function (other) {\r\n        return Path.comparator(this, other) === 0;\r\n    };\r\n    Path.prototype.child = function (nameOrPath) {\r\n        var segments = this.segments.slice(this.offset, this.limit());\r\n        if (nameOrPath instanceof Path) {\r\n            nameOrPath.forEach(function (segment) {\r\n                segments.push(segment);\r\n            });\r\n        }\r\n        else if (typeof nameOrPath === 'string') {\r\n            segments.push(nameOrPath);\r\n        }\r\n        else {\r\n            fail('Unknown parameter type for Path.child(): ' + nameOrPath);\r\n        }\r\n        return this.construct(segments);\r\n    };\r\n    /** The index of one past the last segment of the path. */\r\n    Path.prototype.limit = function () {\r\n        return this.offset + this.length;\r\n    };\r\n    Path.prototype.popFirst = function (size) {\r\n        size = size === undefined ? 1 : size;\r\n        assert(this.length >= size, \"Can't call popFirst() with less segments\");\r\n        return this.construct(this.segments, this.offset + size, this.length - size);\r\n    };\r\n    Path.prototype.popLast = function () {\r\n        assert(!this.isEmpty(), \"Can't call popLast() on empty path\");\r\n        return this.construct(this.segments, this.offset, this.length - 1);\r\n    };\r\n    Path.prototype.firstSegment = function () {\r\n        assert(!this.isEmpty(), \"Can't call firstSegment() on empty path\");\r\n        return this.segments[this.offset];\r\n    };\r\n    Path.prototype.lastSegment = function () {\r\n        assert(!this.isEmpty(), \"Can't call lastSegment() on empty path\");\r\n        return this.segments[this.limit() - 1];\r\n    };\r\n    Path.prototype.get = function (index) {\r\n        assert(index < this.length, 'Index out of range');\r\n        return this.segments[this.offset + index];\r\n    };\r\n    Path.prototype.isEmpty = function () {\r\n        return this.length === 0;\r\n    };\r\n    Path.prototype.isPrefixOf = function (other) {\r\n        if (other.length < this.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < this.length; i++) {\r\n            if (this.get(i) !== other.get(i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Path.prototype.forEach = function (fn) {\r\n        for (var i = this.offset, end = this.limit(); i < end; i++) {\r\n            fn(this.segments[i]);\r\n        }\r\n    };\r\n    Path.prototype.toArray = function () {\r\n        return this.segments.slice(this.offset, this.limit());\r\n    };\r\n    Path.comparator = function (p1, p2) {\r\n        var len = Math.min(p1.length, p2.length);\r\n        for (var i = 0; i < len; i++) {\r\n            var left = p1.get(i);\r\n            var right = p2.get(i);\r\n            if (left < right)\r\n                return -1;\r\n            if (left > right)\r\n                return 1;\r\n        }\r\n        if (p1.length < p2.length)\r\n            return -1;\r\n        if (p1.length > p2.length)\r\n            return 1;\r\n        return 0;\r\n    };\r\n    return Path;\r\n}());\r\n/**\r\n * A slash-separated path for navigating resources (documents and collections)\r\n * within Firestore.\r\n */\r\nvar ResourcePath = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ResourcePath, _super);\r\n    function ResourcePath() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ResourcePath.prototype.canonicalString = function () {\r\n        // NOTE: The client is ignorant of any path segments containing escape\r\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\r\n        // for legacy reasons and should not be used frequently).\r\n        return this.toArray().join('/');\r\n    };\r\n    ResourcePath.prototype.toString = function () {\r\n        return this.canonicalString();\r\n    };\r\n    /**\r\n     * Creates a resource path from the given slash-delimited string.\r\n     */\r\n    ResourcePath.fromString = function (path) {\r\n        // NOTE: The client is ignorant of any path segments containing escape\r\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\r\n        // for legacy reasons and should not be used frequently).\r\n        if (path.indexOf('//') >= 0) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid path (\" + path + \"). Paths must not contain // in them.\");\r\n        }\r\n        // We may still have an empty segment at the beginning or end if they had a\r\n        // leading or trailing slash (which we allow).\r\n        var segments = path.split('/').filter(function (segment) { return segment.length > 0; });\r\n        return new ResourcePath(segments);\r\n    };\r\n    ResourcePath.EMPTY_PATH = new ResourcePath([]);\r\n    return ResourcePath;\r\n}(Path));\r\nvar identifierRegExp = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\r\n/** A dot-separated path for navigating sub-objects within a document. */\r\nvar FieldPath = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldPath, _super);\r\n    function FieldPath() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns true if the string could be used as a segment in a field path\r\n     * without escaping.\r\n     */\r\n    FieldPath.isValidIdentifier = function (segment) {\r\n        return identifierRegExp.test(segment);\r\n    };\r\n    FieldPath.prototype.canonicalString = function () {\r\n        return this.toArray()\r\n            .map(function (str) {\r\n            str = str.replace('\\\\', '\\\\\\\\').replace('`', '\\\\`');\r\n            if (!FieldPath.isValidIdentifier(str)) {\r\n                str = '`' + str + '`';\r\n            }\r\n            return str;\r\n        })\r\n            .join('.');\r\n    };\r\n    FieldPath.prototype.toString = function () {\r\n        return this.canonicalString();\r\n    };\r\n    /**\r\n     * Returns true if this field references the key of a document.\r\n     */\r\n    FieldPath.prototype.isKeyField = function () {\r\n        return this.length === 1 && this.get(0) === DOCUMENT_KEY_NAME;\r\n    };\r\n    /**\r\n     * The field designating the key of a document.\r\n     */\r\n    FieldPath.keyField = function () {\r\n        return new FieldPath([DOCUMENT_KEY_NAME]);\r\n    };\r\n    /**\r\n     * Parses a field string from the given server-formatted string.\r\n     *\r\n     * - Splitting the empty string is not allowed (for now at least).\r\n     * - Empty segments within the string (e.g. if there are two consecutive\r\n     *   separators) are not allowed.\r\n     *\r\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\r\n     * non-identifier path components, even if they aren't escaped.\r\n     */\r\n    FieldPath.fromServerFormat = function (path) {\r\n        var segments = [];\r\n        var current = '';\r\n        var i = 0;\r\n        var addCurrentSegment = function () {\r\n            if (current.length === 0) {\r\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not be empty, begin \" +\r\n                    \"with '.', end with '.', or contain '..'\");\r\n            }\r\n            segments.push(current);\r\n            current = '';\r\n        };\r\n        var inBackticks = false;\r\n        while (i < path.length) {\r\n            var c = path[i];\r\n            if (c === '\\\\') {\r\n                if (i + 1 === path.length) {\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Path has trailing escape character: ' + path);\r\n                }\r\n                var next = path[i + 1];\r\n                if (!(next === '\\\\' || next === '.' || next === '`')) {\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Path has invalid escape sequence: ' + path);\r\n                }\r\n                current += next;\r\n                i += 2;\r\n            }\r\n            else if (c === '`') {\r\n                inBackticks = !inBackticks;\r\n                i++;\r\n            }\r\n            else if (c === '.' && !inBackticks) {\r\n                addCurrentSegment();\r\n                i++;\r\n            }\r\n            else {\r\n                current += c;\r\n                i++;\r\n            }\r\n        }\r\n        addCurrentSegment();\r\n        if (inBackticks) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Unterminated ` in path: ' + path);\r\n        }\r\n        return new FieldPath(segments);\r\n    };\r\n    FieldPath.EMPTY_PATH = new FieldPath([]);\r\n    return FieldPath;\r\n}(Path));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DocumentKey = /** @class */ (function () {\r\n    function DocumentKey(path) {\r\n        this.path = path;\r\n        assert(DocumentKey.isDocumentKey(path), 'Invalid DocumentKey with an odd number of segments: ' +\r\n            path.toArray().join('/'));\r\n    }\r\n    DocumentKey.prototype.isEqual = function (other) {\r\n        return (other !== null && ResourcePath.comparator(this.path, other.path) === 0);\r\n    };\r\n    DocumentKey.prototype.toString = function () {\r\n        return this.path.toString();\r\n    };\r\n    DocumentKey.comparator = function (k1, k2) {\r\n        return ResourcePath.comparator(k1.path, k2.path);\r\n    };\r\n    DocumentKey.isDocumentKey = function (path) {\r\n        return path.length % 2 === 0;\r\n    };\r\n    /**\r\n     * Creates and returns a new document key with the given segments.\r\n     *\r\n     * @param path The segments of the path to the document\r\n     * @return A new instance of DocumentKey\r\n     */\r\n    DocumentKey.fromSegments = function (segments) {\r\n        return new DocumentKey(new ResourcePath(segments.slice()));\r\n    };\r\n    /**\r\n     * Creates and returns a new document key using '/' to split the string into\r\n     * segments.\r\n     *\r\n     * @param path The slash-separated path string to the document\r\n     * @return A new instance of DocumentKey\r\n     */\r\n    DocumentKey.fromPathString = function (path) {\r\n        return new DocumentKey(ResourcePath.fromString(path));\r\n    };\r\n    DocumentKey.EMPTY = new DocumentKey(new ResourcePath([]));\r\n    return DocumentKey;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Document = /** @class */ (function () {\r\n    function Document(key, version, data, options) {\r\n        this.key = key;\r\n        this.version = version;\r\n        this.data = data;\r\n        this.hasLocalMutations = options.hasLocalMutations;\r\n    }\r\n    Document.prototype.field = function (path) {\r\n        return this.data.field(path);\r\n    };\r\n    Document.prototype.fieldValue = function (path) {\r\n        var field = this.field(path);\r\n        return field ? field.value() : undefined;\r\n    };\r\n    Document.prototype.value = function () {\r\n        return this.data.value();\r\n    };\r\n    Document.prototype.isEqual = function (other) {\r\n        return (other instanceof Document &&\r\n            this.key.isEqual(other.key) &&\r\n            this.version.isEqual(other.version) &&\r\n            this.data.isEqual(other.data) &&\r\n            this.hasLocalMutations === other.hasLocalMutations);\r\n    };\r\n    Document.prototype.toString = function () {\r\n        return (\"Document(\" + this.key + \", \" + this.version + \", \" + this.data.toString() + \", \" +\r\n            (\"{hasLocalMutations: \" + this.hasLocalMutations + \"})\"));\r\n    };\r\n    Document.compareByKey = function (d1, d2) {\r\n        return DocumentKey.comparator(d1.key, d2.key);\r\n    };\r\n    Document.compareByField = function (field, d1, d2) {\r\n        var v1 = d1.field(field);\r\n        var v2 = d2.field(field);\r\n        if (v1 !== undefined && v2 !== undefined) {\r\n            return v1.compareTo(v2);\r\n        }\r\n        else {\r\n            return fail(\"Trying to compare documents on fields that don't exist\");\r\n        }\r\n    };\r\n    return Document;\r\n}());\r\n/**\r\n * A class representing a deleted document.\r\n * Version is set to 0 if we don't point to any specific time, otherwise it\r\n * denotes time we know it didn't exist at.\r\n */\r\nvar NoDocument = /** @class */ (function () {\r\n    function NoDocument(key, version) {\r\n        this.key = key;\r\n        this.version = version;\r\n    }\r\n    NoDocument.prototype.toString = function () {\r\n        return \"NoDocument(\" + this.key + \", \" + this.version + \")\";\r\n    };\r\n    NoDocument.prototype.isEqual = function (other) {\r\n        return (other &&\r\n            other.version.isEqual(this.version) &&\r\n            other.key.isEqual(this.key));\r\n    };\r\n    NoDocument.compareByKey = function (d1, d2) {\r\n        return DocumentKey.comparator(d1.key, d2.key);\r\n    };\r\n    return NoDocument;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n// tree.\r\nvar SortedMap = /** @class */ (function () {\r\n    function SortedMap(comparator, root) {\r\n        this.comparator = comparator;\r\n        this.root = root ? root : LLRBNode.EMPTY;\r\n    }\r\n    // Returns a copy of the map, with the specified key/value added or replaced.\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator, this.root\r\n            .insert(key, value, this.comparator)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    // Returns a copy of the map, with the specified key removed.\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator, this.root\r\n            .remove(key, this.comparator)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    // Returns the value of the node with the given key, or null.\r\n    SortedMap.prototype.get = function (key) {\r\n        var node = this.root;\r\n        while (!node.isEmpty()) {\r\n            var cmp = this.comparator(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\r\n    // exist.\r\n    SortedMap.prototype.indexOf = function (key) {\r\n        // Number of nodes that were pruned when descending right\r\n        var prunedNodes = 0;\r\n        var node = this.root;\r\n        while (!node.isEmpty()) {\r\n            var cmp = this.comparator(key, node.key);\r\n            if (cmp === 0) {\r\n                return prunedNodes + node.left.size;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else {\r\n                // Count all nodes left of the node plus the node itself\r\n                prunedNodes += node.left.size + 1;\r\n                node = node.right;\r\n            }\r\n        }\r\n        // Node not found\r\n        return -1;\r\n    };\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root.isEmpty();\r\n    };\r\n    Object.defineProperty(SortedMap.prototype, \"size\", {\r\n        // Returns the total number of nodes in the map.\r\n        get: function () {\r\n            return this.root.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // Returns the minimum key in the map.\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root.minKey();\r\n    };\r\n    // Returns the maximum key in the map.\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root.maxKey();\r\n    };\r\n    // Traverses the map in key order and calls the specified action function\r\n    // for each key/value pair. If action returns true, traversal is aborted.\r\n    // Returns the first truthy value returned by action, or the last falsey\r\n    // value returned by action.\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root.inorderTraversal(action);\r\n    };\r\n    SortedMap.prototype.forEach = function (fn) {\r\n        this.inorderTraversal(function (k, v) {\r\n            fn(k, v);\r\n            return false;\r\n        });\r\n    };\r\n    // Traverses the map in reverse key order and calls the specified action\r\n    // function for each key/value pair. If action returns true, traversal is\r\n    // aborted.\r\n    // Returns the first truthy value returned by action, or the last falsey\r\n    // value returned by action.\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root.reverseTraversal(action);\r\n    };\r\n    // Returns an iterator over the SortedMap.\r\n    SortedMap.prototype.getIterator = function () {\r\n        return new SortedMapIterator(this.root, null, this.comparator, false);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key) {\r\n        return new SortedMapIterator(this.root, key, this.comparator, false);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function () {\r\n        return new SortedMapIterator(this.root, null, this.comparator, true);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key) {\r\n        return new SortedMapIterator(this.root, key, this.comparator, true);\r\n    };\r\n    return SortedMap;\r\n}()); // end SortedMap\r\n// An iterator over an LLRBNode.\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    function SortedMapIterator(node, startKey, comparator, isReverse) {\r\n        this.isReverse = isReverse;\r\n        this.nodeStack = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack,\r\n                // but stop iterating;\r\n                this.nodeStack.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move\r\n                // to the next one\r\n                this.nodeStack.push(node);\r\n                if (this.isReverse) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        assert(this.nodeStack.length > 0, 'getNext() called on iterator when hasNext() is false.');\r\n        var node = this.nodeStack.pop();\r\n        var result = { key: node.key, value: node.value };\r\n        if (this.isReverse) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack.length === 0)\r\n            return null;\r\n        var node = this.nodeStack[this.nodeStack.length - 1];\r\n        return { key: node.key, value: node.value };\r\n    };\r\n    return SortedMapIterator;\r\n}()); // end SortedMapIterator\r\n// Represents a node in a Left-leaning Red-Black tree.\r\nvar LLRBNode = /** @class */ (function () {\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left = left != null ? left : LLRBNode.EMPTY;\r\n        this.right = right != null ? right : LLRBNode.EMPTY;\r\n        this.size = this.left.size + 1 + this.right.size;\r\n    }\r\n    // Returns a copy of the current node, optionally replacing pieces of it.\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    // Traverses the tree in key order and calls the specified action function\r\n    // for each node. If action returns true, traversal is aborted.\r\n    // Returns the first truthy value returned by action, or the last falsey\r\n    // value returned by action.\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    // Traverses the tree in reverse key order and calls the specified action\r\n    // function for each node. If action returns true, traversal is aborted.\r\n    // Returns the first truthy value returned by action, or the last falsey\r\n    // value returned by action.\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    // Returns the minimum node in the tree.\r\n    LLRBNode.prototype.min = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min();\r\n        }\r\n    };\r\n    // Returns the maximum key in the tree.\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min().key;\r\n    };\r\n    // Returns the maximum key in the tree.\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    // Returns new tree, with the key/value added.\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp();\r\n    };\r\n    LLRBNode.prototype.removeMin = function () {\r\n        if (this.left.isEmpty()) {\r\n            return LLRBNode.EMPTY;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed() && !n.left.left.isRed())\r\n            n = n.moveRedLeft();\r\n        n = n.copy(null, null, null, n.left.removeMin(), null);\r\n        return n.fixUp();\r\n    };\r\n    // Returns new tree, with the specified item removed.\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var smallest;\r\n        var n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed() && !n.left.left.isRed()) {\r\n                n = n.moveRedLeft();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed())\r\n                n = n.rotateRight();\r\n            if (!n.right.isEmpty() && !n.right.isRed() && !n.right.left.isRed()) {\r\n                n = n.moveRedRight();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return LLRBNode.EMPTY;\r\n                }\r\n                else {\r\n                    smallest = n.right.min();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp();\r\n    };\r\n    LLRBNode.prototype.isRed = function () {\r\n        return this.color;\r\n    };\r\n    // Returns new tree after performing any needed rotations.\r\n    LLRBNode.prototype.fixUp = function () {\r\n        var n = this;\r\n        if (n.right.isRed() && !n.left.isRed())\r\n            n = n.rotateLeft();\r\n        if (n.left.isRed() && n.left.left.isRed())\r\n            n = n.rotateRight();\r\n        if (n.left.isRed() && n.right.isRed())\r\n            n = n.colorFlip();\r\n        return n;\r\n    };\r\n    LLRBNode.prototype.moveRedLeft = function () {\r\n        var n = this.colorFlip();\r\n        if (n.right.left.isRed()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight());\r\n            n = n.rotateLeft();\r\n            n = n.colorFlip();\r\n        }\r\n        return n;\r\n    };\r\n    LLRBNode.prototype.moveRedRight = function () {\r\n        var n = this.colorFlip();\r\n        if (n.left.left.isRed()) {\r\n            n = n.rotateRight();\r\n            n = n.colorFlip();\r\n        }\r\n        return n;\r\n    };\r\n    LLRBNode.prototype.rotateLeft = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    LLRBNode.prototype.rotateRight = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    LLRBNode.prototype.colorFlip = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    // For testing.\r\n    LLRBNode.prototype.checkMaxDepth = function () {\r\n        var blackDepth = this.check();\r\n        if (Math.pow(2.0, blackDepth) <= this.size + 1) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\r\n    // leaves is equal on both sides.  This function verifies that or asserts.\r\n    LLRBNode.prototype.check = function () {\r\n        if (this.isRed() && this.left.isRed()) {\r\n            throw fail('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed()) {\r\n            throw fail('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check();\r\n        if (blackDepth !== this.right.check()) {\r\n            throw fail('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed() ? 0 : 1);\r\n        }\r\n    };\r\n    // tslint:disable-next-line:no-any Empty node is shared between all LLRB trees.\r\n    LLRBNode.EMPTY = null;\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}()); // end LLRBNode\r\n// Represents an empty node (a leaf node in the Red-Black Tree).\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n        this.size = 0;\r\n    }\r\n    // Returns a copy of the current node.\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    // Returns a copy of the tree, with the specified key/value added.\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value);\r\n    };\r\n    // Returns a copy of the tree, with the specified key removed.\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.isRed = function () {\r\n        return false;\r\n    };\r\n    // For testing.\r\n    LLRBEmptyNode.prototype.checkMaxDepth = function () {\r\n        return true;\r\n    };\r\n    LLRBEmptyNode.prototype.check = function () {\r\n        return 0;\r\n    };\r\n    return LLRBEmptyNode;\r\n}()); // end LLRBEmptyNode\r\nLLRBNode.EMPTY = new LLRBEmptyNode();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TypeOrder;\r\n(function (TypeOrder) {\r\n    // This order is defined by the backend.\r\n    TypeOrder[TypeOrder[\"NullValue\"] = 0] = \"NullValue\";\r\n    TypeOrder[TypeOrder[\"BooleanValue\"] = 1] = \"BooleanValue\";\r\n    TypeOrder[TypeOrder[\"NumberValue\"] = 2] = \"NumberValue\";\r\n    TypeOrder[TypeOrder[\"TimestampValue\"] = 3] = \"TimestampValue\";\r\n    TypeOrder[TypeOrder[\"StringValue\"] = 4] = \"StringValue\";\r\n    TypeOrder[TypeOrder[\"BlobValue\"] = 5] = \"BlobValue\";\r\n    TypeOrder[TypeOrder[\"RefValue\"] = 6] = \"RefValue\";\r\n    TypeOrder[TypeOrder[\"GeoPointValue\"] = 7] = \"GeoPointValue\";\r\n    TypeOrder[TypeOrder[\"ArrayValue\"] = 8] = \"ArrayValue\";\r\n    TypeOrder[TypeOrder[\"ObjectValue\"] = 9] = \"ObjectValue\";\r\n})(TypeOrder || (TypeOrder = {}));\r\n/** Defines the return value for pending server timestamps. */\r\nvar ServerTimestampBehavior;\r\n(function (ServerTimestampBehavior) {\r\n    ServerTimestampBehavior[ServerTimestampBehavior[\"Default\"] = 0] = \"Default\";\r\n    ServerTimestampBehavior[ServerTimestampBehavior[\"Estimate\"] = 1] = \"Estimate\";\r\n    ServerTimestampBehavior[ServerTimestampBehavior[\"Previous\"] = 2] = \"Previous\";\r\n})(ServerTimestampBehavior || (ServerTimestampBehavior = {}));\r\n/** Holds properties that define field value deserialization options. */\r\nvar FieldValueOptions = /** @class */ (function () {\r\n    function FieldValueOptions(serverTimestampBehavior, timestampsInSnapshots) {\r\n        this.serverTimestampBehavior = serverTimestampBehavior;\r\n        this.timestampsInSnapshots = timestampsInSnapshots;\r\n    }\r\n    FieldValueOptions.fromSnapshotOptions = function (options, timestampsInSnapshots) {\r\n        switch (options.serverTimestamps) {\r\n            case 'estimate':\r\n                return new FieldValueOptions(ServerTimestampBehavior.Estimate, timestampsInSnapshots);\r\n            case 'previous':\r\n                return new FieldValueOptions(ServerTimestampBehavior.Previous, timestampsInSnapshots);\r\n            case 'none': // Fall-through intended.\r\n            case undefined:\r\n                return new FieldValueOptions(ServerTimestampBehavior.Default, timestampsInSnapshots);\r\n            default:\r\n                return fail('fromSnapshotOptions() called with invalid options.');\r\n        }\r\n    };\r\n    return FieldValueOptions;\r\n}());\r\n/**\r\n * A field value represents a datatype as stored by Firestore.\r\n */\r\nvar FieldValue = /** @class */ (function () {\r\n    function FieldValue() {\r\n    }\r\n    FieldValue.prototype.toString = function () {\r\n        var val = this.value();\r\n        return val === null ? 'null' : val.toString();\r\n    };\r\n    FieldValue.prototype.defaultCompareTo = function (other) {\r\n        assert(this.typeOrder !== other.typeOrder, 'Default compareTo should not be used for values of same type.');\r\n        var cmp = primitiveComparator(this.typeOrder, other.typeOrder);\r\n        return cmp;\r\n    };\r\n    return FieldValue;\r\n}());\r\nvar NullValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NullValue, _super);\r\n    function NullValue() {\r\n        var _this = _super.call(this) || this;\r\n        _this.typeOrder = TypeOrder.NullValue;\r\n        // internalValue is unused but we add it to work around\r\n        // https://github.com/Microsoft/TypeScript/issues/15585\r\n        _this.internalValue = null;\r\n        return _this;\r\n    }\r\n    NullValue.prototype.value = function (options) {\r\n        return null;\r\n    };\r\n    NullValue.prototype.isEqual = function (other) {\r\n        return other instanceof NullValue;\r\n    };\r\n    NullValue.prototype.compareTo = function (other) {\r\n        if (other instanceof NullValue) {\r\n            return 0;\r\n        }\r\n        return this.defaultCompareTo(other);\r\n    };\r\n    NullValue.INSTANCE = new NullValue();\r\n    return NullValue;\r\n}(FieldValue));\r\nvar BooleanValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BooleanValue, _super);\r\n    function BooleanValue(internalValue) {\r\n        var _this = _super.call(this) || this;\r\n        _this.internalValue = internalValue;\r\n        _this.typeOrder = TypeOrder.BooleanValue;\r\n        return _this;\r\n    }\r\n    BooleanValue.prototype.value = function (options) {\r\n        return this.internalValue;\r\n    };\r\n    BooleanValue.prototype.isEqual = function (other) {\r\n        return (other instanceof BooleanValue &&\r\n            this.internalValue === other.internalValue);\r\n    };\r\n    BooleanValue.prototype.compareTo = function (other) {\r\n        if (other instanceof BooleanValue) {\r\n            return primitiveComparator(this, other);\r\n        }\r\n        return this.defaultCompareTo(other);\r\n    };\r\n    BooleanValue.of = function (value) {\r\n        return value ? BooleanValue.TRUE : BooleanValue.FALSE;\r\n    };\r\n    BooleanValue.TRUE = new BooleanValue(true);\r\n    BooleanValue.FALSE = new BooleanValue(false);\r\n    return BooleanValue;\r\n}(FieldValue));\r\n/** Base class for IntegerValue and DoubleValue. */\r\nvar NumberValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NumberValue, _super);\r\n    function NumberValue(internalValue) {\r\n        var _this = _super.call(this) || this;\r\n        _this.internalValue = internalValue;\r\n        _this.typeOrder = TypeOrder.NumberValue;\r\n        return _this;\r\n    }\r\n    NumberValue.prototype.value = function (options) {\r\n        return this.internalValue;\r\n    };\r\n    NumberValue.prototype.compareTo = function (other) {\r\n        if (other instanceof NumberValue) {\r\n            return numericComparator(this.internalValue, other.internalValue);\r\n        }\r\n        return this.defaultCompareTo(other);\r\n    };\r\n    return NumberValue;\r\n}(FieldValue));\r\n/** Utility function to compare doubles (using Firestore semantics for NaN). */\r\nfunction numericComparator(left, right) {\r\n    if (left < right) {\r\n        return -1;\r\n    }\r\n    else if (left > right) {\r\n        return 1;\r\n    }\r\n    else if (left === right) {\r\n        return 0;\r\n    }\r\n    else {\r\n        // one or both are NaN.\r\n        if (isNaN(left)) {\r\n            return isNaN(right) ? 0 : -1;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Utility function to check numbers for equality using Firestore semantics\r\n * (NaN === NaN, -0.0 !== 0.0).\r\n */\r\nfunction numericEquals(left, right) {\r\n    // Implemented based on Object.is() polyfill from\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\n    if (left === right) {\r\n        // +0 != -0\r\n        return left !== 0 || 1 / left === 1 / right;\r\n    }\r\n    else {\r\n        // NaN == NaN\r\n        return left !== left && right !== right;\r\n    }\r\n}\r\nvar IntegerValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(IntegerValue, _super);\r\n    function IntegerValue(internalValue) {\r\n        return _super.call(this, internalValue) || this;\r\n    }\r\n    IntegerValue.prototype.isEqual = function (other) {\r\n        // NOTE: DoubleValue and IntegerValue instances may compareTo() the same,\r\n        // but that doesn't make them equal via isEqual().\r\n        if (other instanceof IntegerValue) {\r\n            return numericEquals(this.internalValue, other.internalValue);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return IntegerValue;\r\n}(NumberValue));\r\nvar DoubleValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DoubleValue, _super);\r\n    function DoubleValue(internalValue) {\r\n        var _this = _super.call(this, internalValue) || this;\r\n        _this.internalValue = internalValue;\r\n        return _this;\r\n    }\r\n    DoubleValue.prototype.isEqual = function (other) {\r\n        // NOTE: DoubleValue and IntegerValue instances may compareTo() the same,\r\n        // but that doesn't make them equal via isEqual().\r\n        if (other instanceof DoubleValue) {\r\n            return numericEquals(this.internalValue, other.internalValue);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    DoubleValue.NAN = new DoubleValue(NaN);\r\n    DoubleValue.POSITIVE_INFINITY = new DoubleValue(Infinity);\r\n    DoubleValue.NEGATIVE_INFINITY = new DoubleValue(-Infinity);\r\n    return DoubleValue;\r\n}(NumberValue));\r\n// TODO(b/37267885): Add truncation support\r\nvar StringValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(StringValue, _super);\r\n    function StringValue(internalValue) {\r\n        var _this = _super.call(this) || this;\r\n        _this.internalValue = internalValue;\r\n        _this.typeOrder = TypeOrder.StringValue;\r\n        return _this;\r\n    }\r\n    StringValue.prototype.value = function (options) {\r\n        return this.internalValue;\r\n    };\r\n    StringValue.prototype.isEqual = function (other) {\r\n        return (other instanceof StringValue && this.internalValue === other.internalValue);\r\n    };\r\n    StringValue.prototype.compareTo = function (other) {\r\n        if (other instanceof StringValue) {\r\n            return primitiveComparator(this.internalValue, other.internalValue);\r\n        }\r\n        return this.defaultCompareTo(other);\r\n    };\r\n    return StringValue;\r\n}(FieldValue));\r\nvar TimestampValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimestampValue, _super);\r\n    function TimestampValue(internalValue) {\r\n        var _this = _super.call(this) || this;\r\n        _this.internalValue = internalValue;\r\n        _this.typeOrder = TypeOrder.TimestampValue;\r\n        return _this;\r\n    }\r\n    TimestampValue.prototype.value = function (options) {\r\n        if (options && options.timestampsInSnapshots) {\r\n            return this.internalValue;\r\n        }\r\n        else {\r\n            return this.internalValue.toDate();\r\n        }\r\n    };\r\n    TimestampValue.prototype.isEqual = function (other) {\r\n        return (other instanceof TimestampValue &&\r\n            this.internalValue.isEqual(other.internalValue));\r\n    };\r\n    TimestampValue.prototype.compareTo = function (other) {\r\n        if (other instanceof TimestampValue) {\r\n            return this.internalValue._compareTo(other.internalValue);\r\n        }\r\n        else if (other instanceof ServerTimestampValue) {\r\n            // Concrete timestamps come before server timestamps.\r\n            return -1;\r\n        }\r\n        else {\r\n            return this.defaultCompareTo(other);\r\n        }\r\n    };\r\n    return TimestampValue;\r\n}(FieldValue));\r\n/**\r\n * Represents a locally-applied ServerTimestamp.\r\n *\r\n * Notes:\r\n * - ServerTimestampValue instances are created as the result of applying a\r\n *   TransformMutation (see TransformMutation.applyTo()). They can only exist in\r\n *   the local view of a document. Therefore they do not need to be parsed or\r\n *   serialized.\r\n * - When evaluated locally (e.g. for snapshot.data()), they by default\r\n *   evaluate to `null`. This behavior can be configured by passing custom\r\n *   FieldValueOptions to value().\r\n * - With respect to other ServerTimestampValues, they sort by their\r\n *   localWriteTime.\r\n */\r\nvar ServerTimestampValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ServerTimestampValue, _super);\r\n    function ServerTimestampValue(localWriteTime, previousValue) {\r\n        var _this = _super.call(this) || this;\r\n        _this.localWriteTime = localWriteTime;\r\n        _this.previousValue = previousValue;\r\n        _this.typeOrder = TypeOrder.TimestampValue;\r\n        return _this;\r\n    }\r\n    ServerTimestampValue.prototype.value = function (options) {\r\n        if (options &&\r\n            options.serverTimestampBehavior === ServerTimestampBehavior.Estimate) {\r\n            return new TimestampValue(this.localWriteTime).value(options);\r\n        }\r\n        else if (options &&\r\n            options.serverTimestampBehavior === ServerTimestampBehavior.Previous) {\r\n            return this.previousValue ? this.previousValue.value(options) : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ServerTimestampValue.prototype.isEqual = function (other) {\r\n        return (other instanceof ServerTimestampValue &&\r\n            this.localWriteTime.isEqual(other.localWriteTime));\r\n    };\r\n    ServerTimestampValue.prototype.compareTo = function (other) {\r\n        if (other instanceof ServerTimestampValue) {\r\n            return this.localWriteTime._compareTo(other.localWriteTime);\r\n        }\r\n        else if (other instanceof TimestampValue) {\r\n            // Server timestamps come after all concrete timestamps.\r\n            return 1;\r\n        }\r\n        else {\r\n            return this.defaultCompareTo(other);\r\n        }\r\n    };\r\n    ServerTimestampValue.prototype.toString = function () {\r\n        return '<ServerTimestamp localTime=' + this.localWriteTime.toString() + '>';\r\n    };\r\n    return ServerTimestampValue;\r\n}(FieldValue));\r\nvar BlobValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlobValue, _super);\r\n    function BlobValue(internalValue) {\r\n        var _this = _super.call(this) || this;\r\n        _this.internalValue = internalValue;\r\n        _this.typeOrder = TypeOrder.BlobValue;\r\n        return _this;\r\n    }\r\n    BlobValue.prototype.value = function (options) {\r\n        return this.internalValue;\r\n    };\r\n    BlobValue.prototype.isEqual = function (other) {\r\n        return (other instanceof BlobValue &&\r\n            this.internalValue.isEqual(other.internalValue));\r\n    };\r\n    BlobValue.prototype.compareTo = function (other) {\r\n        if (other instanceof BlobValue) {\r\n            return this.internalValue._compareTo(other.internalValue);\r\n        }\r\n        return this.defaultCompareTo(other);\r\n    };\r\n    return BlobValue;\r\n}(FieldValue));\r\nvar RefValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RefValue, _super);\r\n    function RefValue(databaseId, key) {\r\n        var _this = _super.call(this) || this;\r\n        _this.databaseId = databaseId;\r\n        _this.key = key;\r\n        _this.typeOrder = TypeOrder.RefValue;\r\n        return _this;\r\n    }\r\n    RefValue.prototype.value = function (options) {\r\n        return this.key;\r\n    };\r\n    RefValue.prototype.isEqual = function (other) {\r\n        if (other instanceof RefValue) {\r\n            return (this.key.isEqual(other.key) && this.databaseId.isEqual(other.databaseId));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    RefValue.prototype.compareTo = function (other) {\r\n        if (other instanceof RefValue) {\r\n            var cmp = this.databaseId.compareTo(other.databaseId);\r\n            return cmp !== 0 ? cmp : DocumentKey.comparator(this.key, other.key);\r\n        }\r\n        return this.defaultCompareTo(other);\r\n    };\r\n    return RefValue;\r\n}(FieldValue));\r\nvar GeoPointValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GeoPointValue, _super);\r\n    function GeoPointValue(internalValue) {\r\n        var _this = _super.call(this) || this;\r\n        _this.internalValue = internalValue;\r\n        _this.typeOrder = TypeOrder.GeoPointValue;\r\n        return _this;\r\n    }\r\n    GeoPointValue.prototype.value = function (options) {\r\n        return this.internalValue;\r\n    };\r\n    GeoPointValue.prototype.isEqual = function (other) {\r\n        return (other instanceof GeoPointValue &&\r\n            this.internalValue.isEqual(other.internalValue));\r\n    };\r\n    GeoPointValue.prototype.compareTo = function (other) {\r\n        if (other instanceof GeoPointValue) {\r\n            return this.internalValue._compareTo(other.internalValue);\r\n        }\r\n        return this.defaultCompareTo(other);\r\n    };\r\n    return GeoPointValue;\r\n}(FieldValue));\r\nvar ObjectValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ObjectValue, _super);\r\n    function ObjectValue(internalValue) {\r\n        var _this = _super.call(this) || this;\r\n        _this.internalValue = internalValue;\r\n        _this.typeOrder = TypeOrder.ObjectValue;\r\n        return _this;\r\n    }\r\n    ObjectValue.prototype.value = function (options) {\r\n        var result = {};\r\n        this.internalValue.inorderTraversal(function (key, val) {\r\n            result[key] = val.value(options);\r\n        });\r\n        return result;\r\n    };\r\n    ObjectValue.prototype.forEach = function (action) {\r\n        this.internalValue.inorderTraversal(action);\r\n    };\r\n    ObjectValue.prototype.isEqual = function (other) {\r\n        if (other instanceof ObjectValue) {\r\n            var it1 = this.internalValue.getIterator();\r\n            var it2 = other.internalValue.getIterator();\r\n            while (it1.hasNext() && it2.hasNext()) {\r\n                var next1 = it1.getNext();\r\n                var next2 = it2.getNext();\r\n                if (next1.key !== next2.key || !next1.value.isEqual(next2.value)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return !it1.hasNext() && !it2.hasNext();\r\n        }\r\n        return false;\r\n    };\r\n    ObjectValue.prototype.compareTo = function (other) {\r\n        if (other instanceof ObjectValue) {\r\n            var it1 = this.internalValue.getIterator();\r\n            var it2 = other.internalValue.getIterator();\r\n            while (it1.hasNext() && it2.hasNext()) {\r\n                var next1 = it1.getNext();\r\n                var next2 = it2.getNext();\r\n                var cmp = primitiveComparator(next1.key, next2.key) ||\r\n                    next1.value.compareTo(next2.value);\r\n                if (cmp) {\r\n                    return cmp;\r\n                }\r\n            }\r\n            // Only equal if both iterators are exhausted\r\n            return primitiveComparator(it1.hasNext(), it2.hasNext());\r\n        }\r\n        else {\r\n            return this.defaultCompareTo(other);\r\n        }\r\n    };\r\n    ObjectValue.prototype.set = function (path, to) {\r\n        assert(!path.isEmpty(), 'Cannot set field for empty path on ObjectValue');\r\n        if (path.length === 1) {\r\n            return this.setChild(path.firstSegment(), to);\r\n        }\r\n        else {\r\n            var child = this.child(path.firstSegment());\r\n            if (!(child instanceof ObjectValue)) {\r\n                child = ObjectValue.EMPTY;\r\n            }\r\n            var newChild = child.set(path.popFirst(), to);\r\n            return this.setChild(path.firstSegment(), newChild);\r\n        }\r\n    };\r\n    ObjectValue.prototype.delete = function (path) {\r\n        assert(!path.isEmpty(), 'Cannot delete field for empty path on ObjectValue');\r\n        if (path.length === 1) {\r\n            return new ObjectValue(this.internalValue.remove(path.firstSegment()));\r\n        }\r\n        else {\r\n            // nested field\r\n            var child = this.child(path.firstSegment());\r\n            if (child instanceof ObjectValue) {\r\n                var newChild = child.delete(path.popFirst());\r\n                return new ObjectValue(this.internalValue.insert(path.firstSegment(), newChild));\r\n            }\r\n            else {\r\n                // Don't actually change a primitive value to an object for a delete\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    ObjectValue.prototype.contains = function (path) {\r\n        return this.field(path) !== undefined;\r\n    };\r\n    ObjectValue.prototype.field = function (path) {\r\n        assert(!path.isEmpty(), \"Can't get field of empty path\");\r\n        var field = this;\r\n        path.forEach(function (pathSegment) {\r\n            if (field instanceof ObjectValue) {\r\n                field = field.internalValue.get(pathSegment) || undefined;\r\n            }\r\n            else {\r\n                field = undefined;\r\n            }\r\n        });\r\n        return field;\r\n    };\r\n    ObjectValue.prototype.toString = function () {\r\n        return JSON.stringify(this.value());\r\n    };\r\n    ObjectValue.prototype.child = function (childName) {\r\n        return this.internalValue.get(childName) || undefined;\r\n    };\r\n    ObjectValue.prototype.setChild = function (childName, value) {\r\n        return new ObjectValue(this.internalValue.insert(childName, value));\r\n    };\r\n    ObjectValue.EMPTY = new ObjectValue(new SortedMap(primitiveComparator));\r\n    return ObjectValue;\r\n}(FieldValue));\r\nvar ArrayValue = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ArrayValue, _super);\r\n    function ArrayValue(internalValue) {\r\n        var _this = _super.call(this) || this;\r\n        _this.internalValue = internalValue;\r\n        _this.typeOrder = TypeOrder.ArrayValue;\r\n        return _this;\r\n    }\r\n    ArrayValue.prototype.value = function (options) {\r\n        return this.internalValue.map(function (v) { return v.value(options); });\r\n    };\r\n    ArrayValue.prototype.forEach = function (action) {\r\n        this.internalValue.forEach(action);\r\n    };\r\n    ArrayValue.prototype.isEqual = function (other) {\r\n        if (other instanceof ArrayValue) {\r\n            if (this.internalValue.length !== other.internalValue.length) {\r\n                return false;\r\n            }\r\n            for (var i = 0; i < this.internalValue.length; i++) {\r\n                if (!this.internalValue[i].isEqual(other.internalValue[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ArrayValue.prototype.compareTo = function (other) {\r\n        if (other instanceof ArrayValue) {\r\n            var minLength = Math.min(this.internalValue.length, other.internalValue.length);\r\n            for (var i = 0; i < minLength; i++) {\r\n                var cmp = this.internalValue[i].compareTo(other.internalValue[i]);\r\n                if (cmp) {\r\n                    return cmp;\r\n                }\r\n            }\r\n            return primitiveComparator(this.internalValue.length, other.internalValue.length);\r\n        }\r\n        else {\r\n            return this.defaultCompareTo(other);\r\n        }\r\n    };\r\n    ArrayValue.prototype.toString = function () {\r\n        return JSON.stringify(this.value());\r\n    };\r\n    return ArrayValue;\r\n}(FieldValue));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Untyped Number alias we can use to check for ES6 methods / properties.\r\n// tslint:disable-next-line:no-any variable-name\r\nvar NumberAsAny = Number;\r\n/**\r\n * Minimum safe integer in Javascript because of floating point precision.\r\n * Added to not rely on ES6 features.\r\n */\r\nvar MIN_SAFE_INTEGER = NumberAsAny.MIN_SAFE_INTEGER || -(Math.pow(2, 53) - 1);\r\n/**\r\n * Maximum safe integer in Javascript because of floating point precision.\r\n * Added to not rely on ES6 features.\r\n */\r\nvar MAX_SAFE_INTEGER = NumberAsAny.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\r\n/**\r\n * Returns whether an number is an integer, uses native implementation if\r\n * available.\r\n * Added to not rely on ES6 features.\r\n * @param value The value to test for being an integer\r\n */\r\nvar isInteger = NumberAsAny.isInteger ||\r\n    (function (value) {\r\n        return typeof value === 'number' &&\r\n            isFinite(value) &&\r\n            Math.floor(value) === value;\r\n    });\r\n/**\r\n * Returns whether a variable is either undefined or null.\r\n */\r\nfunction isNullOrUndefined(value) {\r\n    return value === null || value === undefined;\r\n}\r\n/**\r\n * Returns whether a value is an integer and in the safe integer range\r\n * @param value The value to test for being an integer and in the safe range\r\n */\r\nfunction isSafeInteger(value) {\r\n    return (isInteger(value) &&\r\n        value <= MAX_SAFE_INTEGER &&\r\n        value >= MIN_SAFE_INTEGER);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(path, explicitOrderBy, filters, limit, startAt, endAt) {\r\n        if (explicitOrderBy === void 0) { explicitOrderBy = []; }\r\n        if (filters === void 0) { filters = []; }\r\n        if (limit === void 0) { limit = null; }\r\n        if (startAt === void 0) { startAt = null; }\r\n        if (endAt === void 0) { endAt = null; }\r\n        this.path = path;\r\n        this.explicitOrderBy = explicitOrderBy;\r\n        this.filters = filters;\r\n        this.limit = limit;\r\n        this.startAt = startAt;\r\n        this.endAt = endAt;\r\n        this.memoizedCanonicalId = null;\r\n        this.memoizedOrderBy = null;\r\n        if (this.startAt) {\r\n            this.assertValidBound(this.startAt);\r\n        }\r\n        if (this.endAt) {\r\n            this.assertValidBound(this.endAt);\r\n        }\r\n    }\r\n    Query.atPath = function (path) {\r\n        return new Query(path);\r\n    };\r\n    Object.defineProperty(Query.prototype, \"orderBy\", {\r\n        get: function () {\r\n            if (this.memoizedOrderBy === null) {\r\n                var inequalityField = this.getInequalityFilterField();\r\n                var firstOrderByField = this.getFirstOrderByField();\r\n                if (inequalityField !== null && firstOrderByField === null) {\r\n                    // In order to implicitly add key ordering, we must also add the\r\n                    // inequality filter field for it to be a valid query.\r\n                    // Note that the default inequality field and key ordering is ascending.\r\n                    if (inequalityField.isKeyField()) {\r\n                        this.memoizedOrderBy = [KEY_ORDERING_ASC];\r\n                    }\r\n                    else {\r\n                        this.memoizedOrderBy = [\r\n                            new OrderBy(inequalityField),\r\n                            KEY_ORDERING_ASC\r\n                        ];\r\n                    }\r\n                }\r\n                else {\r\n                    assert(inequalityField === null ||\r\n                        (firstOrderByField !== null &&\r\n                            inequalityField.isEqual(firstOrderByField)), 'First orderBy should match inequality field.');\r\n                    this.memoizedOrderBy = [];\r\n                    var foundKeyOrdering = false;\r\n                    for (var _i = 0, _a = this.explicitOrderBy; _i < _a.length; _i++) {\r\n                        var orderBy = _a[_i];\r\n                        this.memoizedOrderBy.push(orderBy);\r\n                        if (orderBy.field.isKeyField()) {\r\n                            foundKeyOrdering = true;\r\n                        }\r\n                    }\r\n                    if (!foundKeyOrdering) {\r\n                        // The order of the implicit key ordering always matches the last\r\n                        // explicit order by\r\n                        var lastDirection = this.explicitOrderBy.length > 0\r\n                            ? this.explicitOrderBy[this.explicitOrderBy.length - 1].dir\r\n                            : Direction.ASCENDING;\r\n                        this.memoizedOrderBy.push(lastDirection === Direction.ASCENDING\r\n                            ? KEY_ORDERING_ASC\r\n                            : KEY_ORDERING_DESC);\r\n                    }\r\n                }\r\n            }\r\n            return this.memoizedOrderBy;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Query.prototype.addFilter = function (filter) {\r\n        assert(this.getInequalityFilterField() == null ||\r\n            !(filter instanceof RelationFilter) ||\r\n            !filter.isInequality() ||\r\n            filter.field.isEqual(this.getInequalityFilterField()), 'Query must only have one inequality field.');\r\n        assert(!DocumentKey.isDocumentKey(this.path), 'No filtering allowed for document query');\r\n        var newFilters = this.filters.concat([filter]);\r\n        return new Query(this.path, this.explicitOrderBy.slice(), newFilters, this.limit, this.startAt, this.endAt);\r\n    };\r\n    Query.prototype.addOrderBy = function (orderBy) {\r\n        assert(!DocumentKey.isDocumentKey(this.path), 'No ordering allowed for document query');\r\n        assert(!this.startAt && !this.endAt, 'Bounds must be set after orderBy');\r\n        // TODO(dimond): validate that orderBy does not list the same key twice.\r\n        var newOrderBy = this.explicitOrderBy.concat([orderBy]);\r\n        return new Query(this.path, newOrderBy, this.filters.slice(), this.limit, this.startAt, this.endAt);\r\n    };\r\n    Query.prototype.withLimit = function (limit) {\r\n        return new Query(this.path, this.explicitOrderBy.slice(), this.filters.slice(), limit, this.startAt, this.endAt);\r\n    };\r\n    Query.prototype.withStartAt = function (bound) {\r\n        return new Query(this.path, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, bound, this.endAt);\r\n    };\r\n    Query.prototype.withEndAt = function (bound) {\r\n        return new Query(this.path, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, this.startAt, bound);\r\n    };\r\n    // TODO(b/29183165): This is used to get a unique string from a query to, for\r\n    // example, use as a dictionary key, but the implementation is subject to\r\n    // collisions. Make it collision-free.\r\n    Query.prototype.canonicalId = function () {\r\n        if (this.memoizedCanonicalId === null) {\r\n            var canonicalId = this.path.canonicalString();\r\n            canonicalId += '|f:';\r\n            for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\r\n                var filter = _a[_i];\r\n                canonicalId += filter.canonicalId();\r\n                canonicalId += ',';\r\n            }\r\n            canonicalId += '|ob:';\r\n            // TODO(dimond): make this collision resistant\r\n            for (var _b = 0, _c = this.orderBy; _b < _c.length; _b++) {\r\n                var orderBy = _c[_b];\r\n                canonicalId += orderBy.canonicalId();\r\n                canonicalId += ',';\r\n            }\r\n            if (!isNullOrUndefined(this.limit)) {\r\n                canonicalId += '|l:';\r\n                canonicalId += this.limit;\r\n            }\r\n            if (this.startAt) {\r\n                canonicalId += '|lb:';\r\n                canonicalId += this.startAt.canonicalId();\r\n            }\r\n            if (this.endAt) {\r\n                canonicalId += '|ub:';\r\n                canonicalId += this.endAt.canonicalId();\r\n            }\r\n            this.memoizedCanonicalId = canonicalId;\r\n        }\r\n        return this.memoizedCanonicalId;\r\n    };\r\n    Query.prototype.toString = function () {\r\n        var str = 'Query(' + this.path.canonicalString();\r\n        if (this.filters.length > 0) {\r\n            str += \", filters: [\" + this.filters.join(', ') + \"]\";\r\n        }\r\n        if (!isNullOrUndefined(this.limit)) {\r\n            str += ', limit: ' + this.limit;\r\n        }\r\n        if (this.explicitOrderBy.length > 0) {\r\n            str += \", orderBy: [\" + this.explicitOrderBy.join(', ') + \"]\";\r\n        }\r\n        if (this.startAt) {\r\n            str += ', startAt: ' + this.startAt.canonicalId();\r\n        }\r\n        if (this.endAt) {\r\n            str += ', endAt: ' + this.endAt.canonicalId();\r\n        }\r\n        return str + ')';\r\n    };\r\n    Query.prototype.isEqual = function (other) {\r\n        if (this.limit !== other.limit) {\r\n            return false;\r\n        }\r\n        if (this.orderBy.length !== other.orderBy.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < this.orderBy.length; i++) {\r\n            if (!this.orderBy[i].isEqual(other.orderBy[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        if (this.filters.length !== other.filters.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < this.filters.length; i++) {\r\n            if (!this.filters[i].isEqual(other.filters[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        if (!this.path.isEqual(other.path)) {\r\n            return false;\r\n        }\r\n        if (this.startAt !== null\r\n            ? !this.startAt.isEqual(other.startAt)\r\n            : other.startAt !== null) {\r\n            return false;\r\n        }\r\n        return this.endAt !== null\r\n            ? this.endAt.isEqual(other.endAt)\r\n            : other.endAt === null;\r\n    };\r\n    Query.prototype.docComparator = function (d1, d2) {\r\n        var comparedOnKeyField = false;\r\n        for (var _i = 0, _a = this.orderBy; _i < _a.length; _i++) {\r\n            var orderBy = _a[_i];\r\n            var comp = orderBy.compare(d1, d2);\r\n            if (comp !== 0)\r\n                return comp;\r\n            comparedOnKeyField = comparedOnKeyField || orderBy.field.isKeyField();\r\n        }\r\n        // Assert that we actually compared by key\r\n        assert(comparedOnKeyField, \"orderBy used that doesn't compare on key field\");\r\n        return 0;\r\n    };\r\n    Query.prototype.matches = function (doc) {\r\n        return (this.matchesAncestor(doc) &&\r\n            this.matchesOrderBy(doc) &&\r\n            this.matchesFilters(doc) &&\r\n            this.matchesBounds(doc));\r\n    };\r\n    Query.prototype.hasLimit = function () {\r\n        return !isNullOrUndefined(this.limit);\r\n    };\r\n    Query.prototype.getFirstOrderByField = function () {\r\n        return this.explicitOrderBy.length > 0\r\n            ? this.explicitOrderBy[0].field\r\n            : null;\r\n    };\r\n    Query.prototype.getInequalityFilterField = function () {\r\n        for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\r\n            var filter = _a[_i];\r\n            if (filter instanceof RelationFilter && filter.isInequality()) {\r\n                return filter.field;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Query.prototype.hasArrayContainsFilter = function () {\r\n        return (this.filters.find(function (filter) {\r\n            return filter instanceof RelationFilter &&\r\n                filter.op === RelationOp.ARRAY_CONTAINS;\r\n        }) !== undefined);\r\n    };\r\n    Query.prototype.isDocumentQuery = function () {\r\n        return DocumentKey.isDocumentKey(this.path) && this.filters.length === 0;\r\n    };\r\n    Query.prototype.matchesAncestor = function (doc) {\r\n        var docPath = doc.key.path;\r\n        if (DocumentKey.isDocumentKey(this.path)) {\r\n            // exact match for document queries\r\n            return this.path.isEqual(docPath);\r\n        }\r\n        else {\r\n            // shallow ancestor queries by default\r\n            return (this.path.isPrefixOf(docPath) && this.path.length === docPath.length - 1);\r\n        }\r\n    };\r\n    /**\r\n     * A document must have a value for every ordering clause in order to show up\r\n     * in the results.\r\n     */\r\n    Query.prototype.matchesOrderBy = function (doc) {\r\n        for (var _i = 0, _a = this.explicitOrderBy; _i < _a.length; _i++) {\r\n            var orderBy = _a[_i];\r\n            // order by key always matches\r\n            if (!orderBy.field.isKeyField() &&\r\n                doc.field(orderBy.field) === undefined) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Query.prototype.matchesFilters = function (doc) {\r\n        for (var _i = 0, _a = this.filters; _i < _a.length; _i++) {\r\n            var filter = _a[_i];\r\n            if (!filter.matches(doc)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Makes sure a document is within the bounds, if provided.\r\n     */\r\n    Query.prototype.matchesBounds = function (doc) {\r\n        if (this.startAt && !this.startAt.sortsBeforeDocument(this.orderBy, doc)) {\r\n            return false;\r\n        }\r\n        if (this.endAt && this.endAt.sortsBeforeDocument(this.orderBy, doc)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    Query.prototype.assertValidBound = function (bound) {\r\n        assert(bound.position.length <= this.orderBy.length, 'Bound is longer than orderBy');\r\n    };\r\n    return Query;\r\n}());\r\nvar RelationOp = /** @class */ (function () {\r\n    function RelationOp(name) {\r\n        this.name = name;\r\n    }\r\n    RelationOp.fromString = function (op) {\r\n        switch (op) {\r\n            case '<':\r\n                return RelationOp.LESS_THAN;\r\n            case '<=':\r\n                return RelationOp.LESS_THAN_OR_EQUAL;\r\n            case '==':\r\n                return RelationOp.EQUAL;\r\n            case '>=':\r\n                return RelationOp.GREATER_THAN_OR_EQUAL;\r\n            case '>':\r\n                return RelationOp.GREATER_THAN;\r\n            case 'array-contains':\r\n                return RelationOp.ARRAY_CONTAINS;\r\n            default:\r\n                return fail('Unknown relation: ' + op);\r\n        }\r\n    };\r\n    RelationOp.prototype.toString = function () {\r\n        return this.name;\r\n    };\r\n    RelationOp.prototype.isEqual = function (other) {\r\n        return this.name === other.name;\r\n    };\r\n    RelationOp.LESS_THAN = new RelationOp('<');\r\n    RelationOp.LESS_THAN_OR_EQUAL = new RelationOp('<=');\r\n    RelationOp.EQUAL = new RelationOp('==');\r\n    RelationOp.GREATER_THAN = new RelationOp('>');\r\n    RelationOp.GREATER_THAN_OR_EQUAL = new RelationOp('>=');\r\n    RelationOp.ARRAY_CONTAINS = new RelationOp('array-contains');\r\n    return RelationOp;\r\n}());\r\nvar RelationFilter = /** @class */ (function () {\r\n    function RelationFilter(field, op, value) {\r\n        this.field = field;\r\n        this.op = op;\r\n        this.value = value;\r\n    }\r\n    RelationFilter.prototype.matches = function (doc) {\r\n        if (this.field.isKeyField()) {\r\n            assert(this.value instanceof RefValue, 'Comparing on key, but filter value not a RefValue');\r\n            assert(this.op !== RelationOp.ARRAY_CONTAINS, \"array-contains queries don't make sense on document keys.\");\r\n            var refValue = this.value;\r\n            var comparison = DocumentKey.comparator(doc.key, refValue.key);\r\n            return this.matchesComparison(comparison);\r\n        }\r\n        else {\r\n            var val = doc.field(this.field);\r\n            return val !== undefined && this.matchesValue(val);\r\n        }\r\n    };\r\n    RelationFilter.prototype.matchesValue = function (value) {\r\n        var _this = this;\r\n        if (this.op === RelationOp.ARRAY_CONTAINS) {\r\n            return (value instanceof ArrayValue &&\r\n                value.internalValue.find(function (element) { return element.isEqual(_this.value); }) !==\r\n                    undefined);\r\n        }\r\n        else {\r\n            // Only compare types with matching backend order (such as double and int).\r\n            return (this.value.typeOrder === value.typeOrder &&\r\n                this.matchesComparison(value.compareTo(this.value)));\r\n        }\r\n    };\r\n    RelationFilter.prototype.matchesComparison = function (comparison) {\r\n        switch (this.op) {\r\n            case RelationOp.LESS_THAN:\r\n                return comparison < 0;\r\n            case RelationOp.LESS_THAN_OR_EQUAL:\r\n                return comparison <= 0;\r\n            case RelationOp.EQUAL:\r\n                return comparison === 0;\r\n            case RelationOp.GREATER_THAN:\r\n                return comparison > 0;\r\n            case RelationOp.GREATER_THAN_OR_EQUAL:\r\n                return comparison >= 0;\r\n            default:\r\n                return fail('Unknown relation op' + this.op);\r\n        }\r\n    };\r\n    RelationFilter.prototype.isInequality = function () {\r\n        return (this.op !== RelationOp.EQUAL && this.op !== RelationOp.ARRAY_CONTAINS);\r\n    };\r\n    RelationFilter.prototype.canonicalId = function () {\r\n        // TODO(b/29183165): Technically, this won't be unique if two values have\r\n        // the same description, such as the int 3 and the string \"3\". So we should\r\n        // add the types in here somehow, too.\r\n        return (this.field.canonicalString() + this.op.toString() + this.value.toString());\r\n    };\r\n    RelationFilter.prototype.isEqual = function (other) {\r\n        if (other instanceof RelationFilter) {\r\n            return (this.op.isEqual(other.op) &&\r\n                this.field.isEqual(other.field) &&\r\n                this.value.isEqual(other.value));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    RelationFilter.prototype.toString = function () {\r\n        return this.field.canonicalString() + \" \" + this.op + \" \" + this.value.value();\r\n    };\r\n    return RelationFilter;\r\n}());\r\n/**\r\n * Filter that matches 'null' values.\r\n */\r\nvar NullFilter = /** @class */ (function () {\r\n    function NullFilter(field) {\r\n        this.field = field;\r\n    }\r\n    NullFilter.prototype.matches = function (doc) {\r\n        var val = doc.field(this.field);\r\n        return val !== undefined && val.value() === null;\r\n    };\r\n    NullFilter.prototype.canonicalId = function () {\r\n        return this.field.canonicalString() + ' IS null';\r\n    };\r\n    NullFilter.prototype.toString = function () {\r\n        return this.field.canonicalString() + \" IS null\";\r\n    };\r\n    NullFilter.prototype.isEqual = function (other) {\r\n        if (other instanceof NullFilter) {\r\n            return this.field.isEqual(other.field);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return NullFilter;\r\n}());\r\n/**\r\n * Filter that matches 'NaN' values.\r\n */\r\nvar NanFilter = /** @class */ (function () {\r\n    function NanFilter(field) {\r\n        this.field = field;\r\n    }\r\n    NanFilter.prototype.matches = function (doc) {\r\n        var val = doc.field(this.field).value();\r\n        return typeof val === 'number' && isNaN(val);\r\n    };\r\n    NanFilter.prototype.canonicalId = function () {\r\n        return this.field.canonicalString() + ' IS NaN';\r\n    };\r\n    NanFilter.prototype.toString = function () {\r\n        return this.field.canonicalString() + \" IS NaN\";\r\n    };\r\n    NanFilter.prototype.isEqual = function (other) {\r\n        if (other instanceof NanFilter) {\r\n            return this.field.isEqual(other.field);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return NanFilter;\r\n}());\r\n/**\r\n * Creates a filter based on the provided arguments.\r\n */\r\nfunction fieldFilter(field, op, value) {\r\n    if (value.isEqual(NullValue.INSTANCE)) {\r\n        if (op !== RelationOp.EQUAL) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You can only perform equals ' + 'comparisons on null.');\r\n        }\r\n        return new NullFilter(field);\r\n    }\r\n    else if (value.isEqual(DoubleValue.NAN)) {\r\n        if (op !== RelationOp.EQUAL) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You can only perform equals ' + 'comparisons on NaN.');\r\n        }\r\n        return new NanFilter(field);\r\n    }\r\n    else {\r\n        return new RelationFilter(field, op, value);\r\n    }\r\n}\r\n/**\r\n * The direction of sorting in an order by.\r\n */\r\nvar Direction = /** @class */ (function () {\r\n    function Direction(name) {\r\n        this.name = name;\r\n    }\r\n    Direction.prototype.toString = function () {\r\n        return this.name;\r\n    };\r\n    Direction.ASCENDING = new Direction('asc');\r\n    Direction.DESCENDING = new Direction('desc');\r\n    return Direction;\r\n}());\r\n/**\r\n * Represents a bound of a query.\r\n *\r\n * The bound is specified with the given components representing a position and\r\n * whether it's just before or just after the position (relative to whatever the\r\n * query order is).\r\n *\r\n * The position represents a logical index position for a query. It's a prefix\r\n * of values for the (potentially implicit) order by clauses of a query.\r\n *\r\n * Bound provides a function to determine whether a document comes before or\r\n * after a bound. This is influenced by whether the position is just before or\r\n * just after the provided values.\r\n */\r\nvar Bound = /** @class */ (function () {\r\n    function Bound(position, before) {\r\n        this.position = position;\r\n        this.before = before;\r\n    }\r\n    Bound.prototype.canonicalId = function () {\r\n        // TODO(b/29183165): Make this collision robust.\r\n        var canonicalId = this.before ? 'b:' : 'a:';\r\n        for (var _i = 0, _a = this.position; _i < _a.length; _i++) {\r\n            var component = _a[_i];\r\n            canonicalId += component.toString();\r\n        }\r\n        return canonicalId;\r\n    };\r\n    /**\r\n     * Returns true if a document sorts before a bound using the provided sort\r\n     * order.\r\n     */\r\n    Bound.prototype.sortsBeforeDocument = function (orderBy, doc) {\r\n        assert(this.position.length <= orderBy.length, \"Bound has more components than query's orderBy\");\r\n        var comparison = 0;\r\n        for (var i = 0; i < this.position.length; i++) {\r\n            var orderByComponent = orderBy[i];\r\n            var component = this.position[i];\r\n            if (orderByComponent.field.isKeyField()) {\r\n                assert(component instanceof RefValue, 'Bound has a non-key value where the key path is being used.');\r\n                comparison = DocumentKey.comparator(component.key, doc.key);\r\n            }\r\n            else {\r\n                var docValue = doc.field(orderByComponent.field);\r\n                assert(docValue !== undefined, 'Field should exist since document matched the orderBy already.');\r\n                comparison = component.compareTo(docValue);\r\n            }\r\n            if (orderByComponent.dir === Direction.DESCENDING) {\r\n                comparison = comparison * -1;\r\n            }\r\n            if (comparison !== 0) {\r\n                break;\r\n            }\r\n        }\r\n        return this.before ? comparison <= 0 : comparison < 0;\r\n    };\r\n    Bound.prototype.isEqual = function (other) {\r\n        if (other === null) {\r\n            return false;\r\n        }\r\n        if (this.before !== other.before ||\r\n            this.position.length !== other.position.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < this.position.length; i++) {\r\n            var thisPosition = this.position[i];\r\n            var otherPosition = other.position[i];\r\n            return thisPosition.isEqual(otherPosition);\r\n        }\r\n        return true;\r\n    };\r\n    return Bound;\r\n}());\r\n/**\r\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\r\n */\r\nvar OrderBy = /** @class */ (function () {\r\n    function OrderBy(field, dir) {\r\n        this.field = field;\r\n        if (dir === undefined) {\r\n            dir = Direction.ASCENDING;\r\n        }\r\n        this.dir = dir;\r\n        this.isKeyOrderBy = field.isKeyField();\r\n    }\r\n    OrderBy.prototype.compare = function (d1, d2) {\r\n        var comparison = this.isKeyOrderBy\r\n            ? Document.compareByKey(d1, d2)\r\n            : Document.compareByField(this.field, d1, d2);\r\n        switch (this.dir) {\r\n            case Direction.ASCENDING:\r\n                return comparison;\r\n            case Direction.DESCENDING:\r\n                return -1 * comparison;\r\n            default:\r\n                return fail('Unknown direction: ' + this.dir);\r\n        }\r\n    };\r\n    OrderBy.prototype.canonicalId = function () {\r\n        // TODO(b/29183165): Make this collision robust.\r\n        return this.field.canonicalString() + this.dir.toString();\r\n    };\r\n    OrderBy.prototype.toString = function () {\r\n        return this.field.canonicalString() + \" (\" + this.dir + \")\";\r\n    };\r\n    OrderBy.prototype.isEqual = function (other) {\r\n        return this.dir === other.dir && this.field.isEqual(other.field);\r\n    };\r\n    return OrderBy;\r\n}());\r\nvar KEY_ORDERING_ASC = new OrderBy(FieldPath.keyField(), Direction.ASCENDING);\r\nvar KEY_ORDERING_DESC = new OrderBy(FieldPath.keyField(), Direction.DESCENDING);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A version of a document in Firestore. This corresponds to the version\r\n * timestamp, such as update_time or read_time.\r\n */\r\nvar SnapshotVersion = /** @class */ (function () {\r\n    function SnapshotVersion(timestamp) {\r\n        this.timestamp = timestamp;\r\n    }\r\n    // TODO(b/34176344): Once we no longer need to use the old alpha protos,\r\n    // delete this constructor and use a timestamp-backed version everywhere.\r\n    SnapshotVersion.fromMicroseconds = function (value) {\r\n        var seconds = Math.floor(value / 1e6);\r\n        var nanos = (value % 1e6) * 1e3;\r\n        return new SnapshotVersion(new Timestamp(seconds, nanos));\r\n    };\r\n    SnapshotVersion.fromTimestamp = function (value) {\r\n        return new SnapshotVersion(value);\r\n    };\r\n    SnapshotVersion.forDeletedDoc = function () {\r\n        return SnapshotVersion.MIN;\r\n    };\r\n    SnapshotVersion.prototype.compareTo = function (other) {\r\n        return this.timestamp._compareTo(other.timestamp);\r\n    };\r\n    SnapshotVersion.prototype.isEqual = function (other) {\r\n        return this.timestamp.isEqual(other.timestamp);\r\n    };\r\n    /** Returns a number representation of the version for use in spec tests. */\r\n    SnapshotVersion.prototype.toMicroseconds = function () {\r\n        // Convert to microseconds.\r\n        return this.timestamp.seconds * 1e6 + this.timestamp.nanoseconds / 1000;\r\n    };\r\n    SnapshotVersion.prototype.toString = function () {\r\n        return 'SnapshotVersion(' + this.timestamp.toString() + ')';\r\n    };\r\n    SnapshotVersion.prototype.toTimestamp = function () {\r\n        return this.timestamp;\r\n    };\r\n    SnapshotVersion.MIN = new SnapshotVersion(new Timestamp(0, 0));\r\n    return SnapshotVersion;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** An enumeration of the different purposes we have for queries. */\r\nvar QueryPurpose;\r\n(function (QueryPurpose) {\r\n    /** A regular, normal query. */\r\n    QueryPurpose[QueryPurpose[\"Listen\"] = 0] = \"Listen\";\r\n    /**\r\n     * The query was used to refill a query after an existence filter mismatch.\r\n     */\r\n    QueryPurpose[QueryPurpose[\"ExistenceFilterMismatch\"] = 1] = \"ExistenceFilterMismatch\";\r\n    /** The query was used to resolve a limbo document. */\r\n    QueryPurpose[QueryPurpose[\"LimboResolution\"] = 2] = \"LimboResolution\";\r\n})(QueryPurpose || (QueryPurpose = {}));\r\n/**\r\n * An immutable set of metadata that the local store tracks for each query.\r\n */\r\nvar QueryData = /** @class */ (function () {\r\n    function QueryData(\r\n    /** The query being listened to. */\r\n    query, \r\n    /**\r\n     * The target ID to which the query corresponds; Assigned by the\r\n     * LocalStore for user listens and by the SyncEngine for limbo watches.\r\n     */\r\n    targetId, \r\n    /** The purpose of the query. */\r\n    purpose, \r\n    /** The latest snapshot version seen for this target. */\r\n    snapshotVersion, \r\n    /**\r\n     * An opaque, server-assigned token that allows watching a query to be\r\n     * resumed after disconnecting without retransmitting all the data that\r\n     * matches the query. The resume token essentially identifies a point in\r\n     * time from which the server should resume sending results.\r\n     */\r\n    resumeToken) {\r\n        if (snapshotVersion === void 0) { snapshotVersion = SnapshotVersion.MIN; }\r\n        if (resumeToken === void 0) { resumeToken = emptyByteString(); }\r\n        this.query = query;\r\n        this.targetId = targetId;\r\n        this.purpose = purpose;\r\n        this.snapshotVersion = snapshotVersion;\r\n        this.resumeToken = resumeToken;\r\n    }\r\n    /**\r\n     * Creates a new query data instance with an updated snapshot version and\r\n     * resume token.\r\n     */\r\n    QueryData.prototype.update = function (updated) {\r\n        return new QueryData(this.query, this.targetId, this.purpose, updated.snapshotVersion, updated.resumeToken);\r\n    };\r\n    QueryData.prototype.isEqual = function (other) {\r\n        return (this.targetId === other.targetId &&\r\n            this.purpose === other.purpose &&\r\n            this.snapshotVersion.isEqual(other.snapshotVersion) &&\r\n            this.resumeToken === other.resumeToken &&\r\n            this.query.isEqual(other.query));\r\n    };\r\n    return QueryData;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides a set of fields that can be used to partially patch a document.\r\n * FieldMask is used in conjunction with ObjectValue.\r\n * Examples:\r\n *   foo - Overwrites foo entirely with the provided value. If foo is not\r\n *         present in the companion ObjectValue, the field is deleted.\r\n *   foo.bar - Overwrites only the field bar of the object foo.\r\n *             If foo is not an object, foo is replaced with an object\r\n *             containing foo\r\n */\r\nvar FieldMask = /** @class */ (function () {\r\n    function FieldMask(fields) {\r\n        this.fields = fields;\r\n        // TODO(dimond): validation of FieldMask\r\n    }\r\n    /**\r\n     * Verifies that `fieldPath` is included by at least one field in this field\r\n     * mask.\r\n     *\r\n     * This is an O(n) operation, where `n` is the size of the field mask.\r\n     */\r\n    FieldMask.prototype.covers = function (fieldPath) {\r\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\r\n            var fieldMaskPath = _a[_i];\r\n            if (fieldMaskPath.isPrefixOf(fieldPath)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    FieldMask.prototype.isEqual = function (other) {\r\n        return arrayEquals(this.fields, other.fields);\r\n    };\r\n    return FieldMask;\r\n}());\r\n/** A field path and the TransformOperation to perform upon it. */\r\nvar FieldTransform = /** @class */ (function () {\r\n    function FieldTransform(field, transform) {\r\n        this.field = field;\r\n        this.transform = transform;\r\n    }\r\n    FieldTransform.prototype.isEqual = function (other) {\r\n        return (this.field.isEqual(other.field) && this.transform.isEqual(other.transform));\r\n    };\r\n    return FieldTransform;\r\n}());\r\n/** The result of successfully applying a mutation to the backend. */\r\nvar MutationResult = /** @class */ (function () {\r\n    function MutationResult(\r\n    /**\r\n     * The version at which the mutation was committed or null for a delete.\r\n     */\r\n    version, \r\n    /**\r\n     * The resulting fields returned from the backend after a\r\n     * TransformMutation has been committed. Contains one FieldValue for each\r\n     * FieldTransform that was in the mutation.\r\n     *\r\n     * Will be null if the mutation was not a TransformMutation.\r\n     */\r\n    transformResults) {\r\n        this.version = version;\r\n        this.transformResults = transformResults;\r\n    }\r\n    return MutationResult;\r\n}());\r\nvar MutationType;\r\n(function (MutationType) {\r\n    MutationType[MutationType[\"Set\"] = 0] = \"Set\";\r\n    MutationType[MutationType[\"Patch\"] = 1] = \"Patch\";\r\n    MutationType[MutationType[\"Transform\"] = 2] = \"Transform\";\r\n    MutationType[MutationType[\"Delete\"] = 3] = \"Delete\";\r\n})(MutationType || (MutationType = {}));\r\n/**\r\n * Encodes a precondition for a mutation. This follows the model that the\r\n * backend accepts with the special case of an explicit \"empty\" precondition\r\n * (meaning no precondition).\r\n */\r\nvar Precondition = /** @class */ (function () {\r\n    function Precondition(updateTime, exists) {\r\n        this.updateTime = updateTime;\r\n        this.exists = exists;\r\n        assert(updateTime === undefined || exists === undefined, 'Precondition can specify \"exists\" or \"updateTime\" but not both');\r\n    }\r\n    /** Creates a new Precondition with an exists flag. */\r\n    Precondition.exists = function (exists) {\r\n        return new Precondition(undefined, exists);\r\n    };\r\n    /** Creates a new Precondition based on a version a document exists at. */\r\n    Precondition.updateTime = function (version) {\r\n        return new Precondition(version);\r\n    };\r\n    Object.defineProperty(Precondition.prototype, \"isNone\", {\r\n        /** Returns whether this Precondition is empty. */\r\n        get: function () {\r\n            return this.updateTime === undefined && this.exists === undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns true if the preconditions is valid for the given document\r\n     * (or null if no document is available).\r\n     */\r\n    Precondition.prototype.isValidFor = function (maybeDoc) {\r\n        if (this.updateTime !== undefined) {\r\n            return (maybeDoc instanceof Document &&\r\n                maybeDoc.version.isEqual(this.updateTime));\r\n        }\r\n        else if (this.exists !== undefined) {\r\n            if (this.exists) {\r\n                return maybeDoc instanceof Document;\r\n            }\r\n            else {\r\n                return maybeDoc === null || maybeDoc instanceof NoDocument;\r\n            }\r\n        }\r\n        else {\r\n            assert(this.isNone, 'Precondition should be empty');\r\n            return true;\r\n        }\r\n    };\r\n    Precondition.prototype.isEqual = function (other) {\r\n        return (equals(this.updateTime, other.updateTime) &&\r\n            this.exists === other.exists);\r\n    };\r\n    Precondition.NONE = new Precondition();\r\n    return Precondition;\r\n}());\r\n/**\r\n * A mutation describes a self-contained change to a document. Mutations can\r\n * create, replace, delete, and update subsets of documents.\r\n *\r\n * Mutations not only act on the value of the document but also it version.\r\n * In the case of Set, Patch, and Transform mutations we preserve the existing\r\n * version. In the case of Delete mutations, we reset the version to 0.\r\n *\r\n * Here's the expected transition table.\r\n *\r\n * MUTATION           APPLIED TO            RESULTS IN\r\n *\r\n * SetMutation        Document(v3)          Document(v3)\r\n * SetMutation        NoDocument(v3)        Document(v0)\r\n * SetMutation        null                  Document(v0)\r\n * PatchMutation      Document(v3)          Document(v3)\r\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\r\n * PatchMutation      null                  null\r\n * TransformMutation  Document(v3)          Document(v3)\r\n * TransformMutation  NoDocument(v3)        NoDocument(v3)\r\n * TransformMutation  null                  null\r\n * DeleteMutation     Document(v3)          NoDocument(v0)\r\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\r\n * DeleteMutation     null                  NoDocument(v0)\r\n *\r\n * Note that TransformMutations don't create Documents (in the case of being\r\n * applied to a NoDocument), even though they would on the backend. This is\r\n * because the client always combines the TransformMutation with a SetMutation\r\n * or PatchMutation and we only want to apply the transform if the prior\r\n * mutation resulted in a Document (always true for a SetMutation, but not\r\n * necessarily for a PatchMutation).\r\n *\r\n * ## Subclassing Notes\r\n *\r\n * Subclasses of Mutation need to implement applyToRemoteDocument() and\r\n * applyToLocalView() to implement the actual behavior of applying the mutation\r\n * to some source document.\r\n */\r\nvar Mutation = /** @class */ (function () {\r\n    function Mutation() {\r\n    }\r\n    Mutation.prototype.verifyKeyMatches = function (maybeDoc) {\r\n        if (maybeDoc != null) {\r\n            assert(maybeDoc.key.isEqual(this.key), 'Can only apply a mutation to a document with the same key');\r\n        }\r\n    };\r\n    /**\r\n     * Returns the version from the given document for use as the result of a\r\n     * mutation. Mutations are defined to return the version of the base document\r\n     * only if it is an existing document. Deleted and unknown documents have a\r\n     * post-mutation version of SnapshotVersion.MIN.\r\n     */\r\n    Mutation.getPostMutationVersion = function (maybeDoc) {\r\n        if (maybeDoc instanceof Document) {\r\n            return maybeDoc.version;\r\n        }\r\n        else {\r\n            return SnapshotVersion.MIN;\r\n        }\r\n    };\r\n    return Mutation;\r\n}());\r\n/**\r\n * A mutation that creates or replaces the document at the given key with the\r\n * object value contents.\r\n */\r\nvar SetMutation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SetMutation, _super);\r\n    function SetMutation(key, value, precondition) {\r\n        var _this = _super.call(this) || this;\r\n        _this.key = key;\r\n        _this.value = value;\r\n        _this.precondition = precondition;\r\n        _this.type = MutationType.Set;\r\n        return _this;\r\n    }\r\n    SetMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\r\n        this.verifyKeyMatches(maybeDoc);\r\n        assert(mutationResult.transformResults == null, 'Transform results received by SetMutation.');\r\n        // Unlike applyToLocalView, if we're applying a mutation to a remote\r\n        // document the server has accepted the mutation so the precondition must\r\n        // have held.\r\n        var version = Mutation.getPostMutationVersion(maybeDoc);\r\n        return new Document(this.key, version, this.value, {\r\n            hasLocalMutations: false\r\n        });\r\n    };\r\n    SetMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\r\n        this.verifyKeyMatches(maybeDoc);\r\n        if (!this.precondition.isValidFor(maybeDoc)) {\r\n            return maybeDoc;\r\n        }\r\n        var version = Mutation.getPostMutationVersion(maybeDoc);\r\n        return new Document(this.key, version, this.value, {\r\n            hasLocalMutations: true\r\n        });\r\n    };\r\n    SetMutation.prototype.isEqual = function (other) {\r\n        return (other instanceof SetMutation &&\r\n            this.key.isEqual(other.key) &&\r\n            this.value.isEqual(other.value) &&\r\n            this.precondition.isEqual(other.precondition));\r\n    };\r\n    return SetMutation;\r\n}(Mutation));\r\n/**\r\n * A mutation that modifies fields of the document at the given key with the\r\n * given values. The values are applied through a field mask:\r\n *\r\n *  * When a field is in both the mask and the values, the corresponding field\r\n *    is updated.\r\n *  * When a field is in neither the mask nor the values, the corresponding\r\n *    field is unmodified.\r\n *  * When a field is in the mask but not in the values, the corresponding field\r\n *    is deleted.\r\n *  * When a field is not in the mask but is in the values, the values map is\r\n *    ignored.\r\n */\r\nvar PatchMutation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PatchMutation, _super);\r\n    function PatchMutation(key, data, fieldMask, precondition) {\r\n        var _this = _super.call(this) || this;\r\n        _this.key = key;\r\n        _this.data = data;\r\n        _this.fieldMask = fieldMask;\r\n        _this.precondition = precondition;\r\n        _this.type = MutationType.Patch;\r\n        return _this;\r\n    }\r\n    PatchMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\r\n        this.verifyKeyMatches(maybeDoc);\r\n        assert(mutationResult.transformResults == null, 'Transform results received by PatchMutation.');\r\n        // TODO(mcg): Relax enforcement of this precondition\r\n        //\r\n        // We shouldn't actually enforce the precondition since it already passed on\r\n        // the backend, but we may not have a local version of the document to\r\n        // patch, so we use the precondition to prevent incorrectly putting a\r\n        // partial document into our cache.\r\n        if (!this.precondition.isValidFor(maybeDoc)) {\r\n            return maybeDoc;\r\n        }\r\n        var version = Mutation.getPostMutationVersion(maybeDoc);\r\n        var newData = this.patchDocument(maybeDoc);\r\n        return new Document(this.key, version, newData, {\r\n            hasLocalMutations: false\r\n        });\r\n    };\r\n    PatchMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\r\n        this.verifyKeyMatches(maybeDoc);\r\n        if (!this.precondition.isValidFor(maybeDoc)) {\r\n            return maybeDoc;\r\n        }\r\n        var version = Mutation.getPostMutationVersion(maybeDoc);\r\n        var newData = this.patchDocument(maybeDoc);\r\n        return new Document(this.key, version, newData, {\r\n            hasLocalMutations: true\r\n        });\r\n    };\r\n    PatchMutation.prototype.isEqual = function (other) {\r\n        return (other instanceof PatchMutation &&\r\n            this.key.isEqual(other.key) &&\r\n            this.fieldMask.isEqual(other.fieldMask) &&\r\n            this.precondition.isEqual(other.precondition));\r\n    };\r\n    /**\r\n     * Patches the data of document if available or creates a new document. Note\r\n     * that this does not check whether or not the precondition of this patch\r\n     * holds.\r\n     */\r\n    PatchMutation.prototype.patchDocument = function (maybeDoc) {\r\n        var data;\r\n        if (maybeDoc instanceof Document) {\r\n            data = maybeDoc.data;\r\n        }\r\n        else {\r\n            data = ObjectValue.EMPTY;\r\n        }\r\n        return this.patchObject(data);\r\n    };\r\n    PatchMutation.prototype.patchObject = function (data) {\r\n        for (var _i = 0, _a = this.fieldMask.fields; _i < _a.length; _i++) {\r\n            var fieldPath = _a[_i];\r\n            var newValue = this.data.field(fieldPath);\r\n            if (newValue !== undefined) {\r\n                data = data.set(fieldPath, newValue);\r\n            }\r\n            else {\r\n                data = data.delete(fieldPath);\r\n            }\r\n        }\r\n        return data;\r\n    };\r\n    return PatchMutation;\r\n}(Mutation));\r\n/**\r\n * A mutation that modifies specific fields of the document with transform\r\n * operations. Currently the only supported transform is a server timestamp, but\r\n * IP Address, increment(n), etc. could be supported in the future.\r\n *\r\n * It is somewhat similar to a PatchMutation in that it patches specific fields\r\n * and has no effect when applied to a null or NoDocument (see comment on\r\n * Mutation for rationale).\r\n */\r\nvar TransformMutation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TransformMutation, _super);\r\n    function TransformMutation(key, fieldTransforms) {\r\n        var _this = _super.call(this) || this;\r\n        _this.key = key;\r\n        _this.fieldTransforms = fieldTransforms;\r\n        _this.type = MutationType.Transform;\r\n        // NOTE: We set a precondition of exists: true as a safety-check, since we\r\n        // always combine TransformMutations with a SetMutation or PatchMutation which\r\n        // (if successful) should end up with an existing document.\r\n        _this.precondition = Precondition.exists(true);\r\n        return _this;\r\n    }\r\n    TransformMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\r\n        this.verifyKeyMatches(maybeDoc);\r\n        assert(mutationResult.transformResults != null, 'Transform results missing for TransformMutation.');\r\n        // TODO(mcg): Relax enforcement of this precondition\r\n        //\r\n        // We shouldn't actually enforce the precondition since it already passed on\r\n        // the backend, but we may not have a local version of the document to\r\n        // patch, so we use the precondition to prevent incorrectly putting a\r\n        // partial document into our cache.\r\n        if (!this.precondition.isValidFor(maybeDoc)) {\r\n            return maybeDoc;\r\n        }\r\n        var doc = this.requireDocument(maybeDoc);\r\n        var transformResults = this.serverTransformResults(maybeDoc, mutationResult.transformResults);\r\n        var newData = this.transformObject(doc.data, transformResults);\r\n        return new Document(this.key, doc.version, newData, {\r\n            hasLocalMutations: false\r\n        });\r\n    };\r\n    TransformMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\r\n        this.verifyKeyMatches(maybeDoc);\r\n        if (!this.precondition.isValidFor(maybeDoc)) {\r\n            return maybeDoc;\r\n        }\r\n        var doc = this.requireDocument(maybeDoc);\r\n        var transformResults = this.localTransformResults(localWriteTime, baseDoc);\r\n        var newData = this.transformObject(doc.data, transformResults);\r\n        return new Document(this.key, doc.version, newData, {\r\n            hasLocalMutations: true\r\n        });\r\n    };\r\n    TransformMutation.prototype.isEqual = function (other) {\r\n        return (other instanceof TransformMutation &&\r\n            this.key.isEqual(other.key) &&\r\n            arrayEquals(this.fieldTransforms, other.fieldTransforms) &&\r\n            this.precondition.isEqual(other.precondition));\r\n    };\r\n    /**\r\n     * Asserts that the given MaybeDocument is actually a Document and verifies\r\n     * that it matches the key for this mutation. Since we only support\r\n     * transformations with precondition exists this method is guaranteed to be\r\n     * safe.\r\n     */\r\n    TransformMutation.prototype.requireDocument = function (maybeDoc) {\r\n        assert(maybeDoc instanceof Document, 'Unknown MaybeDocument type ' + maybeDoc);\r\n        var doc = maybeDoc;\r\n        assert(doc.key.isEqual(this.key), 'Can only transform a document with the same key');\r\n        return doc;\r\n    };\r\n    /**\r\n     * Creates a list of \"transform results\" (a transform result is a field value\r\n     * representing the result of applying a transform) for use after a\r\n     * TransformMutation has been acknowledged by the server.\r\n     *\r\n     * @param baseDoc The document prior to applying this mutation batch.\r\n     * @param serverTransformResults The transform results received by the server.\r\n     * @return The transform results list.\r\n     */\r\n    TransformMutation.prototype.serverTransformResults = function (baseDoc, serverTransformResults) {\r\n        var transformResults = [];\r\n        assert(this.fieldTransforms.length === serverTransformResults.length, \"server transform result count (\" + serverTransformResults.length + \") \" +\r\n            (\"should match field transform count (\" + this.fieldTransforms.length + \")\"));\r\n        for (var i = 0; i < serverTransformResults.length; i++) {\r\n            var fieldTransform = this.fieldTransforms[i];\r\n            var transform = fieldTransform.transform;\r\n            var previousValue = null;\r\n            if (baseDoc instanceof Document) {\r\n                previousValue = baseDoc.field(fieldTransform.field) || null;\r\n            }\r\n            transformResults.push(transform.applyToRemoteDocument(previousValue, serverTransformResults[i]));\r\n        }\r\n        return transformResults;\r\n    };\r\n    /**\r\n     * Creates a list of \"transform results\" (a transform result is a field value\r\n     * representing the result of applying a transform) for use when applying a\r\n     * TransformMutation locally.\r\n     *\r\n     * @param localWriteTime The local time of the transform mutation (used to\r\n     *     generate ServerTimestampValues).\r\n     * @param baseDoc The document prior to applying this mutation batch.\r\n     * @return The transform results list.\r\n     */\r\n    TransformMutation.prototype.localTransformResults = function (localWriteTime, baseDoc) {\r\n        var transformResults = [];\r\n        for (var _i = 0, _a = this.fieldTransforms; _i < _a.length; _i++) {\r\n            var fieldTransform = _a[_i];\r\n            var transform = fieldTransform.transform;\r\n            var previousValue = null;\r\n            if (baseDoc instanceof Document) {\r\n                previousValue = baseDoc.field(fieldTransform.field) || null;\r\n            }\r\n            transformResults.push(transform.applyToLocalView(previousValue, localWriteTime));\r\n        }\r\n        return transformResults;\r\n    };\r\n    TransformMutation.prototype.transformObject = function (data, transformResults) {\r\n        assert(transformResults.length === this.fieldTransforms.length, 'TransformResults length mismatch.');\r\n        for (var i = 0; i < this.fieldTransforms.length; i++) {\r\n            var fieldTransform = this.fieldTransforms[i];\r\n            var fieldPath = fieldTransform.field;\r\n            data = data.set(fieldPath, transformResults[i]);\r\n        }\r\n        return data;\r\n    };\r\n    return TransformMutation;\r\n}(Mutation));\r\n/** A mutation that deletes the document at the given key. */\r\nvar DeleteMutation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DeleteMutation, _super);\r\n    function DeleteMutation(key, precondition) {\r\n        var _this = _super.call(this) || this;\r\n        _this.key = key;\r\n        _this.precondition = precondition;\r\n        _this.type = MutationType.Delete;\r\n        return _this;\r\n    }\r\n    DeleteMutation.prototype.applyToRemoteDocument = function (maybeDoc, mutationResult) {\r\n        this.verifyKeyMatches(maybeDoc);\r\n        assert(mutationResult.transformResults == null, 'Transform results received by DeleteMutation.');\r\n        // Unlike applyToLocalView, if we're applying a mutation to a remote\r\n        // document the server has accepted the mutation so the precondition must\r\n        // have held.\r\n        return new NoDocument(this.key, SnapshotVersion.MIN);\r\n    };\r\n    DeleteMutation.prototype.applyToLocalView = function (maybeDoc, baseDoc, localWriteTime) {\r\n        this.verifyKeyMatches(maybeDoc);\r\n        if (!this.precondition.isValidFor(maybeDoc)) {\r\n            return maybeDoc;\r\n        }\r\n        if (maybeDoc) {\r\n            assert(maybeDoc.key.isEqual(this.key), 'Can only apply mutation to document with same key');\r\n        }\r\n        return new NoDocument(this.key, SnapshotVersion.forDeletedDoc());\r\n    };\r\n    DeleteMutation.prototype.isEqual = function (other) {\r\n        return (other instanceof DeleteMutation &&\r\n            this.key.isEqual(other.key) &&\r\n            this.precondition.isEqual(other.precondition));\r\n    };\r\n    return DeleteMutation;\r\n}(Mutation));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistenceFilter = /** @class */ (function () {\r\n    // TODO(b/33078163): just use simplest form of existence filter for now\r\n    function ExistenceFilter(count) {\r\n        this.count = count;\r\n    }\r\n    ExistenceFilter.prototype.isEqual = function (other) {\r\n        return other && other.count === this.count;\r\n    };\r\n    return ExistenceFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error Codes describing the different ways GRPC can fail. These are copied\r\n * directly from GRPC's sources here:\r\n *\r\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\r\n *\r\n * Important! The names of these identifiers matter because the string forms\r\n * are used for reverse lookups from the webchannel stream. Do NOT change the\r\n * names of these identifiers.\r\n */\r\nvar RpcCode;\r\n(function (RpcCode) {\r\n    RpcCode[RpcCode[\"OK\"] = 0] = \"OK\";\r\n    RpcCode[RpcCode[\"CANCELLED\"] = 1] = \"CANCELLED\";\r\n    RpcCode[RpcCode[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\r\n    RpcCode[RpcCode[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\r\n    RpcCode[RpcCode[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\r\n    RpcCode[RpcCode[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\r\n    RpcCode[RpcCode[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\r\n    RpcCode[RpcCode[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\r\n    RpcCode[RpcCode[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\r\n    RpcCode[RpcCode[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\r\n    RpcCode[RpcCode[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\r\n    RpcCode[RpcCode[\"ABORTED\"] = 10] = \"ABORTED\";\r\n    RpcCode[RpcCode[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\r\n    RpcCode[RpcCode[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\r\n    RpcCode[RpcCode[\"INTERNAL\"] = 13] = \"INTERNAL\";\r\n    RpcCode[RpcCode[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\r\n    RpcCode[RpcCode[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\r\n})(RpcCode || (RpcCode = {}));\r\nfunction isPermanentError(code) {\r\n    switch (code) {\r\n        case Code.OK:\r\n            return fail('Treated status OK as error');\r\n        case Code.CANCELLED:\r\n        case Code.UNKNOWN:\r\n        case Code.DEADLINE_EXCEEDED:\r\n        case Code.RESOURCE_EXHAUSTED:\r\n        case Code.INTERNAL:\r\n        case Code.UNAVAILABLE:\r\n        // Unauthenticated means something went wrong with our token and we need\r\n        // to retry with new credentials which will happen automatically.\r\n        // TODO(b/37325376): Give up after second unauthenticated error.\r\n        case Code.UNAUTHENTICATED:\r\n            return false;\r\n        case Code.INVALID_ARGUMENT:\r\n        case Code.NOT_FOUND:\r\n        case Code.ALREADY_EXISTS:\r\n        case Code.PERMISSION_DENIED:\r\n        case Code.FAILED_PRECONDITION:\r\n        // Aborted might be retried in some scenarios, but that is dependant on\r\n        // the context and should handled individually by the calling code.\r\n        // See https://cloud.google.com/apis/design/errors.\r\n        case Code.ABORTED:\r\n        case Code.OUT_OF_RANGE:\r\n        case Code.UNIMPLEMENTED:\r\n        case Code.DATA_LOSS:\r\n            return true;\r\n        default:\r\n            return fail('Unknown status code: ' + code);\r\n    }\r\n}\r\n/**\r\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\r\n *\r\n * @returns The Code equivalent to the given status string or undefined if\r\n *     there is no match.\r\n */\r\nfunction mapCodeFromRpcStatus(status) {\r\n    // tslint:disable-next-line:no-any lookup by string\r\n    var code = RpcCode[status];\r\n    if (code === undefined) {\r\n        return undefined;\r\n    }\r\n    return mapCodeFromRpcCode(code);\r\n}\r\n/**\r\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\r\n * are not the same as HTTP status codes.\r\n *\r\n * @returns The Code equivalent to the given GRPC status code. Fails if there\r\n *     is no match.\r\n */\r\nfunction mapCodeFromRpcCode(code) {\r\n    if (code === undefined) {\r\n        // This shouldn't normally happen, but in certain error cases (like trying\r\n        // to send invalid proto messages) we may get an error with no GRPC code.\r\n        error('GRPC error has no .code');\r\n        return Code.UNKNOWN;\r\n    }\r\n    switch (code) {\r\n        case RpcCode.OK:\r\n            return Code.OK;\r\n        case RpcCode.CANCELLED:\r\n            return Code.CANCELLED;\r\n        case RpcCode.UNKNOWN:\r\n            return Code.UNKNOWN;\r\n        case RpcCode.DEADLINE_EXCEEDED:\r\n            return Code.DEADLINE_EXCEEDED;\r\n        case RpcCode.RESOURCE_EXHAUSTED:\r\n            return Code.RESOURCE_EXHAUSTED;\r\n        case RpcCode.INTERNAL:\r\n            return Code.INTERNAL;\r\n        case RpcCode.UNAVAILABLE:\r\n            return Code.UNAVAILABLE;\r\n        case RpcCode.UNAUTHENTICATED:\r\n            return Code.UNAUTHENTICATED;\r\n        case RpcCode.INVALID_ARGUMENT:\r\n            return Code.INVALID_ARGUMENT;\r\n        case RpcCode.NOT_FOUND:\r\n            return Code.NOT_FOUND;\r\n        case RpcCode.ALREADY_EXISTS:\r\n            return Code.ALREADY_EXISTS;\r\n        case RpcCode.PERMISSION_DENIED:\r\n            return Code.PERMISSION_DENIED;\r\n        case RpcCode.FAILED_PRECONDITION:\r\n            return Code.FAILED_PRECONDITION;\r\n        case RpcCode.ABORTED:\r\n            return Code.ABORTED;\r\n        case RpcCode.OUT_OF_RANGE:\r\n            return Code.OUT_OF_RANGE;\r\n        case RpcCode.UNIMPLEMENTED:\r\n            return Code.UNIMPLEMENTED;\r\n        case RpcCode.DATA_LOSS:\r\n            return Code.DATA_LOSS;\r\n        default:\r\n            return fail('Unknown status code: ' + code);\r\n    }\r\n}\r\n/**\r\n * Maps an RPC code from a Code. This is the reverse operation from\r\n * mapCodeFromRpcCode and should really only be used in tests.\r\n */\r\nfunction mapRpcCodeFromCode(code) {\r\n    if (code === undefined) {\r\n        return RpcCode.OK;\r\n    }\r\n    switch (code) {\r\n        case Code.OK:\r\n            return RpcCode.OK;\r\n        case Code.CANCELLED:\r\n            return RpcCode.CANCELLED;\r\n        case Code.UNKNOWN:\r\n            return RpcCode.UNKNOWN;\r\n        case Code.DEADLINE_EXCEEDED:\r\n            return RpcCode.DEADLINE_EXCEEDED;\r\n        case Code.RESOURCE_EXHAUSTED:\r\n            return RpcCode.RESOURCE_EXHAUSTED;\r\n        case Code.INTERNAL:\r\n            return RpcCode.INTERNAL;\r\n        case Code.UNAVAILABLE:\r\n            return RpcCode.UNAVAILABLE;\r\n        case Code.UNAUTHENTICATED:\r\n            return RpcCode.UNAUTHENTICATED;\r\n        case Code.INVALID_ARGUMENT:\r\n            return RpcCode.INVALID_ARGUMENT;\r\n        case Code.NOT_FOUND:\r\n            return RpcCode.NOT_FOUND;\r\n        case Code.ALREADY_EXISTS:\r\n            return RpcCode.ALREADY_EXISTS;\r\n        case Code.PERMISSION_DENIED:\r\n            return RpcCode.PERMISSION_DENIED;\r\n        case Code.FAILED_PRECONDITION:\r\n            return RpcCode.FAILED_PRECONDITION;\r\n        case Code.ABORTED:\r\n            return RpcCode.ABORTED;\r\n        case Code.OUT_OF_RANGE:\r\n            return RpcCode.OUT_OF_RANGE;\r\n        case Code.UNIMPLEMENTED:\r\n            return RpcCode.UNIMPLEMENTED;\r\n        case Code.DATA_LOSS:\r\n            return RpcCode.DATA_LOSS;\r\n        default:\r\n            return fail('Unknown status code: ' + code);\r\n    }\r\n}\r\n/**\r\n * Converts an HTTP Status Code to the equivalent error code.\r\n *\r\n * @param status An HTTP Status Code, like 200, 404, 503, etc.\r\n * @returns The equivalent Code. Unknown status codes are mapped to\r\n *     Code.UNKNOWN.\r\n */\r\nfunction mapCodeFromHttpStatus(status) {\r\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\r\n    // status codes but the mapping is not bijective. In each case of ambiguity\r\n    // this function chooses a primary error.\r\n    //\r\n    // [1]\r\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n    switch (status) {\r\n        case 200: // OK\r\n            return Code.OK;\r\n        case 400: // Bad Request\r\n            return Code.INVALID_ARGUMENT;\r\n        // Other possibilities based on the forward mapping\r\n        // return Code.FAILED_PRECONDITION;\r\n        // return Code.OUT_OF_RANGE;\r\n        case 401: // Unauthorized\r\n            return Code.UNAUTHENTICATED;\r\n        case 403: // Forbidden\r\n            return Code.PERMISSION_DENIED;\r\n        case 404: // Not Found\r\n            return Code.NOT_FOUND;\r\n        case 409: // Conflict\r\n            return Code.ABORTED;\r\n        // Other possibilities:\r\n        // return Code.ALREADY_EXISTS;\r\n        case 416: // Range Not Satisfiable\r\n            return Code.OUT_OF_RANGE;\r\n        case 429: // Too Many Requests\r\n            return Code.RESOURCE_EXHAUSTED;\r\n        case 499: // Client Closed Request\r\n            return Code.CANCELLED;\r\n        case 500: // Internal Server Error\r\n            return Code.UNKNOWN;\r\n        // Other possibilities:\r\n        // return Code.INTERNAL;\r\n        // return Code.DATA_LOSS;\r\n        case 501: // Unimplemented\r\n            return Code.UNIMPLEMENTED;\r\n        case 503: // Service Unavailable\r\n            return Code.UNAVAILABLE;\r\n        case 504: // Gateway Timeout\r\n            return Code.DEADLINE_EXCEEDED;\r\n        default:\r\n            if (status >= 200 && status < 300)\r\n                return Code.OK;\r\n            if (status >= 400 && status < 500)\r\n                return Code.FAILED_PRECONDITION;\r\n            if (status >= 500 && status < 600)\r\n                return Code.INTERNAL;\r\n            return Code.UNKNOWN;\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SortedSet is an immutable (copy-on-write) collection that holds elements\r\n * in order specified by the provided comparator.\r\n *\r\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\r\n * be equal!\r\n */\r\nvar SortedSet = /** @class */ (function () {\r\n    function SortedSet(comparator) {\r\n        this.comparator = comparator;\r\n        this.data = new SortedMap(this.comparator);\r\n    }\r\n    /**\r\n     * Creates a SortedSet from the keys of the map.\r\n     * This is currently implemented as an O(n) copy.\r\n     */\r\n    SortedSet.fromMapKeys = function (map) {\r\n        var keys = new SortedSet(map.comparator);\r\n        map.forEach(function (key) {\r\n            keys = keys.add(key);\r\n        });\r\n        return keys;\r\n    };\r\n    SortedSet.prototype.has = function (elem) {\r\n        return this.data.get(elem) !== null;\r\n    };\r\n    SortedSet.prototype.first = function () {\r\n        return this.data.minKey();\r\n    };\r\n    SortedSet.prototype.last = function () {\r\n        return this.data.maxKey();\r\n    };\r\n    Object.defineProperty(SortedSet.prototype, \"size\", {\r\n        get: function () {\r\n            return this.data.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SortedSet.prototype.indexOf = function (elem) {\r\n        return this.data.indexOf(elem);\r\n    };\r\n    /** Iterates elements in order defined by \"comparator\" */\r\n    SortedSet.prototype.forEach = function (cb) {\r\n        this.data.inorderTraversal(function (k, v) {\r\n            cb(k);\r\n            return false;\r\n        });\r\n    };\r\n    /** Iterates over `elem`s such that: range[0] <= elem < range[1]. */\r\n    SortedSet.prototype.forEachInRange = function (range, cb) {\r\n        var iter = this.data.getIteratorFrom(range[0]);\r\n        while (iter.hasNext()) {\r\n            var elem = iter.getNext();\r\n            if (this.comparator(elem.key, range[1]) >= 0)\r\n                return;\r\n            cb(elem.key);\r\n        }\r\n    };\r\n    /**\r\n     * Iterates over `elem`s such that: start <= elem until false is returned.\r\n     */\r\n    SortedSet.prototype.forEachWhile = function (cb, start) {\r\n        var iter;\r\n        if (start !== undefined) {\r\n            iter = this.data.getIteratorFrom(start);\r\n        }\r\n        else {\r\n            iter = this.data.getIterator();\r\n        }\r\n        while (iter.hasNext()) {\r\n            var elem = iter.getNext();\r\n            var result = cb(elem.key);\r\n            if (!result)\r\n                return;\r\n        }\r\n    };\r\n    /** Finds the least element greater than or equal to `elem`. */\r\n    SortedSet.prototype.firstAfterOrEqual = function (elem) {\r\n        var iter = this.data.getIteratorFrom(elem);\r\n        return iter.hasNext() ? iter.getNext().key : null;\r\n    };\r\n    /** Inserts or updates an element */\r\n    SortedSet.prototype.add = function (elem) {\r\n        return this.copy(this.data.remove(elem).insert(elem, true));\r\n    };\r\n    /** Deletes an element */\r\n    SortedSet.prototype.delete = function (elem) {\r\n        if (!this.has(elem))\r\n            return this;\r\n        return this.copy(this.data.remove(elem));\r\n    };\r\n    SortedSet.prototype.isEmpty = function () {\r\n        return this.data.isEmpty();\r\n    };\r\n    SortedSet.prototype.unionWith = function (other) {\r\n        var result = this;\r\n        other.forEach(function (elem) {\r\n            result = result.add(elem);\r\n        });\r\n        return result;\r\n    };\r\n    SortedSet.prototype.isEqual = function (other) {\r\n        if (!(other instanceof SortedSet))\r\n            return false;\r\n        if (this.size !== other.size)\r\n            return false;\r\n        var thisIt = this.data.getIterator();\r\n        var otherIt = other.data.getIterator();\r\n        while (thisIt.hasNext()) {\r\n            var thisElem = thisIt.getNext().key;\r\n            var otherElem = otherIt.getNext().key;\r\n            if (this.comparator(thisElem, otherElem) !== 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    SortedSet.prototype.toString = function () {\r\n        var result = [];\r\n        this.forEach(function (elem) { return result.push(elem); });\r\n        return 'SortedSet(' + result.toString() + ')';\r\n    };\r\n    SortedSet.prototype.copy = function (data) {\r\n        var result = new SortedSet(this.comparator);\r\n        result.data = data;\r\n        return result;\r\n    };\r\n    return SortedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar EMPTY_MAYBE_DOCUMENT_MAP = new SortedMap(DocumentKey.comparator);\r\nfunction maybeDocumentMap() {\r\n    return EMPTY_MAYBE_DOCUMENT_MAP;\r\n}\r\nvar EMPTY_DOCUMENT_MAP = new SortedMap(DocumentKey.comparator);\r\nfunction documentMap() {\r\n    return EMPTY_DOCUMENT_MAP;\r\n}\r\nvar EMPTY_DOCUMENT_VERSION_MAP = new SortedMap(DocumentKey.comparator);\r\nfunction documentVersionMap() {\r\n    return EMPTY_DOCUMENT_VERSION_MAP;\r\n}\r\nvar EMPTY_DOCUMENT_KEY_SET = new SortedSet(DocumentKey.comparator);\r\nfunction documentKeySet() {\r\n    return EMPTY_DOCUMENT_KEY_SET;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event from the RemoteStore. It is split into targetChanges (changes to the\r\n * state or the set of documents in our watched targets) and documentUpdates\r\n * (changes to the actual documents).\r\n */\r\nvar RemoteEvent = /** @class */ (function () {\r\n    function RemoteEvent(\r\n    /**\r\n     * The snapshot version this event brings us up to, or MIN if not set.\r\n     */\r\n    snapshotVersion, \r\n    /**\r\n     * A map from target to changes to the target. See TargetChange.\r\n     */\r\n    targetChanges, \r\n    /**\r\n     * A set of which documents have changed or been deleted, along with the\r\n     * doc's new values (if not deleted).\r\n     */\r\n    documentUpdates, \r\n    /**\r\n     * A set of which document updates are due only to limbo resolution targets.\r\n     */\r\n    limboDocuments) {\r\n        this.snapshotVersion = snapshotVersion;\r\n        this.targetChanges = targetChanges;\r\n        this.documentUpdates = documentUpdates;\r\n        this.limboDocuments = limboDocuments;\r\n    }\r\n    RemoteEvent.prototype.addDocumentUpdate = function (doc) {\r\n        this.documentUpdates = this.documentUpdates.insert(doc.key, doc);\r\n    };\r\n    RemoteEvent.prototype.handleExistenceFilterMismatch = function (targetId) {\r\n        /*\r\n         * An existence filter mismatch will reset the query and we need to reset\r\n         * the mapping to contain no documents and an empty resume token.\r\n         *\r\n         * Note:\r\n         *   * The reset mapping is empty, specifically forcing the consumer of the\r\n         *     change to forget all keys for this targetID;\r\n         *   * The resume snapshot for this target must be reset\r\n         *   * The target must be unacked because unwatching and rewatching\r\n         *     introduces a race for changes.\r\n         */\r\n        this.targetChanges[targetId] = {\r\n            mapping: new ResetMapping(),\r\n            snapshotVersion: SnapshotVersion.MIN,\r\n            currentStatusUpdate: CurrentStatusUpdate.MarkNotCurrent,\r\n            resumeToken: emptyByteString()\r\n        };\r\n    };\r\n    /**\r\n     * Synthesize a delete change if necessary for the given limbo target.\r\n     */\r\n    RemoteEvent.prototype.synthesizeDeleteForLimboTargetChange = function (targetChange, key) {\r\n        if (targetChange.currentStatusUpdate === CurrentStatusUpdate.MarkCurrent &&\r\n            !this.documentUpdates.get(key)) {\r\n            // When listening to a query the server responds with a snapshot\r\n            // containing documents matching the query and a current marker\r\n            // telling us we're now in sync. It's possible for these to arrive\r\n            // as separate remote events or as a single remote event.\r\n            // For a document query, there will be no documents sent in the\r\n            // response if the document doesn't exist.\r\n            //\r\n            // If the snapshot arrives separately from the current marker,\r\n            // we handle it normally and updateTrackedLimbos will resolve the\r\n            // limbo status of the document, removing it from limboDocumentRefs.\r\n            // This works because clients only initiate limbo resolution when\r\n            // a target is current and because all current targets are\r\n            // always at a consistent snapshot.\r\n            //\r\n            // However, if the document doesn't exist and the current marker\r\n            // arrives, the document is not present in the snapshot and our\r\n            // normal view handling would consider the document to remain in\r\n            // limbo indefinitely because there are no updates to the document.\r\n            // To avoid this, we specially handle this case here:\r\n            // synthesizing a delete.\r\n            //\r\n            // TODO(dimond): Ideally we would have an explicit lookup query\r\n            // instead resulting in an explicit delete message and we could\r\n            // remove this special logic.\r\n            this.documentUpdates = this.documentUpdates.insert(key, new NoDocument(key, this.snapshotVersion));\r\n            this.limboDocuments = this.limboDocuments.add(key);\r\n        }\r\n    };\r\n    return RemoteEvent;\r\n}());\r\n/**\r\n * Represents an update to the current status of a target, either explicitly\r\n * having no new state, or the new value to set. Note \"current\" has special\r\n * meaning for in the RPC protocol that implies that a target is both up-to-date\r\n * and consistent with the rest of the watch stream.\r\n */\r\nvar CurrentStatusUpdate;\r\n(function (CurrentStatusUpdate) {\r\n    /** The current status is not affected and should not be modified. */\r\n    CurrentStatusUpdate[CurrentStatusUpdate[\"None\"] = 0] = \"None\";\r\n    /** The target must be marked as no longer \"current\". */\r\n    CurrentStatusUpdate[CurrentStatusUpdate[\"MarkNotCurrent\"] = 1] = \"MarkNotCurrent\";\r\n    /** The target must be marked as \"current\". */\r\n    CurrentStatusUpdate[CurrentStatusUpdate[\"MarkCurrent\"] = 2] = \"MarkCurrent\";\r\n})(CurrentStatusUpdate || (CurrentStatusUpdate = {}));\r\nvar EMPTY_KEY_SET = documentKeySet();\r\nvar ResetMapping = /** @class */ (function () {\r\n    function ResetMapping() {\r\n        this.docs = EMPTY_KEY_SET;\r\n    }\r\n    Object.defineProperty(ResetMapping.prototype, \"documents\", {\r\n        get: function () {\r\n            return this.docs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ResetMapping.prototype.add = function (key) {\r\n        this.docs = this.docs.add(key);\r\n    };\r\n    ResetMapping.prototype.delete = function (key) {\r\n        this.docs = this.docs.delete(key);\r\n    };\r\n    ResetMapping.prototype.isEqual = function (other) {\r\n        return other !== null && this.docs.isEqual(other.docs);\r\n    };\r\n    ResetMapping.prototype.filterUpdates = function (existingKeys) {\r\n        // No-op. Resets don't get filtered.\r\n    };\r\n    return ResetMapping;\r\n}());\r\nvar UpdateMapping = /** @class */ (function () {\r\n    function UpdateMapping() {\r\n        this.addedDocuments = EMPTY_KEY_SET;\r\n        this.removedDocuments = EMPTY_KEY_SET;\r\n    }\r\n    UpdateMapping.prototype.applyToKeySet = function (keys) {\r\n        var result = keys;\r\n        this.addedDocuments.forEach(function (key) { return (result = result.add(key)); });\r\n        this.removedDocuments.forEach(function (key) { return (result = result.delete(key)); });\r\n        return result;\r\n    };\r\n    UpdateMapping.prototype.add = function (key) {\r\n        this.addedDocuments = this.addedDocuments.add(key);\r\n        this.removedDocuments = this.removedDocuments.delete(key);\r\n    };\r\n    UpdateMapping.prototype.delete = function (key) {\r\n        this.addedDocuments = this.addedDocuments.delete(key);\r\n        this.removedDocuments = this.removedDocuments.add(key);\r\n    };\r\n    UpdateMapping.prototype.isEqual = function (other) {\r\n        return (other !== null &&\r\n            this.addedDocuments.isEqual(other.addedDocuments) &&\r\n            this.removedDocuments.isEqual(other.removedDocuments));\r\n    };\r\n    /**\r\n     * Strips out mapping changes that aren't actually changes. That is, if the document already\r\n     * existed in the target, and is being added in the target, and this is not a reset, we can\r\n     * skip doing the work to associate the document with the target because it has already been done.\r\n     */\r\n    UpdateMapping.prototype.filterUpdates = function (existingKeys) {\r\n        var results = this.addedDocuments;\r\n        this.addedDocuments.forEach(function (docKey) {\r\n            if (existingKeys.has(docKey)) {\r\n                results = results.delete(docKey);\r\n            }\r\n        });\r\n        this.addedDocuments = results;\r\n    };\r\n    return UpdateMapping;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a changed document and a list of target ids to which this change\r\n * applies.\r\n *\r\n * If document has been deleted NoDocument will be provided.\r\n */\r\nvar DocumentWatchChange = /** @class */ (function () {\r\n    function DocumentWatchChange(\r\n    /** The new document applies to all of these targets. */\r\n    updatedTargetIds, \r\n    /** The new document is removed from all of these targets. */\r\n    removedTargetIds, \r\n    /** The key of the document for this change. */\r\n    key, \r\n    /**\r\n     * The new document or NoDocument if it was deleted. Is null if the\r\n     * document went out of view without the server sending a new document.\r\n     */\r\n    newDoc) {\r\n        this.updatedTargetIds = updatedTargetIds;\r\n        this.removedTargetIds = removedTargetIds;\r\n        this.key = key;\r\n        this.newDoc = newDoc;\r\n    }\r\n    return DocumentWatchChange;\r\n}());\r\nvar ExistenceFilterChange = /** @class */ (function () {\r\n    function ExistenceFilterChange(targetId, existenceFilter) {\r\n        this.targetId = targetId;\r\n        this.existenceFilter = existenceFilter;\r\n    }\r\n    return ExistenceFilterChange;\r\n}());\r\nvar WatchTargetChangeState;\r\n(function (WatchTargetChangeState) {\r\n    WatchTargetChangeState[WatchTargetChangeState[\"NoChange\"] = 0] = \"NoChange\";\r\n    WatchTargetChangeState[WatchTargetChangeState[\"Added\"] = 1] = \"Added\";\r\n    WatchTargetChangeState[WatchTargetChangeState[\"Removed\"] = 2] = \"Removed\";\r\n    WatchTargetChangeState[WatchTargetChangeState[\"Current\"] = 3] = \"Current\";\r\n    WatchTargetChangeState[WatchTargetChangeState[\"Reset\"] = 4] = \"Reset\";\r\n})(WatchTargetChangeState || (WatchTargetChangeState = {}));\r\nvar WatchTargetChange = /** @class */ (function () {\r\n    function WatchTargetChange(\r\n    /** What kind of change occurred to the watch target. */\r\n    state, \r\n    /** The target IDs that were added/removed/set. */\r\n    targetIds, \r\n    /**\r\n     * An opaque, server-assigned token that allows watching a query to be\r\n     * resumed after disconnecting without retransmitting all the data that\r\n     * matches the query. The resume token essentially identifies a point in\r\n     * time from which the server should resume sending results.\r\n     */\r\n    resumeToken, \r\n    /** An RPC error indicating why the watch failed. */\r\n    cause) {\r\n        if (resumeToken === void 0) { resumeToken = emptyByteString(); }\r\n        if (cause === void 0) { cause = null; }\r\n        this.state = state;\r\n        this.targetIds = targetIds;\r\n        this.resumeToken = resumeToken;\r\n        this.cause = cause;\r\n    }\r\n    return WatchTargetChange;\r\n}());\r\n/**\r\n * A helper class to accumulate watch changes into a RemoteEvent and other\r\n * target information.\r\n */\r\nvar WatchChangeAggregator = /** @class */ (function () {\r\n    function WatchChangeAggregator(snapshotVersion, listenTargets, pendingTargetResponses) {\r\n        this.snapshotVersion = snapshotVersion;\r\n        this.listenTargets = listenTargets;\r\n        /** The existence filter - if any - for the given target IDs. */\r\n        this.existenceFilters = {};\r\n        /** Keeps track of the current target mappings */\r\n        this.targetChanges = {};\r\n        /** Keeps track of document to update */\r\n        this.documentUpdates = maybeDocumentMap();\r\n        /** Whether this aggregator was frozen and can no longer be modified */\r\n        this.frozen = false;\r\n        /** Tracks which document updates are due only to limbo target resolution */\r\n        this.limboDocuments = documentKeySet();\r\n        this.pendingTargetResponses = shallowCopy(pendingTargetResponses);\r\n    }\r\n    /** Aggregates a watch change into the current state */\r\n    WatchChangeAggregator.prototype.add = function (watchChange) {\r\n        assert(!this.frozen, 'Trying to modify frozen WatchChangeAggregator.');\r\n        if (watchChange instanceof DocumentWatchChange) {\r\n            this.addDocumentChange(watchChange);\r\n        }\r\n        else if (watchChange instanceof WatchTargetChange) {\r\n            this.addTargetChange(watchChange);\r\n        }\r\n        else if (watchChange instanceof ExistenceFilterChange) {\r\n            this.addExistenceFilterChange(watchChange);\r\n        }\r\n        else {\r\n            fail('Unknown watch change: ' + watchChange);\r\n        }\r\n    };\r\n    /** Aggregates all provided watch changes to the current state in order */\r\n    WatchChangeAggregator.prototype.addChanges = function (watchChanges) {\r\n        var _this = this;\r\n        assert(!this.frozen, 'Trying to modify frozen WatchChangeAggregator.');\r\n        watchChanges.forEach(function (change) { return _this.add(change); });\r\n    };\r\n    /**\r\n     * Converts the current state into a remote event with the snapshot version\r\n     * provided via the constructor.\r\n     */\r\n    WatchChangeAggregator.prototype.createRemoteEvent = function () {\r\n        var _this = this;\r\n        var targetChanges = this.targetChanges;\r\n        // Remove all the non-active targets from the remote event.\r\n        forEachNumber(this.targetChanges, function (targetId) {\r\n            if (!_this.isActiveTarget(targetId)) {\r\n                delete targetChanges[targetId];\r\n            }\r\n        });\r\n        // Mark this aggregator as frozen so no further modifications are made\r\n        this.frozen = true;\r\n        return new RemoteEvent(this.snapshotVersion, targetChanges, this.documentUpdates, this.limboDocuments);\r\n    };\r\n    WatchChangeAggregator.prototype.ensureTargetChange = function (targetId) {\r\n        var change = this.targetChanges[targetId];\r\n        if (!change) {\r\n            // Create an UpdateMapping by default, since resets are always explicit.\r\n            change = {\r\n                currentStatusUpdate: CurrentStatusUpdate.None,\r\n                snapshotVersion: this.snapshotVersion,\r\n                mapping: new UpdateMapping(),\r\n                resumeToken: emptyByteString()\r\n            };\r\n            this.targetChanges[targetId] = change;\r\n        }\r\n        return change;\r\n    };\r\n    /**\r\n     * Returns the QueryData instance for the given targetId if the target is\r\n     * active, or null otherwise. For a target to be considered active there must\r\n     * be no pending acks we're waiting for and it must be in the current list of\r\n     * targets that the client cares about.\r\n     */\r\n    WatchChangeAggregator.prototype.queryDataForActiveTarget = function (targetId) {\r\n        var queryData = this.listenTargets[targetId];\r\n        return queryData &&\r\n            !contains(this.pendingTargetResponses, targetId)\r\n            ? queryData\r\n            : null;\r\n    };\r\n    /**\r\n     * Defers to queryForActiveTarget to determine if the given targetId\r\n     * corresponds to an active target.\r\n     *\r\n     * This method is visible for testing.\r\n     */\r\n    WatchChangeAggregator.prototype.isActiveTarget = function (targetId) {\r\n        return this.queryDataForActiveTarget(targetId) !== null;\r\n    };\r\n    /**\r\n     * Updates limbo document tracking for a given target-document mapping change.\r\n     * If the target is a limbo target, and the change for the document has only\r\n     * seen limbo targets so far, and we are not already tracking a change for\r\n     * this document, then consider this document a limbo document update.\r\n     * Otherwise, ensure that we don't consider this document a limbo document.\r\n     * Returns true if the change still has only seen limbo resolution changes.\r\n     */\r\n    WatchChangeAggregator.prototype.updateLimboDocuments = function (key, queryData, isOnlyLimbo) {\r\n        if (!isOnlyLimbo) {\r\n            // It wasn't a limbo doc before, so it definitely isn't now.\r\n            return false;\r\n        }\r\n        if (!this.documentUpdates.get(key)) {\r\n            // We haven't seen the document update for this key yet.\r\n            if (queryData.purpose === QueryPurpose.LimboResolution) {\r\n                this.limboDocuments = this.limboDocuments.add(key);\r\n                return true;\r\n            }\r\n            else {\r\n                // We haven't seen the document before, but this is a non-limbo target.\r\n                // Since we haven't seen it, we know it's not in our set of limbo docs.\r\n                // Return false to ensure that this key is marked as non-limbo.\r\n                return false;\r\n            }\r\n        }\r\n        else if (queryData.purpose === QueryPurpose.LimboResolution) {\r\n            // We have only seen limbo targets so far for this document, and this is\r\n            // another limbo target.\r\n            return true;\r\n        }\r\n        else {\r\n            // We haven't marked this as non-limbo yet, but this target is not a limbo\r\n            // target. Mark the key as non-limbo and make sure it isn't in our set.\r\n            this.limboDocuments = this.limboDocuments.delete(key);\r\n            return false;\r\n        }\r\n    };\r\n    WatchChangeAggregator.prototype.addDocumentChange = function (docChange) {\r\n        var relevant = false;\r\n        var isOnlyLimbo = true;\r\n        for (var _i = 0, _a = docChange.updatedTargetIds; _i < _a.length; _i++) {\r\n            var targetId = _a[_i];\r\n            var queryData = this.queryDataForActiveTarget(targetId);\r\n            if (queryData) {\r\n                var change = this.ensureTargetChange(targetId);\r\n                isOnlyLimbo = this.updateLimboDocuments(docChange.key, queryData, isOnlyLimbo);\r\n                change.mapping.add(docChange.key);\r\n                relevant = true;\r\n            }\r\n        }\r\n        for (var _b = 0, _c = docChange.removedTargetIds; _b < _c.length; _b++) {\r\n            var targetId = _c[_b];\r\n            var queryData = this.queryDataForActiveTarget(targetId);\r\n            if (queryData) {\r\n                var change = this.ensureTargetChange(targetId);\r\n                isOnlyLimbo = this.updateLimboDocuments(docChange.key, queryData, isOnlyLimbo);\r\n                change.mapping.delete(docChange.key);\r\n                relevant = true;\r\n            }\r\n        }\r\n        // Only update the document if there is a new document to replace to an\r\n        // active target that is being listened to, this might be just a target\r\n        // update instead.\r\n        if (docChange.newDoc && relevant) {\r\n            this.documentUpdates = this.documentUpdates.insert(docChange.key, docChange.newDoc);\r\n        }\r\n    };\r\n    WatchChangeAggregator.prototype.addTargetChange = function (targetChange) {\r\n        var _this = this;\r\n        targetChange.targetIds.forEach(function (targetId) {\r\n            var change = _this.ensureTargetChange(targetId);\r\n            switch (targetChange.state) {\r\n                case WatchTargetChangeState.NoChange:\r\n                    if (_this.isActiveTarget(targetId)) {\r\n                        // Creating the change above satisfies the semantics of no-change.\r\n                        applyResumeToken(change, targetChange.resumeToken);\r\n                    }\r\n                    break;\r\n                case WatchTargetChangeState.Added:\r\n                    // We need to decrement the number of pending acks needed from watch\r\n                    // for this targetId.\r\n                    _this.recordTargetResponse(targetId);\r\n                    if (!contains(_this.pendingTargetResponses, targetId)) {\r\n                        // We have a freshly added target, so we need to reset any state\r\n                        // that we had previously This can happen e.g. when remove and add\r\n                        // back a target for existence filter mismatches.\r\n                        change.mapping = new UpdateMapping();\r\n                        change.currentStatusUpdate = CurrentStatusUpdate.None;\r\n                        delete _this.existenceFilters[targetId];\r\n                    }\r\n                    applyResumeToken(change, targetChange.resumeToken);\r\n                    break;\r\n                case WatchTargetChangeState.Removed:\r\n                    // We need to keep track of removed targets to we can\r\n                    // post-filter and remove any target changes.\r\n                    // We need to decrement the number of pending acks needed from watch\r\n                    // for this targetId.\r\n                    _this.recordTargetResponse(targetId);\r\n                    assert(!targetChange.cause, 'WatchChangeAggregator does not handle errored targets');\r\n                    break;\r\n                case WatchTargetChangeState.Current:\r\n                    if (_this.isActiveTarget(targetId)) {\r\n                        change.currentStatusUpdate = CurrentStatusUpdate.MarkCurrent;\r\n                        applyResumeToken(change, targetChange.resumeToken);\r\n                    }\r\n                    break;\r\n                case WatchTargetChangeState.Reset:\r\n                    if (_this.isActiveTarget(targetId)) {\r\n                        // Overwrite any existing target mapping with a reset\r\n                        // mapping. Every subsequent update will modify the reset\r\n                        // mapping, not an update mapping.\r\n                        change.mapping = new ResetMapping();\r\n                        applyResumeToken(change, targetChange.resumeToken);\r\n                    }\r\n                    break;\r\n                default:\r\n                    fail('Unknown target watch change state: ' + targetChange.state);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Record that we get a watch target add/remove by decrementing the number of\r\n     * pending target responses that we have.\r\n     */\r\n    WatchChangeAggregator.prototype.recordTargetResponse = function (targetId) {\r\n        var newCount = (this.pendingTargetResponses[targetId] || 0) - 1;\r\n        if (newCount === 0) {\r\n            delete this.pendingTargetResponses[targetId];\r\n        }\r\n        else {\r\n            this.pendingTargetResponses[targetId] = newCount;\r\n        }\r\n    };\r\n    WatchChangeAggregator.prototype.addExistenceFilterChange = function (change) {\r\n        if (this.isActiveTarget(change.targetId)) {\r\n            this.existenceFilters[change.targetId] = change.existenceFilter;\r\n        }\r\n    };\r\n    return WatchChangeAggregator;\r\n}());\r\n/**\r\n * Applies the resume token to the TargetChange, but only when it has a new\r\n * value. null and empty resumeTokens are discarded.\r\n */\r\nfunction applyResumeToken(change, resumeToken) {\r\n    if (resumeToken.length > 0) {\r\n        change.resumeToken = resumeToken;\r\n    }\r\n}\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Transforms a value into a server-generated timestamp. */\r\nvar ServerTimestampTransform = /** @class */ (function () {\r\n    function ServerTimestampTransform() {\r\n    }\r\n    ServerTimestampTransform.prototype.applyToLocalView = function (previousValue, localWriteTime) {\r\n        return new ServerTimestampValue(localWriteTime, previousValue);\r\n    };\r\n    ServerTimestampTransform.prototype.applyToRemoteDocument = function (previousValue, transformResult) {\r\n        return transformResult;\r\n    };\r\n    ServerTimestampTransform.prototype.isEqual = function (other) {\r\n        return other instanceof ServerTimestampTransform;\r\n    };\r\n    ServerTimestampTransform.instance = new ServerTimestampTransform();\r\n    return ServerTimestampTransform;\r\n}());\r\n/** Transforms an array value via a union operation. */\r\nvar ArrayUnionTransformOperation = /** @class */ (function () {\r\n    function ArrayUnionTransformOperation(elements) {\r\n        this.elements = elements;\r\n    }\r\n    ArrayUnionTransformOperation.prototype.applyToLocalView = function (previousValue, localWriteTime) {\r\n        return this.apply(previousValue);\r\n    };\r\n    ArrayUnionTransformOperation.prototype.applyToRemoteDocument = function (previousValue, transformResult) {\r\n        // The server just sends null as the transform result for array operations,\r\n        // so we have to calculate a result the same as we do for local\r\n        // applications.\r\n        return this.apply(previousValue);\r\n    };\r\n    ArrayUnionTransformOperation.prototype.apply = function (previousValue) {\r\n        var result = coercedFieldValuesArray(previousValue);\r\n        var _loop_1 = function (toUnion) {\r\n            if (!result.find(function (element) { return element.isEqual(toUnion); })) {\r\n                result.push(toUnion);\r\n            }\r\n        };\r\n        for (var _i = 0, _a = this.elements; _i < _a.length; _i++) {\r\n            var toUnion = _a[_i];\r\n            _loop_1(toUnion);\r\n        }\r\n        return new ArrayValue(result);\r\n    };\r\n    ArrayUnionTransformOperation.prototype.isEqual = function (other) {\r\n        return (other instanceof ArrayUnionTransformOperation &&\r\n            arrayEquals(other.elements, this.elements));\r\n    };\r\n    return ArrayUnionTransformOperation;\r\n}());\r\n/** Transforms an array value via a remove operation. */\r\nvar ArrayRemoveTransformOperation = /** @class */ (function () {\r\n    function ArrayRemoveTransformOperation(elements) {\r\n        this.elements = elements;\r\n    }\r\n    ArrayRemoveTransformOperation.prototype.applyToLocalView = function (previousValue, localWriteTime) {\r\n        return this.apply(previousValue);\r\n    };\r\n    ArrayRemoveTransformOperation.prototype.applyToRemoteDocument = function (previousValue, transformResult) {\r\n        // The server just sends null as the transform result for array operations,\r\n        // so we have to calculate a result the same as we do for local\r\n        // applications.\r\n        return this.apply(previousValue);\r\n    };\r\n    ArrayRemoveTransformOperation.prototype.apply = function (previousValue) {\r\n        var result = coercedFieldValuesArray(previousValue);\r\n        var _loop_2 = function (toRemove) {\r\n            result = result.filter(function (element) { return !element.isEqual(toRemove); });\r\n        };\r\n        for (var _i = 0, _a = this.elements; _i < _a.length; _i++) {\r\n            var toRemove = _a[_i];\r\n            _loop_2(toRemove);\r\n        }\r\n        return new ArrayValue(result);\r\n    };\r\n    ArrayRemoveTransformOperation.prototype.isEqual = function (other) {\r\n        return (other instanceof ArrayRemoveTransformOperation &&\r\n            arrayEquals(other.elements, this.elements));\r\n    };\r\n    return ArrayRemoveTransformOperation;\r\n}());\r\nfunction coercedFieldValuesArray(value) {\r\n    if (value instanceof ArrayValue) {\r\n        return value.internalValue.slice();\r\n    }\r\n    else {\r\n        // coerce to empty array.\r\n        return [];\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DIRECTIONS = (function () {\r\n    var dirs = {};\r\n    dirs[Direction.ASCENDING.name] = 'ASCENDING';\r\n    dirs[Direction.DESCENDING.name] = 'DESCENDING';\r\n    return dirs;\r\n})();\r\nvar OPERATORS = (function () {\r\n    var ops = {};\r\n    ops[RelationOp.LESS_THAN.name] = 'LESS_THAN';\r\n    ops[RelationOp.LESS_THAN_OR_EQUAL.name] = 'LESS_THAN_OR_EQUAL';\r\n    ops[RelationOp.GREATER_THAN.name] = 'GREATER_THAN';\r\n    ops[RelationOp.GREATER_THAN_OR_EQUAL.name] = 'GREATER_THAN_OR_EQUAL';\r\n    ops[RelationOp.EQUAL.name] = 'EQUAL';\r\n    ops[RelationOp.ARRAY_CONTAINS.name] = 'ARRAY_CONTAINS';\r\n    return ops;\r\n})();\r\n// A RegExp matching ISO 8601 UTC timestamps with optional fraction.\r\nvar ISO_REG_EXP = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\r\nfunction assertPresent(value, description) {\r\n    assert(!isNullOrUndefined(value), description + ' is missing');\r\n}\r\nfunction parseInt64(value) {\r\n    // TODO(bjornick): Handle int64 greater than 53 bits.\r\n    if (typeof value === 'number') {\r\n        return value;\r\n    }\r\n    else if (typeof value === 'string') {\r\n        return Number(value);\r\n    }\r\n    else {\r\n        return fail(\"can't parse \" + value);\r\n    }\r\n}\r\n/**\r\n * Generates JsonObject values for the Datastore API suitable for sending to\r\n * either GRPC stub methods or via the JSON/HTTP REST API.\r\n * TODO(klimt): We can remove the databaseId argument if we keep the full\r\n * resource name in documents.\r\n */\r\nvar JsonProtoSerializer = /** @class */ (function () {\r\n    function JsonProtoSerializer(databaseId, options) {\r\n        this.databaseId = databaseId;\r\n        this.options = options;\r\n    }\r\n    JsonProtoSerializer.prototype.emptyByteString = function () {\r\n        if (this.options.useProto3Json) {\r\n            return '';\r\n        }\r\n        else {\r\n            return new Uint8Array(0);\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.unsafeCastProtoByteString = function (byteString) {\r\n        // byteStrings can be either string or UInt8Array, but the typings say\r\n        // it's always a string. Cast as string to avoid type check failing\r\n        return byteString;\r\n    };\r\n    JsonProtoSerializer.prototype.fromRpcStatus = function (status) {\r\n        var code = status.code === undefined\r\n            ? Code.UNKNOWN\r\n            : mapCodeFromRpcCode(status.code);\r\n        return new FirestoreError(code, status.message || '');\r\n    };\r\n    /**\r\n     * Returns a value for a number (or undefined) that's appropriate to put into\r\n     * a google.protobuf.Int32Value proto.\r\n     * DO NOT USE THIS FOR ANYTHING ELSE.\r\n     * This method cheats. It's typed as returning \"number\" because that's what\r\n     * our generated proto interfaces say Int32Value must be. But GRPC actually\r\n     * expects a { value: <number> } struct.\r\n     */\r\n    JsonProtoSerializer.prototype.toInt32Value = function (val) {\r\n        if (!isNullOrUndefined(val)) {\r\n            // tslint:disable-next-line:no-any We need to match generated Proto types.\r\n            return { value: val };\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a number (or null) from a google.protobuf.Int32Value proto.\r\n     * DO NOT USE THIS FOR ANYTHING ELSE.\r\n     * This method cheats. It's typed as accepting \"number\" because that's what\r\n     * our generated proto interfaces say Int32Value must be, but it actually\r\n     * accepts { value: number } to match our serialization in toInt32Value().\r\n     */\r\n    JsonProtoSerializer.prototype.fromInt32Value = function (val) {\r\n        var result;\r\n        if (typeof val === 'object') {\r\n            // tslint:disable-next-line:no-any We need to match generated Proto types.\r\n            result = val.value;\r\n        }\r\n        else {\r\n            // We accept raw numbers (without the {value: ... } wrapper) for\r\n            // compatibility with legacy persisted data.\r\n            result = val;\r\n        }\r\n        return isNullOrUndefined(result) ? null : result;\r\n    };\r\n    /**\r\n     * Returns a value for a Date that's appropriate to put into a proto.\r\n     * DO NOT USE THIS FOR ANYTHING ELSE.\r\n     * This method cheats. It's typed as returning \"string\" because that's what\r\n     * our generated proto interfaces say dates must be. But it's easier and safer\r\n     * to actually return a Timestamp proto.\r\n     */\r\n    JsonProtoSerializer.prototype.toTimestamp = function (timestamp) {\r\n        return {\r\n            seconds: timestamp.seconds,\r\n            nanos: timestamp.nanoseconds\r\n            // tslint:disable-next-line:no-any\r\n        };\r\n    };\r\n    JsonProtoSerializer.prototype.fromTimestamp = function (date) {\r\n        // The json interface (for the browser) will return an iso timestamp string,\r\n        // while the proto js library (for node) will return a\r\n        // google.protobuf.Timestamp instance.\r\n        if (typeof date === 'string') {\r\n            // TODO(b/37282237): Use strings for Proto3 timestamps\r\n            // assert(this.options.useProto3Json,\r\n            //   'The timestamp string format requires Proto3.');\r\n            return this.fromIso8601String(date);\r\n        }\r\n        else {\r\n            assert(!!date, 'Cannot deserialize null or undefined timestamp.');\r\n            // TODO(b/37282237): Use strings for Proto3 timestamps\r\n            // assert(!this.options.useProto3Json,\r\n            //   'The timestamp instance format requires Proto JS.');\r\n            var seconds = parseInt64(date.seconds || '0');\r\n            var nanos = date.nanos || 0;\r\n            return new Timestamp(seconds, nanos);\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.fromIso8601String = function (utc) {\r\n        // The date string can have higher precision (nanos) than the Date class\r\n        // (millis), so we do some custom parsing here.\r\n        // Parse the nanos right out of the string.\r\n        var nanos = 0;\r\n        var fraction = ISO_REG_EXP.exec(utc);\r\n        assert(!!fraction, 'invalid timestamp: ' + utc);\r\n        if (fraction[1]) {\r\n            // Pad the fraction out to 9 digits (nanos).\r\n            var nanoStr = fraction[1];\r\n            nanoStr = (nanoStr + '000000000').substr(0, 9);\r\n            nanos = Number(nanoStr);\r\n        }\r\n        // Parse the date to get the seconds.\r\n        var date = new Date(utc);\r\n        var seconds = Math.floor(date.getTime() / 1000);\r\n        return new Timestamp(seconds, nanos);\r\n    };\r\n    /**\r\n     * Returns a value for bytes that's appropriate to put in a proto.\r\n     * DO NOT USE THIS FOR ANYTHING ELSE.\r\n     * This method cheats. It's typed as returning \"string\" because that's what\r\n     * our generated proto interfaces say bytes must be. But it should return\r\n     * an Uint8Array in Node.\r\n     */\r\n    JsonProtoSerializer.prototype.toBytes = function (bytes) {\r\n        if (this.options.useProto3Json) {\r\n            return bytes.toBase64();\r\n        }\r\n        else {\r\n            // The typings say it's a string, but it needs to be a Uint8Array in Node.\r\n            return this.unsafeCastProtoByteString(bytes.toUint8Array());\r\n        }\r\n    };\r\n    /**\r\n     * Parse the blob from the protos into the internal Blob class. Note that the\r\n     * typings assume all blobs are strings, but they are actually Uint8Arrays\r\n     * on Node.\r\n     */\r\n    JsonProtoSerializer.prototype.fromBlob = function (blob) {\r\n        if (typeof blob === 'string') {\r\n            assert(this.options.useProto3Json, 'Expected bytes to be passed in as Uint8Array, but got a string instead.');\r\n            return Blob.fromBase64String(blob);\r\n        }\r\n        else {\r\n            assert(!this.options.useProto3Json, 'Expected bytes to be passed in as string, but got something else instead.');\r\n            return Blob.fromUint8Array(blob);\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.toVersion = function (version) {\r\n        return this.toTimestamp(version.toTimestamp());\r\n    };\r\n    JsonProtoSerializer.prototype.fromVersion = function (version) {\r\n        assert(!!version, \"Trying to deserialize version that isn't set\");\r\n        return SnapshotVersion.fromTimestamp(this.fromTimestamp(version));\r\n    };\r\n    JsonProtoSerializer.prototype.toResourceName = function (databaseId, path) {\r\n        return this.fullyQualifiedPrefixPath(databaseId)\r\n            .child('documents')\r\n            .child(path)\r\n            .canonicalString();\r\n    };\r\n    JsonProtoSerializer.prototype.fromResourceName = function (name) {\r\n        var resource = ResourcePath.fromString(name);\r\n        assert(this.isValidResourceName(resource), 'Tried to deserialize invalid key ' + resource.toString());\r\n        return resource;\r\n    };\r\n    JsonProtoSerializer.prototype.toName = function (key) {\r\n        return this.toResourceName(this.databaseId, key.path);\r\n    };\r\n    JsonProtoSerializer.prototype.fromName = function (name) {\r\n        var resource = this.fromResourceName(name);\r\n        assert(resource.get(1) === this.databaseId.projectId, 'Tried to deserialize key from different project: ' +\r\n            resource.get(1) +\r\n            ' vs ' +\r\n            this.databaseId.projectId);\r\n        assert((!resource.get(3) && !this.databaseId.database) ||\r\n            resource.get(3) === this.databaseId.database, 'Tried to deserialize key from different database: ' +\r\n            resource.get(3) +\r\n            ' vs ' +\r\n            this.databaseId.database);\r\n        return new DocumentKey(this.extractLocalPathFromResourceName(resource));\r\n    };\r\n    JsonProtoSerializer.prototype.toQueryPath = function (path) {\r\n        if (path.length === 0) {\r\n            // If the path is empty, the backend requires we leave off the /documents\r\n            // at the end.\r\n            return this.encodedDatabaseId;\r\n        }\r\n        return this.toResourceName(this.databaseId, path);\r\n    };\r\n    JsonProtoSerializer.prototype.fromQueryPath = function (name) {\r\n        var resourceName = this.fromResourceName(name);\r\n        if (resourceName.length === 4) {\r\n            return ResourcePath.EMPTY_PATH;\r\n        }\r\n        return this.extractLocalPathFromResourceName(resourceName);\r\n    };\r\n    Object.defineProperty(JsonProtoSerializer.prototype, \"encodedDatabaseId\", {\r\n        get: function () {\r\n            var path = new ResourcePath([\r\n                'projects',\r\n                this.databaseId.projectId,\r\n                'databases',\r\n                this.databaseId.database\r\n            ]);\r\n            return path.canonicalString();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    JsonProtoSerializer.prototype.fullyQualifiedPrefixPath = function (databaseId) {\r\n        return new ResourcePath([\r\n            'projects',\r\n            databaseId.projectId,\r\n            'databases',\r\n            databaseId.database\r\n        ]);\r\n    };\r\n    JsonProtoSerializer.prototype.extractLocalPathFromResourceName = function (resourceName) {\r\n        assert(resourceName.length > 4 && resourceName.get(4) === 'documents', 'tried to deserialize invalid key ' + resourceName.toString());\r\n        return resourceName.popFirst(5);\r\n    };\r\n    JsonProtoSerializer.prototype.isValidResourceName = function (path) {\r\n        // Resource names have at least 4 components (project ID, database ID)\r\n        return (path.length >= 4 &&\r\n            path.get(0) === 'projects' &&\r\n            path.get(2) === 'databases');\r\n    };\r\n    JsonProtoSerializer.prototype.toValue = function (val) {\r\n        if (val instanceof NullValue) {\r\n            return { nullValue: 'NULL_VALUE' };\r\n        }\r\n        else if (val instanceof BooleanValue) {\r\n            return { booleanValue: val.value() };\r\n        }\r\n        else if (val instanceof IntegerValue) {\r\n            return { integerValue: '' + val.value() };\r\n        }\r\n        else if (val instanceof DoubleValue) {\r\n            var doubleValue = val.value();\r\n            if (this.options.useProto3Json) {\r\n                // Proto 3 let's us encode NaN and Infinity as string values as\r\n                // expected by the backend. This is currently not checked by our unit\r\n                // tests because they rely on protobuf.js.\r\n                if (isNaN(doubleValue)) {\r\n                    return { doubleValue: 'NaN' };\r\n                }\r\n                else if (doubleValue === Infinity) {\r\n                    return { doubleValue: 'Infinity' };\r\n                }\r\n                else if (doubleValue === -Infinity) {\r\n                    return { doubleValue: '-Infinity' };\r\n                }\r\n            }\r\n            return { doubleValue: val.value() };\r\n        }\r\n        else if (val instanceof StringValue) {\r\n            return { stringValue: val.value() };\r\n        }\r\n        else if (val instanceof ObjectValue) {\r\n            return { mapValue: this.toMapValue(val) };\r\n        }\r\n        else if (val instanceof ArrayValue) {\r\n            return { arrayValue: this.toArrayValue(val) };\r\n        }\r\n        else if (val instanceof TimestampValue) {\r\n            return {\r\n                timestampValue: this.toTimestamp(val.internalValue)\r\n            };\r\n        }\r\n        else if (val instanceof GeoPointValue) {\r\n            return {\r\n                geoPointValue: {\r\n                    latitude: val.value().latitude,\r\n                    longitude: val.value().longitude\r\n                }\r\n            };\r\n        }\r\n        else if (val instanceof BlobValue) {\r\n            return {\r\n                bytesValue: this.toBytes(val.value())\r\n            };\r\n        }\r\n        else if (val instanceof RefValue) {\r\n            return {\r\n                referenceValue: this.toResourceName(val.databaseId, val.key.path)\r\n            };\r\n        }\r\n        else {\r\n            return fail('Unknown FieldValue ' + JSON.stringify(val));\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.fromValue = function (obj) {\r\n        var _this = this;\r\n        // tslint:disable-next-line:no-any\r\n        var type = obj['value_type'];\r\n        if (hasTag(obj, type, 'nullValue')) {\r\n            return NullValue.INSTANCE;\r\n        }\r\n        else if (hasTag(obj, type, 'booleanValue')) {\r\n            return BooleanValue.of(obj.booleanValue);\r\n        }\r\n        else if (hasTag(obj, type, 'integerValue')) {\r\n            return new IntegerValue(parseInt64(obj.integerValue));\r\n        }\r\n        else if (hasTag(obj, type, 'doubleValue')) {\r\n            if (this.options.useProto3Json) {\r\n                // Proto 3 uses the string values 'NaN' and 'Infinity'.\r\n                if (obj.doubleValue === 'NaN') {\r\n                    return DoubleValue.NAN;\r\n                }\r\n                else if (obj.doubleValue === 'Infinity') {\r\n                    return DoubleValue.POSITIVE_INFINITY;\r\n                }\r\n                else if (obj.doubleValue === '-Infinity') {\r\n                    return DoubleValue.NEGATIVE_INFINITY;\r\n                }\r\n            }\r\n            return new DoubleValue(obj.doubleValue);\r\n        }\r\n        else if (hasTag(obj, type, 'stringValue')) {\r\n            return new StringValue(obj.stringValue);\r\n        }\r\n        else if (hasTag(obj, type, 'mapValue')) {\r\n            return this.fromFields(obj.mapValue.fields || {});\r\n        }\r\n        else if (hasTag(obj, type, 'arrayValue')) {\r\n            // \"values\" is not present if the array is empty\r\n            assertPresent(obj.arrayValue, 'arrayValue');\r\n            var values = obj.arrayValue.values || [];\r\n            return new ArrayValue(values.map(function (v) { return _this.fromValue(v); }));\r\n        }\r\n        else if (hasTag(obj, type, 'timestampValue')) {\r\n            assertPresent(obj.timestampValue, 'timestampValue');\r\n            return new TimestampValue(this.fromTimestamp(obj.timestampValue));\r\n        }\r\n        else if (hasTag(obj, type, 'geoPointValue')) {\r\n            assertPresent(obj.geoPointValue, 'geoPointValue');\r\n            var latitude = obj.geoPointValue.latitude || 0;\r\n            var longitude = obj.geoPointValue.longitude || 0;\r\n            return new GeoPointValue(new GeoPoint(latitude, longitude));\r\n        }\r\n        else if (hasTag(obj, type, 'bytesValue')) {\r\n            assertPresent(obj.bytesValue, 'bytesValue');\r\n            var blob = this.fromBlob(obj.bytesValue);\r\n            return new BlobValue(blob);\r\n        }\r\n        else if (hasTag(obj, type, 'referenceValue')) {\r\n            assertPresent(obj.referenceValue, 'referenceValue');\r\n            var resourceName = this.fromResourceName(obj.referenceValue);\r\n            var dbId = new DatabaseId(resourceName.get(1), resourceName.get(3));\r\n            var key = new DocumentKey(this.extractLocalPathFromResourceName(resourceName));\r\n            return new RefValue(dbId, key);\r\n        }\r\n        else {\r\n            return fail('Unknown Value proto ' + JSON.stringify(obj));\r\n        }\r\n    };\r\n    /** Creates an api.Document from key and fields (but no create/update time) */\r\n    JsonProtoSerializer.prototype.toMutationDocument = function (key, fields) {\r\n        return {\r\n            name: this.toName(key),\r\n            fields: this.toFields(fields)\r\n        };\r\n    };\r\n    JsonProtoSerializer.prototype.toDocument = function (document) {\r\n        assert(!document.hasLocalMutations, \"Can't serialize documents with mutations.\");\r\n        return {\r\n            name: this.toName(document.key),\r\n            fields: this.toFields(document.data),\r\n            updateTime: this.toTimestamp(document.version.toTimestamp())\r\n        };\r\n    };\r\n    JsonProtoSerializer.prototype.fromDocument = function (document) {\r\n        return new Document(this.fromName(document.name), this.fromVersion(document.updateTime), this.fromFields(document.fields || {}), { hasLocalMutations: false });\r\n    };\r\n    JsonProtoSerializer.prototype.toFields = function (fields) {\r\n        var _this = this;\r\n        var result = {};\r\n        fields.forEach(function (key, value) {\r\n            result[key] = _this.toValue(value);\r\n        });\r\n        return result;\r\n    };\r\n    JsonProtoSerializer.prototype.fromFields = function (object) {\r\n        var _this = this;\r\n        // Proto map<string, Value> gets mapped to Object, so cast it.\r\n        var map = object;\r\n        var result = ObjectValue.EMPTY;\r\n        forEach(map, function (key, value) {\r\n            result = result.set(new FieldPath([key]), _this.fromValue(value));\r\n        });\r\n        return result;\r\n    };\r\n    JsonProtoSerializer.prototype.toMapValue = function (map) {\r\n        return {\r\n            fields: this.toFields(map)\r\n        };\r\n    };\r\n    JsonProtoSerializer.prototype.toArrayValue = function (array) {\r\n        var _this = this;\r\n        var result = [];\r\n        array.forEach(function (value) {\r\n            result.push(_this.toValue(value));\r\n        });\r\n        return { values: result };\r\n    };\r\n    JsonProtoSerializer.prototype.fromFound = function (doc) {\r\n        assert(!!doc.found, 'Tried to deserialize a found document from a missing document.');\r\n        assertPresent(doc.found.name, 'doc.found.name');\r\n        assertPresent(doc.found.updateTime, 'doc.found.updateTime');\r\n        var key = this.fromName(doc.found.name);\r\n        var version = this.fromVersion(doc.found.updateTime);\r\n        var fields = this.fromFields(doc.found.fields || {});\r\n        return new Document(key, version, fields, { hasLocalMutations: false });\r\n    };\r\n    JsonProtoSerializer.prototype.fromMissing = function (result) {\r\n        assert(!!result.missing, 'Tried to deserialize a missing document from a found document.');\r\n        assert(!!result.readTime, 'Tried to deserialize a missing document without a read time.');\r\n        var key = this.fromName(result.missing);\r\n        var version = this.fromVersion(result.readTime);\r\n        return new NoDocument(key, version);\r\n    };\r\n    JsonProtoSerializer.prototype.fromMaybeDocument = function (result) {\r\n        // tslint:disable-next-line:no-any\r\n        var type = result['result'];\r\n        if (hasTag(result, type, 'found')) {\r\n            return this.fromFound(result);\r\n        }\r\n        else if (hasTag(result, type, 'missing')) {\r\n            return this.fromMissing(result);\r\n        }\r\n        return fail('invalid batch get response: ' + JSON.stringify(result));\r\n    };\r\n    JsonProtoSerializer.prototype.toWatchTargetChangeState = function (state) {\r\n        switch (state) {\r\n            case WatchTargetChangeState.Added:\r\n                return 'ADD';\r\n            case WatchTargetChangeState.Current:\r\n                return 'CURRENT';\r\n            case WatchTargetChangeState.NoChange:\r\n                return 'NO_CHANGE';\r\n            case WatchTargetChangeState.Removed:\r\n                return 'REMOVE';\r\n            case WatchTargetChangeState.Reset:\r\n                return 'RESET';\r\n            default:\r\n                return fail('Unknown WatchTargetChangeState: ' + state);\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.toTestWatchChange = function (watchChange) {\r\n        if (watchChange instanceof ExistenceFilterChange) {\r\n            return {\r\n                filter: {\r\n                    count: watchChange.existenceFilter.count,\r\n                    targetId: watchChange.targetId\r\n                }\r\n            };\r\n        }\r\n        if (watchChange instanceof DocumentWatchChange) {\r\n            if (watchChange.newDoc instanceof Document) {\r\n                var doc = watchChange.newDoc;\r\n                return {\r\n                    documentChange: {\r\n                        document: {\r\n                            name: this.toName(doc.key),\r\n                            fields: this.toFields(doc.data),\r\n                            updateTime: this.toVersion(doc.version)\r\n                        },\r\n                        targetIds: watchChange.updatedTargetIds,\r\n                        removedTargetIds: watchChange.removedTargetIds\r\n                    }\r\n                };\r\n            }\r\n            else if (watchChange.newDoc instanceof NoDocument) {\r\n                var doc = watchChange.newDoc;\r\n                return {\r\n                    documentDelete: {\r\n                        document: this.toName(doc.key),\r\n                        readTime: this.toVersion(doc.version),\r\n                        removedTargetIds: watchChange.removedTargetIds\r\n                    }\r\n                };\r\n            }\r\n            else if (watchChange.newDoc === null) {\r\n                return {\r\n                    documentRemove: {\r\n                        document: this.toName(watchChange.key),\r\n                        removedTargetIds: watchChange.removedTargetIds\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        if (watchChange instanceof WatchTargetChange) {\r\n            var cause = undefined;\r\n            if (watchChange.cause) {\r\n                cause = {\r\n                    code: mapRpcCodeFromCode(watchChange.cause.code),\r\n                    message: watchChange.cause.message\r\n                };\r\n            }\r\n            return {\r\n                targetChange: {\r\n                    targetChangeType: this.toWatchTargetChangeState(watchChange.state),\r\n                    targetIds: watchChange.targetIds,\r\n                    resumeToken: this.unsafeCastProtoByteString(watchChange.resumeToken),\r\n                    cause: cause\r\n                }\r\n            };\r\n        }\r\n        return fail('Unrecognized watch change: ' + JSON.stringify(watchChange));\r\n    };\r\n    JsonProtoSerializer.prototype.fromWatchChange = function (change) {\r\n        // tslint:disable-next-line:no-any\r\n        var type = change['response_type'];\r\n        var watchChange;\r\n        if (hasTag(change, type, 'targetChange')) {\r\n            assertPresent(change.targetChange, 'targetChange');\r\n            // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\r\n            // if unset\r\n            var state = this.fromWatchTargetChangeState(change.targetChange.targetChangeType || 'NO_CHANGE');\r\n            var targetIds = change.targetChange.targetIds || [];\r\n            var resumeToken = change.targetChange.resumeToken || this.emptyByteString();\r\n            var causeProto = change.targetChange.cause;\r\n            var cause = causeProto && this.fromRpcStatus(causeProto);\r\n            watchChange = new WatchTargetChange(state, targetIds, resumeToken, cause || null);\r\n        }\r\n        else if (hasTag(change, type, 'documentChange')) {\r\n            assertPresent(change.documentChange, 'documentChange');\r\n            assertPresent(change.documentChange.document, 'documentChange.name');\r\n            assertPresent(change.documentChange.document.name, 'documentChange.document.name');\r\n            assertPresent(change.documentChange.document.updateTime, 'documentChange.document.updateTime');\r\n            var entityChange = change.documentChange;\r\n            var key = this.fromName(entityChange.document.name);\r\n            var version = this.fromVersion(entityChange.document.updateTime);\r\n            var fields = this.fromFields(entityChange.document.fields || {});\r\n            var doc = new Document(key, version, fields, {\r\n                hasLocalMutations: false\r\n            });\r\n            var updatedTargetIds = entityChange.targetIds || [];\r\n            var removedTargetIds = entityChange.removedTargetIds || [];\r\n            watchChange = new DocumentWatchChange(updatedTargetIds, removedTargetIds, doc.key, doc);\r\n        }\r\n        else if (hasTag(change, type, 'documentDelete')) {\r\n            assertPresent(change.documentDelete, 'documentDelete');\r\n            assertPresent(change.documentDelete.document, 'documentDelete.document');\r\n            var docDelete = change.documentDelete;\r\n            var key = this.fromName(docDelete.document);\r\n            var version = docDelete.readTime\r\n                ? this.fromVersion(docDelete.readTime)\r\n                : SnapshotVersion.forDeletedDoc();\r\n            var doc = new NoDocument(key, version);\r\n            var removedTargetIds = docDelete.removedTargetIds || [];\r\n            watchChange = new DocumentWatchChange([], removedTargetIds, doc.key, doc);\r\n        }\r\n        else if (hasTag(change, type, 'documentRemove')) {\r\n            assertPresent(change.documentRemove, 'documentRemove');\r\n            assertPresent(change.documentRemove.document, 'documentRemove');\r\n            var docRemove = change.documentRemove;\r\n            var key = this.fromName(docRemove.document);\r\n            var removedTargetIds = docRemove.removedTargetIds || [];\r\n            watchChange = new DocumentWatchChange([], removedTargetIds, key, null);\r\n        }\r\n        else if (hasTag(change, type, 'filter')) {\r\n            // TODO(dimond): implement existence filter parsing with strategy.\r\n            assertPresent(change.filter, 'filter');\r\n            assertPresent(change.filter.targetId, 'filter.targetId');\r\n            var filter = change.filter;\r\n            var count = filter.count || 0;\r\n            var existenceFilter = new ExistenceFilter(count);\r\n            var targetId = filter.targetId;\r\n            watchChange = new ExistenceFilterChange(targetId, existenceFilter);\r\n        }\r\n        else {\r\n            return fail('Unknown change type ' + JSON.stringify(change));\r\n        }\r\n        return watchChange;\r\n    };\r\n    JsonProtoSerializer.prototype.fromWatchTargetChangeState = function (state) {\r\n        if (state === 'NO_CHANGE') {\r\n            return WatchTargetChangeState.NoChange;\r\n        }\r\n        else if (state === 'ADD') {\r\n            return WatchTargetChangeState.Added;\r\n        }\r\n        else if (state === 'REMOVE') {\r\n            return WatchTargetChangeState.Removed;\r\n        }\r\n        else if (state === 'CURRENT') {\r\n            return WatchTargetChangeState.Current;\r\n        }\r\n        else if (state === 'RESET') {\r\n            return WatchTargetChangeState.Reset;\r\n        }\r\n        else {\r\n            return fail('Got unexpected TargetChange.state: ' + state);\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.versionFromListenResponse = function (change) {\r\n        // We have only reached a consistent snapshot for the entire stream if there\r\n        // is a read_time set and it applies to all targets (i.e. the list of\r\n        // targets is empty). The backend is guaranteed to send such responses.\r\n        // tslint:disable-next-line:no-any\r\n        var type = change['response_type'];\r\n        if (!hasTag(change, type, 'targetChange')) {\r\n            return SnapshotVersion.MIN;\r\n        }\r\n        var targetChange = change.targetChange;\r\n        if (targetChange.targetIds && targetChange.targetIds.length) {\r\n            return SnapshotVersion.MIN;\r\n        }\r\n        if (!targetChange.readTime) {\r\n            return SnapshotVersion.MIN;\r\n        }\r\n        return this.fromVersion(targetChange.readTime);\r\n    };\r\n    JsonProtoSerializer.prototype.toMutation = function (mutation) {\r\n        var _this = this;\r\n        var result;\r\n        if (mutation instanceof SetMutation) {\r\n            result = {\r\n                update: this.toMutationDocument(mutation.key, mutation.value)\r\n            };\r\n        }\r\n        else if (mutation instanceof DeleteMutation) {\r\n            result = { delete: this.toName(mutation.key) };\r\n        }\r\n        else if (mutation instanceof PatchMutation) {\r\n            result = {\r\n                update: this.toMutationDocument(mutation.key, mutation.data),\r\n                updateMask: this.toDocumentMask(mutation.fieldMask)\r\n            };\r\n        }\r\n        else if (mutation instanceof TransformMutation) {\r\n            result = {\r\n                transform: {\r\n                    document: this.toName(mutation.key),\r\n                    fieldTransforms: mutation.fieldTransforms.map(function (transform) {\r\n                        return _this.toFieldTransform(transform);\r\n                    })\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            return fail('Unknown mutation type ' + mutation.type);\r\n        }\r\n        if (!mutation.precondition.isNone) {\r\n            result.currentDocument = this.toPrecondition(mutation.precondition);\r\n        }\r\n        return result;\r\n    };\r\n    JsonProtoSerializer.prototype.fromMutation = function (proto) {\r\n        var _this = this;\r\n        var precondition = proto.currentDocument\r\n            ? this.fromPrecondition(proto.currentDocument)\r\n            : Precondition.NONE;\r\n        if (proto.update) {\r\n            assertPresent(proto.update.name, 'name');\r\n            var key = this.fromName(proto.update.name);\r\n            var value = this.fromFields(proto.update.fields || {});\r\n            if (proto.updateMask) {\r\n                var fieldMask = this.fromDocumentMask(proto.updateMask);\r\n                return new PatchMutation(key, value, fieldMask, precondition);\r\n            }\r\n            else {\r\n                return new SetMutation(key, value, precondition);\r\n            }\r\n        }\r\n        else if (proto.delete) {\r\n            var key = this.fromName(proto.delete);\r\n            return new DeleteMutation(key, precondition);\r\n        }\r\n        else if (proto.transform) {\r\n            var key = this.fromName(proto.transform.document);\r\n            var fieldTransforms = proto.transform.fieldTransforms.map(function (transform) {\r\n                return _this.fromFieldTransform(transform);\r\n            });\r\n            assert(precondition.exists === true, 'Transforms only support precondition \"exists == true\"');\r\n            return new TransformMutation(key, fieldTransforms);\r\n        }\r\n        else {\r\n            return fail('unknown mutation proto: ' + JSON.stringify(proto));\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.toPrecondition = function (precondition) {\r\n        assert(!precondition.isNone, \"Can't serialize an empty precondition\");\r\n        if (precondition.updateTime !== undefined) {\r\n            return {\r\n                updateTime: this.toVersion(precondition.updateTime)\r\n            };\r\n        }\r\n        else if (precondition.exists !== undefined) {\r\n            return { exists: precondition.exists };\r\n        }\r\n        else {\r\n            return fail('Unknown precondition');\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.fromPrecondition = function (precondition) {\r\n        if (precondition.updateTime !== undefined) {\r\n            return Precondition.updateTime(this.fromVersion(precondition.updateTime));\r\n        }\r\n        else if (precondition.exists !== undefined) {\r\n            return Precondition.exists(precondition.exists);\r\n        }\r\n        else {\r\n            return Precondition.NONE;\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.fromWriteResult = function (proto) {\r\n        var _this = this;\r\n        // NOTE: Deletes don't have an updateTime.\r\n        var version = proto.updateTime\r\n            ? this.fromVersion(proto.updateTime)\r\n            : null;\r\n        var transformResults = null;\r\n        if (proto.transformResults && proto.transformResults.length > 0) {\r\n            transformResults = proto.transformResults.map(function (result) {\r\n                return _this.fromValue(result);\r\n            });\r\n        }\r\n        return new MutationResult(version, transformResults);\r\n    };\r\n    JsonProtoSerializer.prototype.fromWriteResults = function (protos) {\r\n        var _this = this;\r\n        return (protos || []).map(function (proto) { return _this.fromWriteResult(proto); });\r\n    };\r\n    JsonProtoSerializer.prototype.toFieldTransform = function (fieldTransform) {\r\n        var _this = this;\r\n        var transform = fieldTransform.transform;\r\n        if (transform instanceof ServerTimestampTransform) {\r\n            return {\r\n                fieldPath: fieldTransform.field.canonicalString(),\r\n                setToServerValue: 'REQUEST_TIME'\r\n            };\r\n        }\r\n        else if (transform instanceof ArrayUnionTransformOperation) {\r\n            return {\r\n                fieldPath: fieldTransform.field.canonicalString(),\r\n                appendMissingElements: {\r\n                    values: transform.elements.map(function (v) { return _this.toValue(v); })\r\n                }\r\n            };\r\n        }\r\n        else if (transform instanceof ArrayRemoveTransformOperation) {\r\n            return {\r\n                fieldPath: fieldTransform.field.canonicalString(),\r\n                removeAllFromArray: {\r\n                    values: transform.elements.map(function (v) { return _this.toValue(v); })\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            fail('Unknown transform: ' + fieldTransform.transform);\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.fromFieldTransform = function (proto) {\r\n        var _this = this;\r\n        // tslint:disable-next-line:no-any We need to match generated Proto types.\r\n        var type = proto['transform_type'];\r\n        var transform = null;\r\n        if (hasTag(proto, type, 'setToServerValue')) {\r\n            assert(proto.setToServerValue === 'REQUEST_TIME', 'Unknown server value transform proto: ' + JSON.stringify(proto));\r\n            transform = ServerTimestampTransform.instance;\r\n        }\r\n        else if (hasTag(proto, type, 'appendMissingElements')) {\r\n            var values = proto.appendMissingElements.values || [];\r\n            transform = new ArrayUnionTransformOperation(values.map(function (v) { return _this.fromValue(v); }));\r\n        }\r\n        else if (hasTag(proto, type, 'removeAllFromArray')) {\r\n            var values = proto.removeAllFromArray.values || [];\r\n            transform = new ArrayRemoveTransformOperation(values.map(function (v) { return _this.fromValue(v); }));\r\n        }\r\n        else {\r\n            fail('Unknown transform proto: ' + JSON.stringify(proto));\r\n        }\r\n        var fieldPath = FieldPath.fromServerFormat(proto.fieldPath);\r\n        return new FieldTransform(fieldPath, transform);\r\n    };\r\n    JsonProtoSerializer.prototype.toDocumentsTarget = function (query) {\r\n        return { documents: [this.toQueryPath(query.path)] };\r\n    };\r\n    JsonProtoSerializer.prototype.fromDocumentsTarget = function (documentsTarget) {\r\n        var count = documentsTarget.documents.length;\r\n        assert(count === 1, 'DocumentsTarget contained other than 1 document: ' + count);\r\n        var name = documentsTarget.documents[0];\r\n        return Query.atPath(this.fromQueryPath(name));\r\n    };\r\n    JsonProtoSerializer.prototype.toQueryTarget = function (query) {\r\n        // Dissect the path into parent, collectionId, and optional key filter.\r\n        var result = { structuredQuery: {} };\r\n        if (query.path.isEmpty()) {\r\n            result.parent = this.toQueryPath(ResourcePath.EMPTY_PATH);\r\n        }\r\n        else {\r\n            var path = query.path;\r\n            assert(path.length % 2 !== 0, 'Document queries with filters are not supported.');\r\n            result.parent = this.toQueryPath(path.popLast());\r\n            result.structuredQuery.from = [{ collectionId: path.lastSegment() }];\r\n        }\r\n        var where = this.toFilter(query.filters);\r\n        if (where) {\r\n            result.structuredQuery.where = where;\r\n        }\r\n        var orderBy = this.toOrder(query.orderBy);\r\n        if (orderBy) {\r\n            result.structuredQuery.orderBy = orderBy;\r\n        }\r\n        var limit = this.toInt32Value(query.limit);\r\n        if (limit !== undefined) {\r\n            result.structuredQuery.limit = limit;\r\n        }\r\n        if (query.startAt) {\r\n            result.structuredQuery.startAt = this.toCursor(query.startAt);\r\n        }\r\n        if (query.endAt) {\r\n            result.structuredQuery.endAt = this.toCursor(query.endAt);\r\n        }\r\n        return result;\r\n    };\r\n    JsonProtoSerializer.prototype.fromQueryTarget = function (target) {\r\n        var path = this.fromQueryPath(target.parent);\r\n        var query = target.structuredQuery;\r\n        var fromCount = query.from ? query.from.length : 0;\r\n        if (fromCount > 0) {\r\n            assert(fromCount === 1, 'StructuredQuery.from with more than one collection is not supported.');\r\n            var from = query.from[0];\r\n            path = path.child(from.collectionId);\r\n        }\r\n        var filterBy = [];\r\n        if (query.where) {\r\n            filterBy = this.fromFilter(query.where);\r\n        }\r\n        var orderBy = [];\r\n        if (query.orderBy) {\r\n            orderBy = this.fromOrder(query.orderBy);\r\n        }\r\n        var limit = null;\r\n        if (query.limit) {\r\n            limit = this.fromInt32Value(query.limit);\r\n        }\r\n        var startAt = null;\r\n        if (query.startAt) {\r\n            startAt = this.fromCursor(query.startAt);\r\n        }\r\n        var endAt = null;\r\n        if (query.endAt) {\r\n            endAt = this.fromCursor(query.endAt);\r\n        }\r\n        return new Query(path, orderBy, filterBy, limit, startAt, endAt);\r\n    };\r\n    JsonProtoSerializer.prototype.toListenRequestLabels = function (queryData) {\r\n        var value = this.toLabel(queryData.purpose);\r\n        if (value == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return {\r\n                'goog-listen-tags': value\r\n            };\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.toLabel = function (purpose) {\r\n        switch (purpose) {\r\n            case QueryPurpose.Listen:\r\n                return null;\r\n            case QueryPurpose.ExistenceFilterMismatch:\r\n                return 'existence-filter-mismatch';\r\n            case QueryPurpose.LimboResolution:\r\n                return 'limbo-document';\r\n            default:\r\n                return fail('Unrecognized query purpose: ' + purpose);\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.toTarget = function (queryData) {\r\n        var result;\r\n        var query = queryData.query;\r\n        if (query.isDocumentQuery()) {\r\n            result = { documents: this.toDocumentsTarget(query) };\r\n        }\r\n        else {\r\n            result = { query: this.toQueryTarget(query) };\r\n        }\r\n        result.targetId = queryData.targetId;\r\n        if (queryData.resumeToken.length > 0) {\r\n            result.resumeToken = this.unsafeCastProtoByteString(queryData.resumeToken);\r\n        }\r\n        return result;\r\n    };\r\n    JsonProtoSerializer.prototype.toFilter = function (filters) {\r\n        var _this = this;\r\n        if (filters.length === 0)\r\n            return;\r\n        var protos = filters.map(function (filter) {\r\n            return filter instanceof RelationFilter\r\n                ? _this.toRelationFilter(filter)\r\n                : _this.toUnaryFilter(filter);\r\n        });\r\n        if (protos.length === 1) {\r\n            return protos[0];\r\n        }\r\n        return { compositeFilter: { op: 'AND', filters: protos } };\r\n    };\r\n    JsonProtoSerializer.prototype.fromFilter = function (filter) {\r\n        var _this = this;\r\n        if (!filter) {\r\n            return [];\r\n        }\r\n        else if (filter.unaryFilter !== undefined) {\r\n            return [this.fromUnaryFilter(filter)];\r\n        }\r\n        else if (filter.fieldFilter !== undefined) {\r\n            return [this.fromRelationFilter(filter)];\r\n        }\r\n        else if (filter.compositeFilter !== undefined) {\r\n            return filter.compositeFilter\r\n                .filters.map(function (f) { return _this.fromFilter(f); })\r\n                .reduce(function (accum, current) { return accum.concat(current); });\r\n        }\r\n        else {\r\n            return fail('Unknown filter: ' + JSON.stringify(filter));\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.toOrder = function (orderBys) {\r\n        var _this = this;\r\n        if (orderBys.length === 0)\r\n            return;\r\n        return orderBys.map(function (order) { return _this.toPropertyOrder(order); });\r\n    };\r\n    JsonProtoSerializer.prototype.fromOrder = function (orderBys) {\r\n        var _this = this;\r\n        return orderBys.map(function (order) { return _this.fromPropertyOrder(order); });\r\n    };\r\n    JsonProtoSerializer.prototype.toCursor = function (cursor) {\r\n        var _this = this;\r\n        return {\r\n            before: cursor.before,\r\n            values: cursor.position.map(function (component) { return _this.toValue(component); })\r\n        };\r\n    };\r\n    JsonProtoSerializer.prototype.fromCursor = function (cursor) {\r\n        var _this = this;\r\n        var before = !!cursor.before;\r\n        var position = cursor.values.map(function (component) { return _this.fromValue(component); });\r\n        return new Bound(position, before);\r\n    };\r\n    // visible for testing\r\n    JsonProtoSerializer.prototype.toDirection = function (dir) {\r\n        return DIRECTIONS[dir.name];\r\n    };\r\n    // visible for testing\r\n    JsonProtoSerializer.prototype.fromDirection = function (dir) {\r\n        switch (dir) {\r\n            case 'ASCENDING':\r\n                return Direction.ASCENDING;\r\n            case 'DESCENDING':\r\n                return Direction.DESCENDING;\r\n            default:\r\n                return undefined;\r\n        }\r\n    };\r\n    // visible for testing\r\n    JsonProtoSerializer.prototype.toOperatorName = function (op) {\r\n        return OPERATORS[op.name];\r\n    };\r\n    JsonProtoSerializer.prototype.fromOperatorName = function (op) {\r\n        switch (op) {\r\n            case 'EQUAL':\r\n                return RelationOp.EQUAL;\r\n            case 'GREATER_THAN':\r\n                return RelationOp.GREATER_THAN;\r\n            case 'GREATER_THAN_OR_EQUAL':\r\n                return RelationOp.GREATER_THAN_OR_EQUAL;\r\n            case 'LESS_THAN':\r\n                return RelationOp.LESS_THAN;\r\n            case 'LESS_THAN_OR_EQUAL':\r\n                return RelationOp.LESS_THAN_OR_EQUAL;\r\n            case 'ARRAY_CONTAINS':\r\n                return RelationOp.ARRAY_CONTAINS;\r\n            case 'OPERATOR_UNSPECIFIED':\r\n                return fail('Unspecified relation');\r\n            default:\r\n                return fail('Unknown relation');\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.toFieldPathReference = function (path) {\r\n        return { fieldPath: path.canonicalString() };\r\n    };\r\n    JsonProtoSerializer.prototype.fromFieldPathReference = function (fieldReference) {\r\n        return FieldPath.fromServerFormat(fieldReference.fieldPath);\r\n    };\r\n    // visible for testing\r\n    JsonProtoSerializer.prototype.toPropertyOrder = function (orderBy) {\r\n        return {\r\n            field: this.toFieldPathReference(orderBy.field),\r\n            direction: this.toDirection(orderBy.dir)\r\n        };\r\n    };\r\n    JsonProtoSerializer.prototype.fromPropertyOrder = function (orderBy) {\r\n        return new OrderBy(this.fromFieldPathReference(orderBy.field), this.fromDirection(orderBy.direction));\r\n    };\r\n    // visible for testing\r\n    JsonProtoSerializer.prototype.toRelationFilter = function (filter) {\r\n        if (filter instanceof RelationFilter) {\r\n            return {\r\n                fieldFilter: {\r\n                    field: this.toFieldPathReference(filter.field),\r\n                    op: this.toOperatorName(filter.op),\r\n                    value: this.toValue(filter.value)\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            return fail('Unrecognized filter: ' + JSON.stringify(filter));\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.fromRelationFilter = function (filter) {\r\n        return new RelationFilter(this.fromFieldPathReference(filter.fieldFilter.field), this.fromOperatorName(filter.fieldFilter.op), this.fromValue(filter.fieldFilter.value));\r\n    };\r\n    // visible for testing\r\n    JsonProtoSerializer.prototype.toUnaryFilter = function (filter) {\r\n        if (filter instanceof NanFilter) {\r\n            return {\r\n                unaryFilter: {\r\n                    field: this.toFieldPathReference(filter.field),\r\n                    op: 'IS_NAN'\r\n                }\r\n            };\r\n        }\r\n        else if (filter instanceof NullFilter) {\r\n            return {\r\n                unaryFilter: {\r\n                    field: this.toFieldPathReference(filter.field),\r\n                    op: 'IS_NULL'\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            return fail('Unrecognized filter: ' + JSON.stringify(filter));\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.fromUnaryFilter = function (filter) {\r\n        switch (filter.unaryFilter.op) {\r\n            case 'IS_NAN':\r\n                var nanField = this.fromFieldPathReference(filter.unaryFilter.field);\r\n                return new NanFilter(nanField);\r\n            case 'IS_NULL':\r\n                var nullField = this.fromFieldPathReference(filter.unaryFilter.field);\r\n                return new NullFilter(nullField);\r\n            case 'OPERATOR_UNSPECIFIED':\r\n                return fail('Unspecified filter');\r\n            default:\r\n                return fail('Unknown filter');\r\n        }\r\n    };\r\n    JsonProtoSerializer.prototype.toDocumentMask = function (fieldMask) {\r\n        return {\r\n            fieldPaths: fieldMask.fields.map(function (field) { return field.canonicalString(); })\r\n        };\r\n    };\r\n    JsonProtoSerializer.prototype.fromDocumentMask = function (proto) {\r\n        var paths = proto.fieldPaths || [];\r\n        var fields = paths.map(function (path) { return FieldPath.fromServerFormat(path); });\r\n        return new FieldMask(fields);\r\n    };\r\n    return JsonProtoSerializer;\r\n}());\r\n/**\r\n * Checks for a specific oneof tag in a protocol buffer message.\r\n *\r\n * This intentionally accommodates two distinct cases:\r\n *\r\n * 1) Messages containing a type tag: these are the format produced by GRPC in\r\n * return values. These may contain default-value mappings for all tags in the\r\n * oneof but the type tag specifies which one was actually set.\r\n *\r\n * 2) Messages that don't contain a type tag: these are the format required by\r\n * GRPC as inputs. If we emitted objects with type tags, ProtoBuf.js would\r\n * choke claiming that the tags aren't fields in the Message.\r\n *\r\n * Allowing both formats here makes the serializer able to consume the outputs\r\n * it produces: for all messages it supports, fromX(toX(value)) == value.\r\n *\r\n * Note that case 2 suffers from ambiguity: if multiple tags are present\r\n * without a type tag then the callers are structured in such a way that the\r\n * first invocation will win. Since we only parse in this mode when parsing\r\n * the output of a serialize method this works, but it's not a general\r\n * solution.\r\n *\r\n * Unfortunately there is no general solution here because proto3 makes it\r\n * impossible to distinguish unset from explicitly set fields: both have the\r\n * default value for the type. Without the type tag but multiple value tags\r\n * it's possible to have default values for each tag in the oneof and not be\r\n * able to know which was actually in effect.\r\n */\r\nfunction hasTag(obj, type, tag) {\r\n    return type === tag || (!type && tag in obj);\r\n}\n\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides a simple helper class that implements the Stream interface to\r\n * bridge to other implementations that are streams but do not implement the\r\n * interface. The stream callbacks are invoked with the callOn... methods.\r\n */\r\nvar StreamBridge = /** @class */ (function () {\r\n    function StreamBridge(args) {\r\n        this.sendFn = args.sendFn;\r\n        this.closeFn = args.closeFn;\r\n    }\r\n    StreamBridge.prototype.onOpen = function (callback) {\r\n        assert(!this.wrappedOnOpen, 'Called onOpen on stream twice!');\r\n        this.wrappedOnOpen = callback;\r\n    };\r\n    StreamBridge.prototype.onClose = function (callback) {\r\n        assert(!this.wrappedOnClose, 'Called onClose on stream twice!');\r\n        this.wrappedOnClose = callback;\r\n    };\r\n    StreamBridge.prototype.onMessage = function (callback) {\r\n        assert(!this.wrappedOnMessage, 'Called onMessage on stream twice!');\r\n        this.wrappedOnMessage = callback;\r\n    };\r\n    StreamBridge.prototype.close = function () {\r\n        this.closeFn();\r\n    };\r\n    StreamBridge.prototype.send = function (msg) {\r\n        this.sendFn(msg);\r\n    };\r\n    StreamBridge.prototype.callOnOpen = function () {\r\n        assert(this.wrappedOnOpen !== undefined, 'Cannot call onOpen because no callback was set');\r\n        this.wrappedOnOpen();\r\n    };\r\n    StreamBridge.prototype.callOnClose = function (err) {\r\n        assert(this.wrappedOnClose !== undefined, 'Cannot call onClose because no callback was set');\r\n        this.wrappedOnClose(err);\r\n    };\r\n    StreamBridge.prototype.callOnMessage = function (msg) {\r\n        assert(this.wrappedOnMessage !== undefined, 'Cannot call onMessage because no callback was set');\r\n        this.wrappedOnMessage(msg);\r\n    };\r\n    return StreamBridge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG = 'Connection';\r\nvar RPC_STREAM_SERVICE = 'google.firestore.v1beta1.Firestore';\r\nvar RPC_URL_VERSION = 'v1beta1';\r\n/** Maps RPC names to the corresponding REST endpoint name. */\r\nvar RPC_NAME_REST_MAPPING = {\r\n    BatchGetDocuments: 'batchGet',\r\n    Commit: 'commit'\r\n};\r\n// TODO(b/38203344): The SDK_VERSION is set independently from Firebase because\r\n// we are doing out-of-band releases. Once we release as part of Firebase, we\r\n// should use the Firebase version instead.\r\nvar X_GOOG_API_CLIENT_VALUE = 'gl-js/ fire/' + SDK_VERSION;\r\nvar XHR_TIMEOUT_SECS = 15;\r\nvar WebChannelConnection = /** @class */ (function () {\r\n    function WebChannelConnection(info) {\r\n        this.databaseId = info.databaseId;\r\n        this.pool = new webchannelWrapper.XhrIoPool();\r\n        var proto = info.ssl ? 'https' : 'http';\r\n        this.baseUrl = proto + '://' + info.host;\r\n    }\r\n    /**\r\n     * Modifies the headers for a request, adding any authorization token if\r\n     * present and any additional headers for the request.\r\n     */\r\n    WebChannelConnection.prototype.modifyHeadersForRequest = function (headers, token) {\r\n        if (token) {\r\n            for (var header in token.authHeaders) {\r\n                if (token.authHeaders.hasOwnProperty(header)) {\r\n                    headers[header] = token.authHeaders[header];\r\n                }\r\n            }\r\n        }\r\n        headers['X-Goog-Api-Client'] = X_GOOG_API_CLIENT_VALUE;\r\n    };\r\n    WebChannelConnection.prototype.invokeRPC = function (rpcName, request, token) {\r\n        var _this = this;\r\n        var url = this.makeUrl(rpcName);\r\n        return new Promise(function (resolve, reject) {\r\n            // tslint:disable-next-line:no-any XhrIoPool doesn't have TS typings.\r\n            _this.pool.getObject(function (xhr) {\r\n                xhr.listenOnce(webchannelWrapper.EventType.COMPLETE, function () {\r\n                    try {\r\n                        switch (xhr.getLastErrorCode()) {\r\n                            case webchannelWrapper.ErrorCode.NO_ERROR:\r\n                                var json = xhr.getResponseJson();\r\n                                debug(LOG_TAG, 'XHR received:', JSON.stringify(json));\r\n                                resolve(json);\r\n                                break;\r\n                            case webchannelWrapper.ErrorCode.TIMEOUT:\r\n                                debug(LOG_TAG, 'RPC \"' + rpcName + '\" timed out');\r\n                                reject(new FirestoreError(Code.DEADLINE_EXCEEDED, 'Request time out'));\r\n                                break;\r\n                            case webchannelWrapper.ErrorCode.HTTP_ERROR:\r\n                                var status_1 = xhr.getStatus();\r\n                                debug(LOG_TAG, 'RPC \"' + rpcName + '\" failed with status:', status_1, 'response text:', xhr.getResponseText());\r\n                                if (status_1 > 0) {\r\n                                    reject(new FirestoreError(mapCodeFromHttpStatus(status_1), 'Server responded with status ' + xhr.getStatusText()));\r\n                                }\r\n                                else {\r\n                                    // If we received an HTTP_ERROR but there's no status code,\r\n                                    // it's most probably a connection issue\r\n                                    debug(LOG_TAG, 'RPC \"' + rpcName + '\" failed');\r\n                                    reject(new FirestoreError(Code.UNAVAILABLE, 'Connection failed.'));\r\n                                }\r\n                                break;\r\n                            default:\r\n                                fail('RPC \"' +\r\n                                    rpcName +\r\n                                    '\" failed with unanticipated ' +\r\n                                    'webchannel error ' +\r\n                                    xhr.getLastErrorCode() +\r\n                                    ': ' +\r\n                                    xhr.getLastError() +\r\n                                    ', giving up.');\r\n                        }\r\n                    }\r\n                    finally {\r\n                        debug(LOG_TAG, 'RPC \"' + rpcName + '\" completed.');\r\n                        _this.pool.releaseObject(xhr);\r\n                    }\r\n                });\r\n                var requestString = JSON.stringify(request);\r\n                debug(LOG_TAG, 'XHR sending: ', url + ' ' + requestString);\r\n                // Content-Type: text/plain will avoid preflight requests which might\r\n                // mess with CORS and redirects by proxies. If we add custom headers\r\n                // we will need to change this code to potentially use the\r\n                // $httpOverwrite parameter supported by ESF to avoid\r\n                // triggering preflight requests.\r\n                var headers = { 'Content-Type': 'text/plain' };\r\n                _this.modifyHeadersForRequest(headers, token);\r\n                xhr.send(url, 'POST', requestString, headers, XHR_TIMEOUT_SECS);\r\n            });\r\n        });\r\n    };\r\n    WebChannelConnection.prototype.invokeStreamingRPC = function (rpcName, request, token) {\r\n        // The REST API automatically aggregates all of the streamed results, so we\r\n        // can just use the normal invoke() method.\r\n        return this.invokeRPC(rpcName, request, token);\r\n    };\r\n    WebChannelConnection.prototype.openStream = function (rpcName, token) {\r\n        var urlParts = [\r\n            this.baseUrl,\r\n            '/',\r\n            RPC_STREAM_SERVICE,\r\n            '/',\r\n            rpcName,\r\n            '/channel'\r\n        ];\r\n        var webchannelTransport = webchannelWrapper.createWebChannelTransport();\r\n        var request = {\r\n            // Background channel test avoids the initial two test calls and decreases\r\n            // initial cold start time.\r\n            // TODO(dimond): wenboz@ mentioned this might affect use with proxies and\r\n            // we should monitor closely for any reports.\r\n            backgroundChannelTest: true,\r\n            // Required for backend stickiness, routing behavior is based on this\r\n            // parameter.\r\n            httpSessionIdParam: 'gsessionid',\r\n            initMessageHeaders: {},\r\n            messageUrlParams: {\r\n                // This param is used to improve routing and project isolation by the\r\n                // backend and must be included in every request.\r\n                database: \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database\r\n            },\r\n            sendRawJson: true,\r\n            supportsCrossDomainXhr: true\r\n        };\r\n        this.modifyHeadersForRequest(request.initMessageHeaders, token);\r\n        // Sending the custom headers we just added to request.initMessageHeaders\r\n        // (Authorization, etc.) will trigger the browser to make a CORS preflight\r\n        // request because the XHR will no longer meet the criteria for a \"simple\"\r\n        // CORS request:\r\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests\r\n        //\r\n        // Therefore to avoid the CORS preflight request (an extra network\r\n        // roundtrip), we use the httpHeadersOverwriteParam option to specify that\r\n        // the headers should instead be encoded into a special \"$httpHeaders\" query\r\n        // parameter, which is recognized by the webchannel backend. This is\r\n        // formally defined here:\r\n        // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32\r\n        //\r\n        // But for some unclear reason (see\r\n        // https://github.com/firebase/firebase-js-sdk/issues/703), this breaks\r\n        // ReactNative and so we exclude it, which just means ReactNative may be\r\n        // subject to the extra network roundtrip for CORS preflight.\r\n        if (!isReactNative()) {\r\n            request['httpHeadersOverwriteParam'] = '$httpHeaders';\r\n        }\r\n        var url = urlParts.join('');\r\n        debug(LOG_TAG, 'Creating WebChannel: ' + url + ' ' + request);\r\n        // tslint:disable-next-line:no-any Because listen isn't defined on it.\r\n        var channel = webchannelTransport.createWebChannel(url, request);\r\n        // WebChannel supports sending the first message with the handshake - saving\r\n        // a network round trip. However, it will have to call send in the same\r\n        // JS event loop as open. In order to enforce this, we delay actually\r\n        // opening the WebChannel until send is called. Whether we have called\r\n        // open is tracked with this variable.\r\n        var opened = false;\r\n        // A flag to determine whether the stream was closed (by us or through an\r\n        // error/close event) to avoid delivering multiple close events or sending\r\n        // on a closed stream\r\n        var closed = false;\r\n        var streamBridge = new StreamBridge({\r\n            sendFn: function (msg) {\r\n                if (!closed) {\r\n                    if (!opened) {\r\n                        debug(LOG_TAG, 'Opening WebChannel transport.');\r\n                        channel.open();\r\n                        opened = true;\r\n                    }\r\n                    debug(LOG_TAG, 'WebChannel sending:', msg);\r\n                    channel.send(msg);\r\n                }\r\n                else {\r\n                    debug(LOG_TAG, 'Not sending because WebChannel is closed:', msg);\r\n                }\r\n            },\r\n            closeFn: function () { return channel.close(); }\r\n        });\r\n        // Closure events are guarded and exceptions are swallowed, so catch any\r\n        // exception and rethrow using a setTimeout so they become visible again.\r\n        // Note that eventually this function could go away if we are confident\r\n        // enough the code is exception free.\r\n        var unguardedEventListen = function (type, fn) {\r\n            // TODO(dimond): closure typing seems broken because WebChannel does\r\n            // not implement goog.events.Listenable\r\n            channel.listen(type, function (param) {\r\n                try {\r\n                    fn(param);\r\n                }\r\n                catch (e) {\r\n                    setTimeout(function () {\r\n                        throw e;\r\n                    }, 0);\r\n                }\r\n            });\r\n        };\r\n        unguardedEventListen(webchannelWrapper.WebChannel.EventType.OPEN, function () {\r\n            if (!closed) {\r\n                debug(LOG_TAG, 'WebChannel transport opened.');\r\n            }\r\n        });\r\n        unguardedEventListen(webchannelWrapper.WebChannel.EventType.CLOSE, function () {\r\n            if (!closed) {\r\n                closed = true;\r\n                debug(LOG_TAG, 'WebChannel transport closed');\r\n                streamBridge.callOnClose();\r\n            }\r\n        });\r\n        unguardedEventListen(webchannelWrapper.WebChannel.EventType.ERROR, function (err) {\r\n            if (!closed) {\r\n                closed = true;\r\n                debug(LOG_TAG, 'WebChannel transport errored:', err);\r\n                streamBridge.callOnClose(new FirestoreError(Code.UNAVAILABLE, 'The operation could not be completed'));\r\n            }\r\n        });\r\n        unguardedEventListen(webchannelWrapper.WebChannel.EventType.MESSAGE, function (msg) {\r\n            if (!closed) {\r\n                var msgData = msg.data[0];\r\n                assert(!!msgData, 'Got a webchannel message without data.');\r\n                // TODO(b/35143891): There is a bug in One Platform that caused errors\r\n                // (and only errors) to be wrapped in an extra array. To be forward\r\n                // compatible with the bug we need to check either condition. The latter\r\n                // can be removed once the fix has been rolled out.\r\n                var error$$1 = \r\n                // tslint:disable-next-line:no-any msgData.error is not typed.\r\n                msgData.error || (msgData[0] && msgData[0].error);\r\n                if (error$$1) {\r\n                    debug(LOG_TAG, 'WebChannel received error:', error$$1);\r\n                    // error.status will be a string like 'OK' or 'NOT_FOUND'.\r\n                    var status_2 = error$$1.status;\r\n                    var code = mapCodeFromRpcStatus(status_2);\r\n                    var message = error$$1.message;\r\n                    if (code === undefined) {\r\n                        code = Code.INTERNAL;\r\n                        message =\r\n                            'Unknown error status: ' +\r\n                                status_2 +\r\n                                ' with message ' +\r\n                                error$$1.message;\r\n                    }\r\n                    // Mark closed so no further events are propagated\r\n                    closed = true;\r\n                    streamBridge.callOnClose(new FirestoreError(code, message));\r\n                    channel.close();\r\n                }\r\n                else {\r\n                    debug(LOG_TAG, 'WebChannel received:', msgData);\r\n                    streamBridge.callOnMessage(msgData);\r\n                }\r\n            }\r\n        });\r\n        setTimeout(function () {\r\n            // Technically we could/should wait for the WebChannel opened event,\r\n            // but because we want to send the first message with the WebChannel\r\n            // handshake we pretend the channel opened here (asynchronously), and\r\n            // then delay the actual open until the first message is sent.\r\n            streamBridge.callOnOpen();\r\n        }, 0);\r\n        return streamBridge;\r\n    };\r\n    // visible for testing\r\n    WebChannelConnection.prototype.makeUrl = function (rpcName) {\r\n        var urlRpcName = RPC_NAME_REST_MAPPING[rpcName];\r\n        assert(urlRpcName !== undefined, 'Unknown REST mapping for: ' + rpcName);\r\n        var url = [this.baseUrl, '/', RPC_URL_VERSION];\r\n        url.push('/projects/');\r\n        url.push(this.databaseId.projectId);\r\n        url.push('/databases/');\r\n        url.push(this.databaseId.database);\r\n        url.push('/documents');\r\n        url.push(':');\r\n        url.push(urlRpcName);\r\n        return url.join('');\r\n    };\r\n    return WebChannelConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar BrowserPlatform = /** @class */ (function () {\r\n    function BrowserPlatform() {\r\n        this.emptyByteString = '';\r\n        this.base64Available = typeof atob !== 'undefined';\r\n    }\r\n    BrowserPlatform.prototype.loadConnection = function (databaseInfo) {\r\n        return Promise.resolve(new WebChannelConnection(databaseInfo));\r\n    };\r\n    BrowserPlatform.prototype.newSerializer = function (databaseId) {\r\n        return new JsonProtoSerializer(databaseId, { useProto3Json: true });\r\n    };\r\n    BrowserPlatform.prototype.formatJSON = function (value) {\r\n        return JSON.stringify(value);\r\n    };\r\n    BrowserPlatform.prototype.atob = function (encoded) {\r\n        return atob(encoded);\r\n    };\r\n    BrowserPlatform.prototype.btoa = function (raw) {\r\n        return btoa(raw);\r\n    };\r\n    return BrowserPlatform;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This code needs to run before Firestore is used. This can be achieved in\r\n * several ways:\r\n *   1) Through the JSCompiler compiling this code and then (automatically)\r\n *      executing it before exporting the Firestore symbols.\r\n *   2) Through importing this module first in a Firestore main module\r\n */\r\nPlatformSupport.setPlatform(new BrowserPlatform());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// The objects that are a part of this API are exposed to third-parties as\r\n// compiled javascript so we want to flag our private members with a leading\r\n// underscore to discourage their use.\r\n// tslint:disable:strip-private-property-underscore\r\n/**\r\n * A FieldPath refers to a field in a document. The path may consist of a single\r\n * field name (referring to a top-level field in the document), or a list of\r\n * field names (referring to a nested field in the document).\r\n */\r\nvar FieldPath$1 = /** @class */ (function () {\r\n    /**\r\n     * Creates a FieldPath from the provided field names. If more than one field\r\n     * name is provided, the path will point to a nested field in a document.\r\n     *\r\n     * @param fieldNames A list of field names.\r\n     */\r\n    function FieldPath$$1() {\r\n        var fieldNames = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            fieldNames[_i] = arguments[_i];\r\n        }\r\n        validateNamedArrayAtLeastNumberOfElements('FieldPath', fieldNames, 'fieldNames', 1);\r\n        for (var i = 0; i < fieldNames.length; ++i) {\r\n            validateArgType('FieldPath', 'string', i, fieldNames[i]);\r\n            if (fieldNames[i].length === 0) {\r\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field name at argument $(i + 1). \" +\r\n                    'Field names must not be empty.');\r\n            }\r\n        }\r\n        this._internalPath = new FieldPath(fieldNames);\r\n    }\r\n    FieldPath$$1.documentId = function () {\r\n        return FieldPath$$1._DOCUMENT_ID;\r\n    };\r\n    FieldPath$$1.prototype.isEqual = function (other) {\r\n        if (!(other instanceof FieldPath$$1)) {\r\n            throw invalidClassError('isEqual', 'FieldPath', 1, other);\r\n        }\r\n        return this._internalPath.isEqual(other._internalPath);\r\n    };\r\n    /**\r\n     * Internal Note: The backend doesn't technically support querying by\r\n     * document ID. Instead it queries by the entire document name (full path\r\n     * included), but in the cases we currently support documentId(), the net\r\n     * effect is the same.\r\n     */\r\n    FieldPath$$1._DOCUMENT_ID = new FieldPath$$1(FieldPath.keyField().canonicalString());\r\n    return FieldPath$$1;\r\n}());\r\n/**\r\n * Matches any characters in a field path string that are reserved.\r\n */\r\nvar RESERVED = new RegExp('[~\\\\*/\\\\[\\\\]]');\r\n/**\r\n * Parses a field path string into a FieldPath, treating dots as separators.\r\n */\r\nfunction fromDotSeparatedString(path) {\r\n    var found = path.search(RESERVED);\r\n    if (found >= 0) {\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not contain \" +\r\n            \"'~', '*', '/', '[', or ']'\");\r\n    }\r\n    try {\r\n        return new (FieldPath$1.bind.apply(FieldPath$1, [void 0].concat(path.split('.'))))();\r\n    }\r\n    catch (e) {\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid field path (\" + path + \"). Paths must not be empty, \" +\r\n            \"begin with '.', end with '.', or contain '..'\");\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Describes the online state of the Firestore client. Note that this does not\r\n * indicate whether or not the remote store is trying to connect or not. This is\r\n * primarily used by the View / EventManager code to change their behavior while\r\n * offline (e.g. get() calls shouldn't wait for data from the server and\r\n * snapshot events should set metadata.isFromCache=true).\r\n */\r\nvar OnlineState;\r\n(function (OnlineState) {\r\n    /**\r\n     * The Firestore client is in an unknown online state. This means the client\r\n     * is either not actively trying to establish a connection or it is currently\r\n     * trying to establish a connection, but it has not succeeded or failed yet.\r\n     * Higher-level components should not operate in offline mode.\r\n     */\r\n    OnlineState[OnlineState[\"Unknown\"] = 0] = \"Unknown\";\r\n    /**\r\n     * The client is connected and the connections are healthy. This state is\r\n     * reached after a successful connection and there has been at least one\r\n     * successful message received from the backends.\r\n     */\r\n    OnlineState[OnlineState[\"Online\"] = 1] = \"Online\";\r\n    /**\r\n     * The client is either trying to establish a connection but failing, or it\r\n     * has been explicitly marked offline via a call to disableNetwork().\r\n     * Higher-level components should operate in offline mode.\r\n     */\r\n    OnlineState[OnlineState[\"Offline\"] = 2] = \"Offline\";\r\n})(OnlineState || (OnlineState = {}));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChangeType;\r\n(function (ChangeType) {\r\n    ChangeType[ChangeType[\"Added\"] = 0] = \"Added\";\r\n    ChangeType[ChangeType[\"Removed\"] = 1] = \"Removed\";\r\n    ChangeType[ChangeType[\"Modified\"] = 2] = \"Modified\";\r\n    ChangeType[ChangeType[\"Metadata\"] = 3] = \"Metadata\";\r\n})(ChangeType || (ChangeType = {}));\r\nvar SyncState;\r\n(function (SyncState) {\r\n    SyncState[SyncState[\"Local\"] = 0] = \"Local\";\r\n    SyncState[SyncState[\"Synced\"] = 1] = \"Synced\";\r\n})(SyncState || (SyncState = {}));\r\n/**\r\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\r\n * duplicate events for the same doc.\r\n */\r\nvar DocumentChangeSet = /** @class */ (function () {\r\n    function DocumentChangeSet() {\r\n        this.changeMap = new SortedMap(DocumentKey.comparator);\r\n    }\r\n    DocumentChangeSet.prototype.track = function (change) {\r\n        var key = change.doc.key;\r\n        var oldChange = this.changeMap.get(key);\r\n        if (!oldChange) {\r\n            this.changeMap = this.changeMap.insert(key, change);\r\n            return;\r\n        }\r\n        // Merge the new change with the existing change.\r\n        if (change.type !== ChangeType.Added &&\r\n            oldChange.type === ChangeType.Metadata) {\r\n            this.changeMap = this.changeMap.insert(key, change);\r\n        }\r\n        else if (change.type === ChangeType.Metadata &&\r\n            oldChange.type !== ChangeType.Removed) {\r\n            this.changeMap = this.changeMap.insert(key, {\r\n                type: oldChange.type,\r\n                doc: change.doc\r\n            });\r\n        }\r\n        else if (change.type === ChangeType.Modified &&\r\n            oldChange.type === ChangeType.Modified) {\r\n            this.changeMap = this.changeMap.insert(key, {\r\n                type: ChangeType.Modified,\r\n                doc: change.doc\r\n            });\r\n        }\r\n        else if (change.type === ChangeType.Modified &&\r\n            oldChange.type === ChangeType.Added) {\r\n            this.changeMap = this.changeMap.insert(key, {\r\n                type: ChangeType.Added,\r\n                doc: change.doc\r\n            });\r\n        }\r\n        else if (change.type === ChangeType.Removed &&\r\n            oldChange.type === ChangeType.Added) {\r\n            this.changeMap = this.changeMap.remove(key);\r\n        }\r\n        else if (change.type === ChangeType.Removed &&\r\n            oldChange.type === ChangeType.Modified) {\r\n            this.changeMap = this.changeMap.insert(key, {\r\n                type: ChangeType.Removed,\r\n                doc: oldChange.doc\r\n            });\r\n        }\r\n        else if (change.type === ChangeType.Added &&\r\n            oldChange.type === ChangeType.Removed) {\r\n            this.changeMap = this.changeMap.insert(key, {\r\n                type: ChangeType.Modified,\r\n                doc: change.doc\r\n            });\r\n        }\r\n        else {\r\n            // This includes these cases, which don't make sense:\r\n            // Added->Added\r\n            // Removed->Removed\r\n            // Modified->Added\r\n            // Removed->Modified\r\n            // Metadata->Added\r\n            // Removed->Metadata\r\n            fail('unsupported combination of changes: ' +\r\n                JSON.stringify(change) +\r\n                ' after ' +\r\n                JSON.stringify(oldChange));\r\n        }\r\n    };\r\n    DocumentChangeSet.prototype.getChanges = function () {\r\n        var changes = [];\r\n        this.changeMap.inorderTraversal(function (key, change) {\r\n            changes.push(change);\r\n        });\r\n        return changes;\r\n    };\r\n    return DocumentChangeSet;\r\n}());\r\nvar ViewSnapshot = /** @class */ (function () {\r\n    function ViewSnapshot(query, docs, oldDocs, docChanges, fromCache, hasPendingWrites, syncStateChanged, excludesMetadataChanges) {\r\n        this.query = query;\r\n        this.docs = docs;\r\n        this.oldDocs = oldDocs;\r\n        this.docChanges = docChanges;\r\n        this.fromCache = fromCache;\r\n        this.hasPendingWrites = hasPendingWrites;\r\n        this.syncStateChanged = syncStateChanged;\r\n        this.excludesMetadataChanges = excludesMetadataChanges;\r\n    }\r\n    ViewSnapshot.prototype.isEqual = function (other) {\r\n        if (this.fromCache !== other.fromCache ||\r\n            this.hasPendingWrites !== other.hasPendingWrites ||\r\n            this.syncStateChanged !== other.syncStateChanged ||\r\n            !this.query.isEqual(other.query) ||\r\n            !this.docs.isEqual(other.docs) ||\r\n            !this.oldDocs.isEqual(other.oldDocs)) {\r\n            return false;\r\n        }\r\n        var changes = this.docChanges;\r\n        var otherChanges = other.docChanges;\r\n        if (changes.length !== otherChanges.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < changes.length; i++) {\r\n            if (changes[i].type !== otherChanges[i].type ||\r\n                !changes[i].doc.isEqual(otherChanges[i].doc)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return ViewSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\r\n * in order specified by the provided comparator. We always add a document key\r\n * comparator on top of what is provided to guarantee document equality based on\r\n * the key.\r\n */\r\nvar DocumentSet = /** @class */ (function () {\r\n    /** The default ordering is by key if the comparator is omitted */\r\n    function DocumentSet(comp) {\r\n        // We are adding document key comparator to the end as it's the only\r\n        // guaranteed unique property of a document.\r\n        if (comp) {\r\n            this.comparator = function (d1, d2) {\r\n                return comp(d1, d2) || DocumentKey.comparator(d1.key, d2.key);\r\n            };\r\n        }\r\n        else {\r\n            this.comparator = function (d1, d2) {\r\n                return DocumentKey.comparator(d1.key, d2.key);\r\n            };\r\n        }\r\n        this.keyedMap = documentMap();\r\n        this.sortedSet = new SortedMap(this.comparator);\r\n    }\r\n    /**\r\n     * Returns an empty copy of the existing DocumentSet, using the same\r\n     * comparator.\r\n     */\r\n    DocumentSet.emptySet = function (oldSet) {\r\n        return new DocumentSet(oldSet.comparator);\r\n    };\r\n    DocumentSet.prototype.has = function (key) {\r\n        return this.keyedMap.get(key) != null;\r\n    };\r\n    DocumentSet.prototype.get = function (key) {\r\n        return this.keyedMap.get(key);\r\n    };\r\n    DocumentSet.prototype.first = function () {\r\n        return this.sortedSet.minKey();\r\n    };\r\n    DocumentSet.prototype.last = function () {\r\n        return this.sortedSet.maxKey();\r\n    };\r\n    DocumentSet.prototype.isEmpty = function () {\r\n        return this.sortedSet.isEmpty();\r\n    };\r\n    /**\r\n     * Returns the index of the provided key in the document set, or -1 if the\r\n     * document key is not present in the set;\r\n     */\r\n    DocumentSet.prototype.indexOf = function (key) {\r\n        var doc = this.keyedMap.get(key);\r\n        return doc ? this.sortedSet.indexOf(doc) : -1;\r\n    };\r\n    Object.defineProperty(DocumentSet.prototype, \"size\", {\r\n        get: function () {\r\n            return this.sortedSet.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Iterates documents in order defined by \"comparator\" */\r\n    DocumentSet.prototype.forEach = function (cb) {\r\n        this.sortedSet.inorderTraversal(function (k, v) {\r\n            cb(k);\r\n            return false;\r\n        });\r\n    };\r\n    /** Inserts or updates a document with the same key */\r\n    DocumentSet.prototype.add = function (doc) {\r\n        // First remove the element if we have it.\r\n        var set = this.delete(doc.key);\r\n        return set.copy(set.keyedMap.insert(doc.key, doc), set.sortedSet.insert(doc, null));\r\n    };\r\n    /** Deletes a document with a given key */\r\n    DocumentSet.prototype.delete = function (key) {\r\n        var doc = this.get(key);\r\n        if (!doc) {\r\n            return this;\r\n        }\r\n        return this.copy(this.keyedMap.remove(key), this.sortedSet.remove(doc));\r\n    };\r\n    DocumentSet.prototype.isEqual = function (other) {\r\n        if (!(other instanceof DocumentSet))\r\n            return false;\r\n        if (this.size !== other.size)\r\n            return false;\r\n        var thisIt = this.sortedSet.getIterator();\r\n        var otherIt = other.sortedSet.getIterator();\r\n        while (thisIt.hasNext()) {\r\n            var thisDoc = thisIt.getNext().key;\r\n            var otherDoc = otherIt.getNext().key;\r\n            if (!thisDoc.isEqual(otherDoc))\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    DocumentSet.prototype.toString = function () {\r\n        var docStrings = [];\r\n        this.forEach(function (doc) {\r\n            docStrings.push(doc.toString());\r\n        });\r\n        if (docStrings.length === 0) {\r\n            return 'DocumentSet ()';\r\n        }\r\n        else {\r\n            return 'DocumentSet (\\n  ' + docStrings.join('  \\n') + '\\n)';\r\n        }\r\n    };\r\n    DocumentSet.prototype.copy = function (keyedMap, sortedSet) {\r\n        var newSet = new DocumentSet();\r\n        newSet.comparator = this.comparator;\r\n        newSet.keyedMap = keyedMap;\r\n        newSet.sortedSet = sortedSet;\r\n        return newSet;\r\n    };\r\n    return DocumentSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A map implementation that uses objects as keys. Objects must implement the\r\n * Equatable interface and must be immutable. Entries in the map are stored\r\n * together with the key being produced from the mapKeyFn. This map\r\n * automatically handles collisions of keys.\r\n */\r\nvar ObjectMap = /** @class */ (function () {\r\n    function ObjectMap(mapKeyFn) {\r\n        this.mapKeyFn = mapKeyFn;\r\n        /**\r\n         * The inner map for a key -> value pair. Due to the possibility of\r\n         * collisions we keep a list of entries that we do a linear search through\r\n         * to find an actual match. Note that collisions should be rare, so we still\r\n         * expect near constant time lookups in practice.\r\n         */\r\n        this.inner = {};\r\n    }\r\n    /** Get a value for this key, or undefined if it does not exist. */\r\n    ObjectMap.prototype.get = function (key) {\r\n        var id = this.mapKeyFn(key);\r\n        var matches = this.inner[id];\r\n        if (matches === undefined) {\r\n            return undefined;\r\n        }\r\n        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {\r\n            var _a = matches_1[_i], otherKey = _a[0], value = _a[1];\r\n            if (otherKey.isEqual(key)) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    ObjectMap.prototype.has = function (key) {\r\n        return this.get(key) !== undefined;\r\n    };\r\n    /** Put this key and value in the map. */\r\n    ObjectMap.prototype.set = function (key, value) {\r\n        var id = this.mapKeyFn(key);\r\n        var matches = this.inner[id];\r\n        if (matches === undefined) {\r\n            this.inner[id] = [[key, value]];\r\n            return;\r\n        }\r\n        for (var i = 0; i < matches.length; i++) {\r\n            if (matches[i][0].isEqual(key)) {\r\n                matches[i] = [key, value];\r\n                return;\r\n            }\r\n        }\r\n        matches.push([key, value]);\r\n    };\r\n    /**\r\n     * Remove this key from the map. Returns a boolean if anything was deleted.\r\n     */\r\n    ObjectMap.prototype.delete = function (key) {\r\n        var id = this.mapKeyFn(key);\r\n        var matches = this.inner[id];\r\n        if (matches === undefined) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < matches.length; i++) {\r\n            if (matches[i][0].isEqual(key)) {\r\n                if (matches.length === 1) {\r\n                    delete this.inner[id];\r\n                }\r\n                else {\r\n                    matches.splice(i, 1);\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ObjectMap.prototype.forEach = function (fn) {\r\n        forEach(this.inner, function (_, entries) {\r\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\r\n                var _a = entries_1[_i], k = _a[0], v = _a[1];\r\n                fn(k, v);\r\n            }\r\n        });\r\n    };\r\n    ObjectMap.prototype.isEmpty = function () {\r\n        return isEmpty(this.inner);\r\n    };\r\n    return ObjectMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Holds the listeners and the last received ViewSnapshot for a query being\r\n * tracked by EventManager.\r\n */\r\nvar QueryListenersInfo = /** @class */ (function () {\r\n    function QueryListenersInfo() {\r\n        this.listeners = [];\r\n    }\r\n    return QueryListenersInfo;\r\n}());\r\n/**\r\n * EventManager is responsible for mapping queries to query event emitters.\r\n * It handles \"fan-out\". -- Identical queries will re-use the same watch on the\r\n * backend.\r\n */\r\nvar EventManager = /** @class */ (function () {\r\n    function EventManager(syncEngine) {\r\n        this.syncEngine = syncEngine;\r\n        this.queries = new ObjectMap(function (q) {\r\n            return q.canonicalId();\r\n        });\r\n        this.onlineState = OnlineState.Unknown;\r\n        this.syncEngine.subscribe(this.onChange.bind(this), this.onError.bind(this));\r\n    }\r\n    EventManager.prototype.listen = function (listener) {\r\n        var query = listener.query;\r\n        var firstListen = false;\r\n        var queryInfo = this.queries.get(query);\r\n        if (!queryInfo) {\r\n            firstListen = true;\r\n            queryInfo = new QueryListenersInfo();\r\n            this.queries.set(query, queryInfo);\r\n        }\r\n        queryInfo.listeners.push(listener);\r\n        listener.applyOnlineStateChange(this.onlineState);\r\n        if (queryInfo.viewSnap)\r\n            listener.onViewSnapshot(queryInfo.viewSnap);\r\n        if (firstListen) {\r\n            return this.syncEngine.listen(query).then(function (targetId) {\r\n                queryInfo.targetId = targetId;\r\n                return targetId;\r\n            });\r\n        }\r\n        else {\r\n            return Promise.resolve(queryInfo.targetId);\r\n        }\r\n    };\r\n    EventManager.prototype.unlisten = function (listener) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var query, lastListen, queryInfo, i;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                query = listener.query;\r\n                lastListen = false;\r\n                queryInfo = this.queries.get(query);\r\n                if (queryInfo) {\r\n                    i = queryInfo.listeners.indexOf(listener);\r\n                    if (i >= 0) {\r\n                        queryInfo.listeners.splice(i, 1);\r\n                        lastListen = queryInfo.listeners.length === 0;\r\n                    }\r\n                }\r\n                if (lastListen) {\r\n                    this.queries.delete(query);\r\n                    return [2 /*return*/, this.syncEngine.unlisten(query)];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    EventManager.prototype.onChange = function (viewSnaps) {\r\n        for (var _i = 0, viewSnaps_1 = viewSnaps; _i < viewSnaps_1.length; _i++) {\r\n            var viewSnap = viewSnaps_1[_i];\r\n            var query = viewSnap.query;\r\n            var queryInfo = this.queries.get(query);\r\n            if (queryInfo) {\r\n                for (var _a = 0, _b = queryInfo.listeners; _a < _b.length; _a++) {\r\n                    var listener = _b[_a];\r\n                    listener.onViewSnapshot(viewSnap);\r\n                }\r\n                queryInfo.viewSnap = viewSnap;\r\n            }\r\n        }\r\n    };\r\n    EventManager.prototype.onError = function (query, error) {\r\n        var queryInfo = this.queries.get(query);\r\n        if (queryInfo) {\r\n            for (var _i = 0, _a = queryInfo.listeners; _i < _a.length; _i++) {\r\n                var listener = _a[_i];\r\n                listener.onError(error);\r\n            }\r\n        }\r\n        // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\r\n        // after an error.\r\n        this.queries.delete(query);\r\n    };\r\n    EventManager.prototype.applyOnlineStateChange = function (onlineState) {\r\n        this.onlineState = onlineState;\r\n        this.queries.forEach(function (_, queryInfo) {\r\n            for (var _i = 0, _a = queryInfo.listeners; _i < _a.length; _i++) {\r\n                var listener = _a[_i];\r\n                listener.applyOnlineStateChange(onlineState);\r\n            }\r\n        });\r\n    };\r\n    return EventManager;\r\n}());\r\n/**\r\n * QueryListener takes a series of internal view snapshots and determines\r\n * when to raise the event.\r\n *\r\n * It uses an Observer to dispatch events.\r\n */\r\nvar QueryListener = /** @class */ (function () {\r\n    function QueryListener(query, queryObserver, options) {\r\n        this.query = query;\r\n        this.queryObserver = queryObserver;\r\n        /**\r\n         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\r\n         * observer. This flag is set to true once we've actually raised an event.\r\n         */\r\n        this.raisedInitialEvent = false;\r\n        this.onlineState = OnlineState.Unknown;\r\n        this.options = options || {};\r\n    }\r\n    QueryListener.prototype.onViewSnapshot = function (snap) {\r\n        assert(snap.docChanges.length > 0 || snap.syncStateChanged, 'We got a new snapshot with no changes?');\r\n        if (!this.options.includeMetadataChanges) {\r\n            // Remove the metadata only changes.\r\n            var docChanges = [];\r\n            for (var _i = 0, _a = snap.docChanges; _i < _a.length; _i++) {\r\n                var docChange = _a[_i];\r\n                if (docChange.type !== ChangeType.Metadata) {\r\n                    docChanges.push(docChange);\r\n                }\r\n            }\r\n            snap = new ViewSnapshot(snap.query, snap.docs, snap.oldDocs, docChanges, snap.fromCache, snap.hasPendingWrites, snap.syncStateChanged, \r\n            /* excludesMetadataChanges= */ true);\r\n        }\r\n        if (!this.raisedInitialEvent) {\r\n            if (this.shouldRaiseInitialEvent(snap, this.onlineState)) {\r\n                this.raiseInitialEvent(snap);\r\n            }\r\n        }\r\n        else if (this.shouldRaiseEvent(snap)) {\r\n            this.queryObserver.next(snap);\r\n        }\r\n        this.snap = snap;\r\n    };\r\n    QueryListener.prototype.onError = function (error) {\r\n        this.queryObserver.error(error);\r\n    };\r\n    QueryListener.prototype.applyOnlineStateChange = function (onlineState) {\r\n        this.onlineState = onlineState;\r\n        if (this.snap &&\r\n            !this.raisedInitialEvent &&\r\n            this.shouldRaiseInitialEvent(this.snap, onlineState)) {\r\n            this.raiseInitialEvent(this.snap);\r\n        }\r\n    };\r\n    QueryListener.prototype.shouldRaiseInitialEvent = function (snap, onlineState) {\r\n        assert(!this.raisedInitialEvent, 'Determining whether to raise first event but already had first event');\r\n        // Always raise the first event when we're synced\r\n        if (!snap.fromCache) {\r\n            return true;\r\n        }\r\n        // NOTE: We consider OnlineState.Unknown as online (it should become Offline\r\n        // or Online if we wait long enough).\r\n        var maybeOnline = onlineState !== OnlineState.Offline;\r\n        // Don't raise the event if we're online, aren't synced yet (checked\r\n        // above) and are waiting for a sync.\r\n        if (this.options.waitForSyncWhenOnline && maybeOnline) {\r\n            assert(snap.fromCache, 'Waiting for sync, but snapshot is not from cache');\r\n            return false;\r\n        }\r\n        // Raise data from cache if we have any documents or we are offline\r\n        return !snap.docs.isEmpty() || onlineState === OnlineState.Offline;\r\n    };\r\n    QueryListener.prototype.shouldRaiseEvent = function (snap) {\r\n        // We don't need to handle includeDocumentMetadataChanges here because\r\n        // the Metadata only changes have already been stripped out if needed.\r\n        // At this point the only changes we will see are the ones we should\r\n        // propagate.\r\n        if (snap.docChanges.length > 0) {\r\n            return true;\r\n        }\r\n        var hasPendingWritesChanged = this.snap && this.snap.hasPendingWrites !== snap.hasPendingWrites;\r\n        if (snap.syncStateChanged || hasPendingWritesChanged) {\r\n            return this.options.includeMetadataChanges === true;\r\n        }\r\n        // Generally we should have hit one of the cases above, but it's possible\r\n        // to get here if there were only metadata docChanges and they got\r\n        // stripped out.\r\n        return false;\r\n    };\r\n    QueryListener.prototype.raiseInitialEvent = function (snap) {\r\n        assert(!this.raisedInitialEvent, 'Trying to raise initial events for second time');\r\n        snap = new ViewSnapshot(snap.query, snap.docs, DocumentSet.emptySet(snap.docs), QueryListener.getInitialViewChanges(snap), snap.fromCache, snap.hasPendingWrites, \r\n        /* syncChangesState= */ true, \r\n        /* excludesMetadataChanges= */ false);\r\n        this.raisedInitialEvent = true;\r\n        this.queryObserver.next(snap);\r\n    };\r\n    /** Returns changes as if all documents in the snap were added. */\r\n    QueryListener.getInitialViewChanges = function (snap) {\r\n        var result = [];\r\n        snap.docs.forEach(function (doc) {\r\n            result.push({ type: ChangeType.Added, doc: doc });\r\n        });\r\n        return result;\r\n    };\r\n    return QueryListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * PersistencePromise<> is essentially a re-implementation of Promise<> except\r\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\r\n * are executed synchronously when a PersistencePromise resolves rather than\r\n * asynchronously (Promise<> implementations use setImmediate() or similar).\r\n *\r\n * This is necessary to interoperate with IndexedDB which will automatically\r\n * commit transactions if control is returned to the event loop without\r\n * synchronously initiating another operation on the transaction.\r\n *\r\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\r\n * Promises.\r\n */\r\nvar PersistencePromise = /** @class */ (function () {\r\n    function PersistencePromise(callback) {\r\n        var _this = this;\r\n        // NOTE: next/catchCallback will always point to our own wrapper functions,\r\n        // not the user's raw next() or catch() callbacks.\r\n        // tslint:disable-next-line:no-any Accept any result type for the next call in the Promise chain.\r\n        this.nextCallback = null;\r\n        // tslint:disable-next-line:no-any Accept any result type for the error handler.\r\n        this.catchCallback = null;\r\n        // When the operation resolves, we'll set result or error and mark isDone.\r\n        this.result = undefined;\r\n        this.error = undefined;\r\n        this.isDone = false;\r\n        // Set to true when .then() or .catch() are called and prevents additional\r\n        // chaining.\r\n        this.callbackAttached = false;\r\n        callback(function (value) {\r\n            _this.isDone = true;\r\n            _this.result = value;\r\n            if (_this.nextCallback) {\r\n                // value should be defined unless T is Void, but we can't express\r\n                // that in the type system.\r\n                _this.nextCallback(value);\r\n            }\r\n        }, function (error) {\r\n            _this.isDone = true;\r\n            _this.error = error;\r\n            if (_this.catchCallback) {\r\n                _this.catchCallback(error);\r\n            }\r\n        });\r\n    }\r\n    PersistencePromise.prototype.catch = function (fn) {\r\n        return this.next(undefined, fn);\r\n    };\r\n    PersistencePromise.prototype.next = function (nextFn, catchFn) {\r\n        var _this = this;\r\n        if (this.callbackAttached) {\r\n            fail('Called next() or catch() twice for PersistencePromise');\r\n        }\r\n        this.callbackAttached = true;\r\n        if (this.isDone) {\r\n            if (!this.error) {\r\n                return this.wrapSuccess(nextFn, this.result);\r\n            }\r\n            else {\r\n                return this.wrapFailure(catchFn, this.error);\r\n            }\r\n        }\r\n        else {\r\n            return new PersistencePromise(function (resolve, reject) {\r\n                _this.nextCallback = function (value) {\r\n                    _this.wrapSuccess(nextFn, value).next(resolve, reject);\r\n                };\r\n                _this.catchCallback = function (error) {\r\n                    _this.wrapFailure(catchFn, error).next(resolve, reject);\r\n                };\r\n            });\r\n        }\r\n    };\r\n    PersistencePromise.prototype.toPromise = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.next(resolve, reject);\r\n        });\r\n    };\r\n    PersistencePromise.prototype.wrapUserFunction = function (fn) {\r\n        try {\r\n            var result = fn();\r\n            if (result instanceof PersistencePromise) {\r\n                return result;\r\n            }\r\n            else {\r\n                return PersistencePromise.resolve(result);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return PersistencePromise.reject(e);\r\n        }\r\n    };\r\n    PersistencePromise.prototype.wrapSuccess = function (nextFn, value) {\r\n        if (nextFn) {\r\n            return this.wrapUserFunction(function () { return nextFn(value); });\r\n        }\r\n        else {\r\n            // If there's no nextFn, then R must be the same as T but we\r\n            // can't express that in the type system.\r\n            // tslint:disable-next-line:no-any\r\n            return PersistencePromise.resolve(value);\r\n        }\r\n    };\r\n    PersistencePromise.prototype.wrapFailure = function (catchFn, error) {\r\n        if (catchFn) {\r\n            return this.wrapUserFunction(function () { return catchFn(error); });\r\n        }\r\n        else {\r\n            return PersistencePromise.reject(error);\r\n        }\r\n    };\r\n    PersistencePromise.resolve = function (result) {\r\n        return new PersistencePromise(function (resolve, reject) {\r\n            resolve(result);\r\n        });\r\n    };\r\n    PersistencePromise.reject = function (error) {\r\n        return new PersistencePromise(function (resolve, reject) {\r\n            reject(error);\r\n        });\r\n    };\r\n    PersistencePromise.waitFor = function (\r\n    // tslint:disable-next-line:no-any Accept all Promise types in waitFor().\r\n    all) {\r\n        return all.reduce(function (promise, nextPromise, idx) {\r\n            return promise.next(function () {\r\n                return nextPromise;\r\n            });\r\n        }, PersistencePromise.resolve());\r\n    };\r\n    PersistencePromise.map = function (all) {\r\n        var results = [];\r\n        var first = true;\r\n        // initial is ignored, so we can cheat on the type.\r\n        // tslint:disable-next-line:no-any\r\n        var initial = PersistencePromise.resolve(null);\r\n        return all\r\n            .reduce(function (promise, nextPromise) {\r\n            return promise.next(function (result) {\r\n                if (!first) {\r\n                    results.push(result);\r\n                }\r\n                first = false;\r\n                return nextPromise;\r\n            });\r\n        }, initial)\r\n            .next(function (result) {\r\n            results.push(result);\r\n            return results;\r\n        });\r\n    };\r\n    return PersistencePromise;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A garbage collector implementation that eagerly collects documents as soon as\r\n * they're no longer referenced in any of its registered GarbageSources.\r\n *\r\n * This implementation keeps track of a set of keys that are potentially garbage\r\n * without keeping an exact reference count. During collectGarbage, the\r\n * collector verifies that all potential garbage keys actually have no\r\n * references by consulting its list of garbage sources.\r\n */\r\nvar EagerGarbageCollector = /** @class */ (function () {\r\n    function EagerGarbageCollector() {\r\n        this.isEager = true;\r\n        /**\r\n         * The garbage collectible sources to double-check during garbage collection.\r\n         */\r\n        this.sources = [];\r\n        /**\r\n         * A set of potentially garbage keys.\r\n         * PORTING NOTE: This would be a mutable set if Javascript had one.\r\n         */\r\n        this.potentialGarbage = documentKeySet();\r\n    }\r\n    EagerGarbageCollector.prototype.addGarbageSource = function (garbageSource) {\r\n        this.sources.push(garbageSource);\r\n        garbageSource.setGarbageCollector(this);\r\n    };\r\n    EagerGarbageCollector.prototype.removeGarbageSource = function (garbageSource) {\r\n        this.sources.splice(this.sources.indexOf(garbageSource), 1);\r\n        garbageSource.setGarbageCollector(null);\r\n    };\r\n    EagerGarbageCollector.prototype.addPotentialGarbageKey = function (key) {\r\n        this.potentialGarbage = this.potentialGarbage.add(key);\r\n    };\r\n    EagerGarbageCollector.prototype.collectGarbage = function (txn) {\r\n        var _this = this;\r\n        var promises = [];\r\n        var garbageKeys = documentKeySet();\r\n        this.potentialGarbage.forEach(function (key) {\r\n            var hasRefsPromise = _this.documentHasAnyReferences(txn, key);\r\n            promises.push(hasRefsPromise.next(function (hasRefs) {\r\n                // If there are no references, get the key.\r\n                if (!hasRefs) {\r\n                    garbageKeys = garbageKeys.add(key);\r\n                }\r\n                return PersistencePromise.resolve();\r\n            }));\r\n        });\r\n        // Clear locally retained potential keys and returned confirmed garbage.\r\n        this.potentialGarbage = documentKeySet();\r\n        return PersistencePromise.waitFor(promises).next(function () { return garbageKeys; });\r\n    };\r\n    EagerGarbageCollector.prototype.documentHasAnyReferences = function (txn, key) {\r\n        var initial = PersistencePromise.resolve(false);\r\n        return this.sources\r\n            .map(function (source) { return function () { return source.containsKey(txn, key); }; })\r\n            .reduce(function (promise, nextPromise) {\r\n            return promise.next(function (result) {\r\n                if (result) {\r\n                    return PersistencePromise.resolve(true);\r\n                }\r\n                else {\r\n                    return nextPromise();\r\n                }\r\n            });\r\n        }, initial);\r\n    };\r\n    return EagerGarbageCollector;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A set of changes to what documents are currently in view and out of view for\r\n * a given query. These changes are sent to the LocalStore by the View (via\r\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\r\n */\r\nvar LocalViewChanges = /** @class */ (function () {\r\n    function LocalViewChanges(query, addedKeys, removedKeys) {\r\n        this.query = query;\r\n        this.addedKeys = addedKeys;\r\n        this.removedKeys = removedKeys;\r\n    }\r\n    LocalViewChanges.fromSnapshot = function (viewSnapshot) {\r\n        var addedKeys = documentKeySet();\r\n        var removedKeys = documentKeySet();\r\n        for (var _i = 0, _a = viewSnapshot.docChanges; _i < _a.length; _i++) {\r\n            var docChange = _a[_i];\r\n            switch (docChange.type) {\r\n                case ChangeType.Added:\r\n                    addedKeys = addedKeys.add(docChange.doc.key);\r\n                    break;\r\n                case ChangeType.Removed:\r\n                    removedKeys = removedKeys.add(docChange.doc.key);\r\n                    break;\r\n                default:\r\n                // do nothing\r\n            }\r\n        }\r\n        return new LocalViewChanges(viewSnapshot.query, addedKeys, removedKeys);\r\n    };\r\n    return LocalViewChanges;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A collection of references to a document from some kind of numbered entity\r\n * (either a target ID or batch ID). As references are added to or removed from\r\n * the set corresponding events are emitted to a registered garbage collector.\r\n *\r\n * Each reference is represented by a DocumentReference object. Each of them\r\n * contains enough information to uniquely identify the reference. They are all\r\n * stored primarily in a set sorted by key. A document is considered garbage if\r\n * there's no references in that set (this can be efficiently checked thanks to\r\n * sorting by key).\r\n *\r\n * ReferenceSet also keeps a secondary set that contains references sorted by\r\n * IDs. This one is used to efficiently implement removal of all references by\r\n * some target ID.\r\n */\r\nvar ReferenceSet = /** @class */ (function () {\r\n    function ReferenceSet() {\r\n        // A set of outstanding references to a document sorted by key.\r\n        this.refsByKey = new SortedSet(DocReference.compareByKey);\r\n        // A set of outstanding references to a document sorted by target id.\r\n        this.refsByTarget = new SortedSet(DocReference.compareByTargetId);\r\n        /** Keeps track of keys that have references */\r\n        this.garbageCollector = null;\r\n    }\r\n    /** Returns true if the reference set contains no references. */\r\n    ReferenceSet.prototype.isEmpty = function () {\r\n        return this.refsByKey.isEmpty();\r\n    };\r\n    /** Adds a reference to the given document key for the given ID. */\r\n    ReferenceSet.prototype.addReference = function (key, id) {\r\n        var ref = new DocReference(key, id);\r\n        this.refsByKey = this.refsByKey.add(ref);\r\n        this.refsByTarget = this.refsByTarget.add(ref);\r\n    };\r\n    /** Add references to the given document keys for the given ID. */\r\n    ReferenceSet.prototype.addReferences = function (keys, id) {\r\n        var _this = this;\r\n        keys.forEach(function (key) { return _this.addReference(key, id); });\r\n    };\r\n    /**\r\n     * Removes a reference to the given document key for the given\r\n     * ID.\r\n     */\r\n    ReferenceSet.prototype.removeReference = function (key, id) {\r\n        this.removeRef(new DocReference(key, id));\r\n    };\r\n    ReferenceSet.prototype.removeReferences = function (keys, id) {\r\n        var _this = this;\r\n        keys.forEach(function (key) { return _this.removeReference(key, id); });\r\n    };\r\n    /**\r\n     * Clears all references with a given ID. Calls removeRef() for each key\r\n     * removed.\r\n     */\r\n    ReferenceSet.prototype.removeReferencesForId = function (id) {\r\n        var _this = this;\r\n        var emptyKey = DocumentKey.EMPTY;\r\n        var startRef = new DocReference(emptyKey, id);\r\n        var endRef = new DocReference(emptyKey, id + 1);\r\n        this.refsByTarget.forEachInRange([startRef, endRef], function (ref) {\r\n            _this.removeRef(ref);\r\n        });\r\n    };\r\n    ReferenceSet.prototype.removeAllReferences = function () {\r\n        var _this = this;\r\n        this.refsByKey.forEach(function (ref) { return _this.removeRef(ref); });\r\n    };\r\n    ReferenceSet.prototype.removeRef = function (ref) {\r\n        this.refsByKey = this.refsByKey.delete(ref);\r\n        this.refsByTarget = this.refsByTarget.delete(ref);\r\n        if (this.garbageCollector !== null) {\r\n            this.garbageCollector.addPotentialGarbageKey(ref.key);\r\n        }\r\n    };\r\n    ReferenceSet.prototype.referencesForId = function (id) {\r\n        var emptyKey = DocumentKey.EMPTY;\r\n        var startRef = new DocReference(emptyKey, id);\r\n        var endRef = new DocReference(emptyKey, id + 1);\r\n        var keys = documentKeySet();\r\n        this.refsByTarget.forEachInRange([startRef, endRef], function (ref) {\r\n            keys = keys.add(ref.key);\r\n        });\r\n        return keys;\r\n    };\r\n    ReferenceSet.prototype.setGarbageCollector = function (garbageCollector) {\r\n        this.garbageCollector = garbageCollector;\r\n    };\r\n    ReferenceSet.prototype.containsKey = function (txn, key) {\r\n        var ref = new DocReference(key, 0);\r\n        var firstRef = this.refsByKey.firstAfterOrEqual(ref);\r\n        return PersistencePromise.resolve(firstRef !== null && key.isEqual(firstRef.key));\r\n    };\r\n    return ReferenceSet;\r\n}());\r\nvar DocReference = /** @class */ (function () {\r\n    function DocReference(key, targetOrBatchId) {\r\n        this.key = key;\r\n        this.targetOrBatchId = targetOrBatchId;\r\n    }\r\n    /** Compare by key then by ID */\r\n    DocReference.compareByKey = function (left, right) {\r\n        return (DocumentKey.comparator(left.key, right.key) ||\r\n            primitiveComparator(left.targetOrBatchId, right.targetOrBatchId));\r\n    };\r\n    /** Compare by ID then by key */\r\n    DocReference.compareByTargetId = function (left, right) {\r\n        return (primitiveComparator(left.targetOrBatchId, right.targetOrBatchId) ||\r\n            DocumentKey.comparator(left.key, right.key));\r\n    };\r\n    return DocReference;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RESERVED_BITS = 1;\r\nvar GeneratorIds;\r\n(function (GeneratorIds) {\r\n    GeneratorIds[GeneratorIds[\"LocalStore\"] = 0] = \"LocalStore\";\r\n    GeneratorIds[GeneratorIds[\"SyncEngine\"] = 1] = \"SyncEngine\";\r\n})(GeneratorIds || (GeneratorIds = {}));\r\n/**\r\n * TargetIdGenerator generates monotonically increasing integer IDs. There are\r\n * separate generators for different scopes. While these generators will operate\r\n * independently of each other, they are scoped, such that no two generators\r\n * will ever produce the same ID. This is useful, because sometimes the backend\r\n * may group IDs from separate parts of the client into the same ID space.\r\n */\r\nvar TargetIdGenerator = /** @class */ (function () {\r\n    function TargetIdGenerator(generatorId, initAfter) {\r\n        if (initAfter === void 0) { initAfter = 0; }\r\n        this.generatorId = generatorId;\r\n        // Replace the generator part of initAfter with this generator's ID.\r\n        var afterWithoutGenerator = (initAfter >> RESERVED_BITS) << RESERVED_BITS;\r\n        var afterGenerator = initAfter - afterWithoutGenerator;\r\n        if (afterGenerator >= generatorId) {\r\n            // For example, if:\r\n            //   this.generatorId = 0b0000\r\n            //   after = 0b1011\r\n            //   afterGenerator = 0b0001\r\n            // Then:\r\n            //   previous = 0b1010\r\n            //   next = 0b1100\r\n            this.previousId = afterWithoutGenerator | this.generatorId;\r\n        }\r\n        else {\r\n            // For example, if:\r\n            //   this.generatorId = 0b0001\r\n            //   after = 0b1010\r\n            //   afterGenerator = 0b0000\r\n            // Then:\r\n            //   previous = 0b1001\r\n            //   next = 0b1011\r\n            this.previousId =\r\n                (afterWithoutGenerator | this.generatorId) - (1 << RESERVED_BITS);\r\n        }\r\n    }\r\n    TargetIdGenerator.prototype.next = function () {\r\n        this.previousId += 1 << RESERVED_BITS;\r\n        return this.previousId;\r\n    };\r\n    TargetIdGenerator.forLocalStore = function (initAfter) {\r\n        if (initAfter === void 0) { initAfter = 0; }\r\n        return new TargetIdGenerator(GeneratorIds.LocalStore, initAfter);\r\n    };\r\n    TargetIdGenerator.forSyncEngine = function () {\r\n        return new TargetIdGenerator(GeneratorIds.SyncEngine);\r\n    };\r\n    return TargetIdGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AddedLimboDocument = /** @class */ (function () {\r\n    function AddedLimboDocument(key) {\r\n        this.key = key;\r\n    }\r\n    return AddedLimboDocument;\r\n}());\r\nvar RemovedLimboDocument = /** @class */ (function () {\r\n    function RemovedLimboDocument(key) {\r\n        this.key = key;\r\n    }\r\n    return RemovedLimboDocument;\r\n}());\r\n/**\r\n * View is responsible for computing the final merged truth of what docs are in\r\n * a query. It gets notified of local and remote changes to docs, and applies\r\n * the query filters and limits to determine the most correct possible results.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query, \r\n    /** Documents included in the remote target */\r\n    _syncedDocuments) {\r\n        this.query = query;\r\n        this._syncedDocuments = _syncedDocuments;\r\n        this.syncState = null;\r\n        /**\r\n         * A flag whether the view is current with the backend. A view is considered\r\n         * current after it has seen the current flag from the backend and did not\r\n         * lose consistency within the watch stream (e.g. because of an existence\r\n         * filter mismatch).\r\n         */\r\n        this.current = false;\r\n        /** Documents in the view but not in the remote target */\r\n        this.limboDocuments = documentKeySet();\r\n        /** Document Keys that have local changes */\r\n        this.mutatedKeys = documentKeySet();\r\n        this.documentSet = new DocumentSet(query.docComparator.bind(query));\r\n    }\r\n    Object.defineProperty(View.prototype, \"syncedDocuments\", {\r\n        /**\r\n         * The set of remote documents that the server has told us belongs to the target associated with\r\n         * this view.\r\n         */\r\n        get: function () {\r\n            return this._syncedDocuments;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Iterates over a set of doc changes, applies the query limit, and computes\r\n     * what the new results should be, what the changes were, and whether we may\r\n     * need to go back to the local cache for more results. Does not make any\r\n     * changes to the view.\r\n     * @param docChanges The doc changes to apply to this view.\r\n     * @param previousChanges If this is being called with a refill, then start\r\n     *        with this set of docs and changes instead of the current view.\r\n     * @return a new set of docs, changes, and refill flag.\r\n     */\r\n    View.prototype.computeDocChanges = function (docChanges, previousChanges) {\r\n        var _this = this;\r\n        var changeSet = previousChanges\r\n            ? previousChanges.changeSet\r\n            : new DocumentChangeSet();\r\n        var oldDocumentSet = previousChanges\r\n            ? previousChanges.documentSet\r\n            : this.documentSet;\r\n        var newMutatedKeys = previousChanges\r\n            ? previousChanges.mutatedKeys\r\n            : this.mutatedKeys;\r\n        var newDocumentSet = oldDocumentSet;\r\n        var needsRefill = false;\r\n        // Track the last doc in a (full) limit. This is necessary, because some\r\n        // update (a delete, or an update moving a doc past the old limit) might\r\n        // mean there is some other document in the local cache that either should\r\n        // come (1) between the old last limit doc and the new last document, in the\r\n        // case of updates, or (2) after the new last document, in the case of\r\n        // deletes. So we keep this doc at the old limit to compare the updates to.\r\n        //\r\n        // Note that this should never get used in a refill (when previousChanges is\r\n        // set), because there will only be adds -- no deletes or updates.\r\n        var lastDocInLimit = this.query.hasLimit() && oldDocumentSet.size === this.query.limit\r\n            ? oldDocumentSet.last()\r\n            : null;\r\n        docChanges.inorderTraversal(function (key, newMaybeDoc) {\r\n            var oldDoc = oldDocumentSet.get(key);\r\n            var newDoc = newMaybeDoc instanceof Document ? newMaybeDoc : null;\r\n            if (newDoc) {\r\n                assert(key.isEqual(newDoc.key), 'Mismatching keys found in document changes: ' +\r\n                    key +\r\n                    ' != ' +\r\n                    newDoc.key);\r\n                newDoc = _this.query.matches(newDoc) ? newDoc : null;\r\n            }\r\n            if (newDoc) {\r\n                newDocumentSet = newDocumentSet.add(newDoc);\r\n                if (newDoc.hasLocalMutations) {\r\n                    newMutatedKeys = newMutatedKeys.add(key);\r\n                }\r\n                else {\r\n                    newMutatedKeys = newMutatedKeys.delete(key);\r\n                }\r\n            }\r\n            else {\r\n                newDocumentSet = newDocumentSet.delete(key);\r\n                newMutatedKeys = newMutatedKeys.delete(key);\r\n            }\r\n            // Calculate change\r\n            if (oldDoc && newDoc) {\r\n                var docsEqual = oldDoc.data.isEqual(newDoc.data);\r\n                if (!docsEqual ||\r\n                    oldDoc.hasLocalMutations !== newDoc.hasLocalMutations) {\r\n                    // only report a change if document actually changed\r\n                    if (docsEqual) {\r\n                        changeSet.track({ type: ChangeType.Metadata, doc: newDoc });\r\n                    }\r\n                    else {\r\n                        changeSet.track({ type: ChangeType.Modified, doc: newDoc });\r\n                    }\r\n                    if (lastDocInLimit &&\r\n                        _this.query.docComparator(newDoc, lastDocInLimit) > 0) {\r\n                        // This doc moved from inside the limit to after the limit.\r\n                        // That means there may be some doc in the local cache that's\r\n                        // actually less than this one.\r\n                        needsRefill = true;\r\n                    }\r\n                }\r\n            }\r\n            else if (!oldDoc && newDoc) {\r\n                changeSet.track({ type: ChangeType.Added, doc: newDoc });\r\n            }\r\n            else if (oldDoc && !newDoc) {\r\n                changeSet.track({ type: ChangeType.Removed, doc: oldDoc });\r\n                if (lastDocInLimit) {\r\n                    // A doc was removed from a full limit query. We'll need to\r\n                    // requery from the local cache to see if we know about some other\r\n                    // doc that should be in the results.\r\n                    needsRefill = true;\r\n                }\r\n            }\r\n        });\r\n        if (this.query.hasLimit()) {\r\n            // TODO(klimt): Make DocumentSet size be constant time.\r\n            while (newDocumentSet.size > this.query.limit) {\r\n                var oldDoc = newDocumentSet.last();\r\n                newDocumentSet = newDocumentSet.delete(oldDoc.key);\r\n                changeSet.track({ type: ChangeType.Removed, doc: oldDoc });\r\n            }\r\n        }\r\n        assert(!needsRefill || !previousChanges, 'View was refilled using docs that themselves needed refilling.');\r\n        return {\r\n            documentSet: newDocumentSet,\r\n            changeSet: changeSet,\r\n            needsRefill: needsRefill,\r\n            mutatedKeys: newMutatedKeys\r\n        };\r\n    };\r\n    /**\r\n     * Updates the view with the given ViewDocumentChanges and updates limbo docs\r\n     * and sync state from the given (optional) target change.\r\n     * @param docChanges The set of changes to make to the view's docs.\r\n     * @param targetChange A target change to apply for computing limbo docs and\r\n     *        sync state.\r\n     * @return A new ViewChange with the given docs, changes, and sync state.\r\n     */\r\n    View.prototype.applyChanges = function (docChanges, targetChange) {\r\n        var _this = this;\r\n        assert(!docChanges.needsRefill, 'Cannot apply changes that need a refill');\r\n        var oldDocs = this.documentSet;\r\n        this.documentSet = docChanges.documentSet;\r\n        this.mutatedKeys = docChanges.mutatedKeys;\r\n        // Sort changes based on type and query comparator\r\n        var changes = docChanges.changeSet.getChanges();\r\n        changes.sort(function (c1, c2) {\r\n            return (compareChangeType(c1.type, c2.type) ||\r\n                _this.query.docComparator(c1.doc, c2.doc));\r\n        });\r\n        this.applyTargetChange(targetChange);\r\n        var limboChanges = this.updateLimboDocuments();\r\n        var synced = this.limboDocuments.size === 0 && this.current;\r\n        var newSyncState = synced ? SyncState.Synced : SyncState.Local;\r\n        var syncStateChanged = newSyncState !== this.syncState;\r\n        this.syncState = newSyncState;\r\n        if (changes.length === 0 && !syncStateChanged) {\r\n            // no changes\r\n            return { limboChanges: limboChanges };\r\n        }\r\n        else {\r\n            var snap = new ViewSnapshot(this.query, docChanges.documentSet, oldDocs, changes, newSyncState === SyncState.Local, !docChanges.mutatedKeys.isEmpty(), syncStateChanged, \r\n            /* excludesMetadataChanges= */ false);\r\n            return {\r\n                snapshot: snap,\r\n                limboChanges: limboChanges\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * Applies an OnlineState change to the view, potentially generating a\r\n     * ViewChange if the view's syncState changes as a result.\r\n     */\r\n    View.prototype.applyOnlineStateChange = function (onlineState) {\r\n        if (this.current && onlineState === OnlineState.Offline) {\r\n            // If we're offline, set `current` to false and then call applyChanges()\r\n            // to refresh our syncState and generate a ViewChange as appropriate. We\r\n            // are guaranteed to get a new TargetChange that sets `current` back to\r\n            // true once the client is back online.\r\n            this.current = false;\r\n            return this.applyChanges({\r\n                documentSet: this.documentSet,\r\n                changeSet: new DocumentChangeSet(),\r\n                mutatedKeys: this.mutatedKeys,\r\n                needsRefill: false\r\n            });\r\n        }\r\n        else {\r\n            // No effect, just return a no-op ViewChange.\r\n            return { limboChanges: [] };\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether the doc for the given key should be in limbo.\r\n     */\r\n    View.prototype.shouldBeInLimbo = function (key) {\r\n        // If the remote end says it's part of this query, it's not in limbo.\r\n        if (this._syncedDocuments.has(key)) {\r\n            return false;\r\n        }\r\n        // The local store doesn't think it's a result, so it shouldn't be in limbo.\r\n        if (!this.documentSet.has(key)) {\r\n            return false;\r\n        }\r\n        // If there are local changes to the doc, they might explain why the server\r\n        // doesn't know that it's part of the query. So don't put it in limbo.\r\n        // TODO(klimt): Ideally, we would only consider changes that might actually\r\n        // affect this specific query.\r\n        if (this.documentSet.get(key).hasLocalMutations) {\r\n            return false;\r\n        }\r\n        // Everything else is in limbo.\r\n        return true;\r\n    };\r\n    /**\r\n     * Updates syncedDocuments, current, and limbo docs based on the given change.\r\n     * Returns the list of changes to which docs are in limbo.\r\n     */\r\n    View.prototype.applyTargetChange = function (targetChange) {\r\n        if (targetChange) {\r\n            var targetMapping = targetChange.mapping;\r\n            if (targetMapping instanceof ResetMapping) {\r\n                this._syncedDocuments = targetMapping.documents;\r\n            }\r\n            else if (targetMapping instanceof UpdateMapping) {\r\n                this._syncedDocuments = targetMapping.applyToKeySet(this._syncedDocuments);\r\n            }\r\n            switch (targetChange.currentStatusUpdate) {\r\n                case CurrentStatusUpdate.MarkCurrent:\r\n                    this.current = true;\r\n                    break;\r\n                case CurrentStatusUpdate.MarkNotCurrent:\r\n                    this.current = false;\r\n                    break;\r\n                case CurrentStatusUpdate.None:\r\n                    break;\r\n                default:\r\n                    fail('Unknown current status update: ' + targetChange.currentStatusUpdate);\r\n            }\r\n        }\r\n    };\r\n    View.prototype.updateLimboDocuments = function () {\r\n        var _this = this;\r\n        // We can only determine limbo documents when we're in-sync with the server.\r\n        if (!this.current) {\r\n            return [];\r\n        }\r\n        // TODO(klimt): Do this incrementally so that it's not quadratic when\r\n        // updating many documents.\r\n        var oldLimboDocuments = this.limboDocuments;\r\n        this.limboDocuments = documentKeySet();\r\n        this.documentSet.forEach(function (doc) {\r\n            if (_this.shouldBeInLimbo(doc.key)) {\r\n                _this.limboDocuments = _this.limboDocuments.add(doc.key);\r\n            }\r\n        });\r\n        // Diff the new limbo docs with the old limbo docs.\r\n        var changes = [];\r\n        oldLimboDocuments.forEach(function (key) {\r\n            if (!_this.limboDocuments.has(key)) {\r\n                changes.push(new RemovedLimboDocument(key));\r\n            }\r\n        });\r\n        this.limboDocuments.forEach(function (key) {\r\n            if (!oldLimboDocuments.has(key)) {\r\n                changes.push(new AddedLimboDocument(key));\r\n            }\r\n        });\r\n        return changes;\r\n    };\r\n    return View;\r\n}());\r\nfunction compareChangeType(c1, c2) {\r\n    var order = function (change) {\r\n        switch (change) {\r\n            case ChangeType.Added:\r\n                return 1;\r\n            case ChangeType.Modified:\r\n                return 2;\r\n            case ChangeType.Metadata:\r\n                // A metadata change is converted to a modified change at the public\r\n                // api layer.  Since we sort by document key and then change type,\r\n                // metadata and modified changes must be sorted equivalently.\r\n                return 2;\r\n            case ChangeType.Removed:\r\n                return 0;\r\n            default:\r\n                return fail('Unknown ChangeType: ' + change);\r\n        }\r\n    };\r\n    return order(c1) - order(c2);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG$1 = 'SyncEngine';\r\n/**\r\n * QueryView contains all of the data that SyncEngine needs to keep track of for\r\n * a particular query.\r\n */\r\nvar QueryView = /** @class */ (function () {\r\n    function QueryView(\r\n    /**\r\n     * The query itself.\r\n     */\r\n    query, \r\n    /**\r\n     * The target number created by the client that is used in the watch\r\n     * stream to identify this query.\r\n     */\r\n    targetId, \r\n    /**\r\n     * An identifier from the datastore backend that indicates the last state\r\n     * of the results that was received. This can be used to indicate where\r\n     * to continue receiving new doc changes for the query.\r\n     */\r\n    resumeToken, \r\n    /**\r\n     * The view is responsible for computing the final merged truth of what\r\n     * docs are in the query. It gets notified of local and remote changes,\r\n     * and applies the query filters and limits to determine the most correct\r\n     * possible results.\r\n     */\r\n    view) {\r\n        this.query = query;\r\n        this.targetId = targetId;\r\n        this.resumeToken = resumeToken;\r\n        this.view = view;\r\n    }\r\n    return QueryView;\r\n}());\r\n/**\r\n * SyncEngine is the central controller in the client SDK architecture. It is\r\n * the glue code between the EventManager, LocalStore, and RemoteStore. Some of\r\n * SyncEngine's responsibilities include:\r\n * 1. Coordinating client requests and remote events between the EventManager\r\n *    and the local and remote data stores.\r\n * 2. Managing a View object for each query, providing the unified view between\r\n *    the local and remote data stores.\r\n * 3. Notifying the RemoteStore when the LocalStore has new mutations in its\r\n *    queue that need sending to the backend.\r\n *\r\n * The SyncEngine’s methods should only ever be called by methods running in the\r\n * global async queue.\r\n */\r\nvar SyncEngine = /** @class */ (function () {\r\n    function SyncEngine(localStore, remoteStore, currentUser) {\r\n        this.localStore = localStore;\r\n        this.remoteStore = remoteStore;\r\n        this.currentUser = currentUser;\r\n        this.viewHandler = null;\r\n        this.errorHandler = null;\r\n        this.queryViewsByQuery = new ObjectMap(function (q) {\r\n            return q.canonicalId();\r\n        });\r\n        this.queryViewsByTarget = {};\r\n        this.limboTargetsByKey = new SortedMap(DocumentKey.comparator);\r\n        this.limboKeysByTarget = {};\r\n        this.limboDocumentRefs = new ReferenceSet();\r\n        this.limboCollector = new EagerGarbageCollector();\r\n        /** Stores user completion handlers, indexed by User and BatchId. */\r\n        this.mutationUserCallbacks = {};\r\n        this.targetIdGenerator = TargetIdGenerator.forSyncEngine();\r\n    }\r\n    /** Subscribes view and error handler. Can be called only once. */\r\n    SyncEngine.prototype.subscribe = function (viewHandler, errorHandler) {\r\n        assert(viewHandler !== null && errorHandler !== null, 'View and error handlers cannot be null');\r\n        assert(this.viewHandler === null && this.errorHandler === null, 'SyncEngine already has a subscriber.');\r\n        this.viewHandler = viewHandler;\r\n        this.errorHandler = errorHandler;\r\n        this.limboCollector.addGarbageSource(this.limboDocumentRefs);\r\n    };\r\n    /**\r\n     * Initiates the new listen, resolves promise when listen enqueued to the\r\n     * server. All the subsequent view snapshots or errors are sent to the\r\n     * subscribed handlers. Returns the targetId of the query.\r\n     */\r\n    SyncEngine.prototype.listen = function (query) {\r\n        var _this = this;\r\n        this.assertSubscribed('listen()');\r\n        assert(!this.queryViewsByQuery.has(query), 'We already listen to the query: ' + query);\r\n        return this.localStore.allocateQuery(query).then(function (queryData) {\r\n            return _this.localStore\r\n                .executeQuery(query)\r\n                .then(function (docs) {\r\n                return _this.localStore\r\n                    .remoteDocumentKeys(queryData.targetId)\r\n                    .then(function (remoteKeys) {\r\n                    var view = new View(query, remoteKeys);\r\n                    var viewDocChanges = view.computeDocChanges(docs);\r\n                    var viewChange = view.applyChanges(viewDocChanges);\r\n                    assert(viewChange.limboChanges.length === 0, 'View returned limbo docs before target ack from the server.');\r\n                    assert(!!viewChange.snapshot, 'applyChanges for new view should always return a snapshot');\r\n                    var data = new QueryView(query, queryData.targetId, queryData.resumeToken, view);\r\n                    _this.queryViewsByQuery.set(query, data);\r\n                    _this.queryViewsByTarget[queryData.targetId] = data;\r\n                    _this.viewHandler([viewChange.snapshot]);\r\n                    _this.remoteStore.listen(queryData);\r\n                });\r\n            })\r\n                .then(function () {\r\n                return queryData.targetId;\r\n            });\r\n        });\r\n    };\r\n    /** Stops listening to the query. */\r\n    SyncEngine.prototype.unlisten = function (query) {\r\n        var _this = this;\r\n        this.assertSubscribed('unlisten()');\r\n        var queryView = this.queryViewsByQuery.get(query);\r\n        assert(!!queryView, 'Trying to unlisten on query not found:' + query);\r\n        return this.localStore.releaseQuery(query).then(function () {\r\n            _this.remoteStore.unlisten(queryView.targetId);\r\n            return _this.removeAndCleanupQuery(queryView).then(function () {\r\n                return _this.localStore.collectGarbage();\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initiates the write of local mutation batch which involves adding the\r\n     * writes to the mutation queue, notifying the remote store about new\r\n     * mutations and raising events for any changes this write caused.\r\n     *\r\n     * The promise returned by this call is resolved when the above steps\r\n     * have completed, *not* when the write was acked by the backend. The\r\n     * userCallback is resolved once the write was acked/rejected by the\r\n     * backend (or failed locally for any other reason).\r\n     */\r\n    SyncEngine.prototype.write = function (batch, userCallback) {\r\n        var _this = this;\r\n        this.assertSubscribed('write()');\r\n        return this.localStore\r\n            .localWrite(batch)\r\n            .then(function (result) {\r\n            _this.addMutationCallback(result.batchId, userCallback);\r\n            return _this.emitNewSnapsAndNotifyLocalStore(result.changes);\r\n        })\r\n            .then(function () {\r\n            return _this.remoteStore.fillWritePipeline();\r\n        });\r\n    };\r\n    // TODO(klimt): Wrap the given error in a standard Firestore error object.\r\n    SyncEngine.prototype.wrapUpdateFunctionError = function (error$$1) {\r\n        return error$$1;\r\n    };\r\n    /**\r\n     * Takes an updateFunction in which a set of reads and writes can be performed\r\n     * atomically. In the updateFunction, the client can read and write values\r\n     * using the supplied transaction object. After the updateFunction, all\r\n     * changes will be committed. If some other client has changed any of the data\r\n     * referenced, then the updateFunction will be called again. If the\r\n     * updateFunction still fails after the given number of retries, then the\r\n     * transaction will be rejection.\r\n     *\r\n     * The transaction object passed to the updateFunction contains methods for\r\n     * accessing documents and collections. Unlike other datastore access, data\r\n     * accessed with the transaction will not reflect local changes that have not\r\n     * been committed. For this reason, it is required that all reads are\r\n     * performed before any writes. Transactions must be performed while online.\r\n     *\r\n     * The promise returned is resolved when the transaction is fully committed.\r\n     */\r\n    SyncEngine.prototype.runTransaction = function (updateFunction, retries) {\r\n        var _this = this;\r\n        if (retries === void 0) { retries = 5; }\r\n        assert(retries >= 0, 'Got negative number of retries for transaction.');\r\n        var transaction = this.remoteStore.createTransaction();\r\n        var wrappedUpdateFunction = function () {\r\n            try {\r\n                var userPromise = updateFunction(transaction);\r\n                if (isNullOrUndefined(userPromise) ||\r\n                    !userPromise.catch ||\r\n                    !userPromise.then) {\r\n                    return Promise.reject(Error('Transaction callback must return a Promise'));\r\n                }\r\n                return userPromise.catch(function (e) {\r\n                    return Promise.reject(_this.wrapUpdateFunctionError(e));\r\n                });\r\n            }\r\n            catch (e) {\r\n                return Promise.reject(_this.wrapUpdateFunctionError(e));\r\n            }\r\n        };\r\n        return wrappedUpdateFunction().then(function (result) {\r\n            return transaction\r\n                .commit()\r\n                .then(function () {\r\n                return result;\r\n            })\r\n                .catch(function (error$$1) {\r\n                if (retries === 0) {\r\n                    return Promise.reject(error$$1);\r\n                }\r\n                // TODO(klimt): Put in a retry delay?\r\n                return _this.runTransaction(updateFunction, retries - 1);\r\n            });\r\n        });\r\n    };\r\n    SyncEngine.prototype.applyRemoteEvent = function (remoteEvent) {\r\n        var _this = this;\r\n        this.assertSubscribed('applyRemoteEvent()');\r\n        // Make sure limbo documents are deleted if there were no results.\r\n        // Filter out document additions to targets that they already belong to.\r\n        forEachNumber(remoteEvent.targetChanges, function (targetId, targetChange) {\r\n            var limboKey = _this.limboKeysByTarget[targetId];\r\n            if (!limboKey) {\r\n                var qv = _this.queryViewsByTarget[targetId];\r\n                assert(!!qv, 'Missing QueryView for non-limbo query: ' + targetId);\r\n                targetChange.mapping.filterUpdates(qv.view.syncedDocuments);\r\n            }\r\n            else {\r\n                remoteEvent.synthesizeDeleteForLimboTargetChange(targetChange, limboKey);\r\n            }\r\n        });\r\n        return this.localStore.applyRemoteEvent(remoteEvent).then(function (changes) {\r\n            return _this.emitNewSnapsAndNotifyLocalStore(changes, remoteEvent);\r\n        });\r\n    };\r\n    /**\r\n     * Applies an OnlineState change to the sync engine and notifies any views of\r\n     * the change.\r\n     */\r\n    SyncEngine.prototype.applyOnlineStateChange = function (onlineState) {\r\n        var newViewSnapshots = [];\r\n        this.queryViewsByQuery.forEach(function (query, queryView) {\r\n            var viewChange = queryView.view.applyOnlineStateChange(onlineState);\r\n            assert(viewChange.limboChanges.length === 0, 'OnlineState should not affect limbo documents.');\r\n            if (viewChange.snapshot) {\r\n                newViewSnapshots.push(viewChange.snapshot);\r\n            }\r\n        });\r\n        this.viewHandler(newViewSnapshots);\r\n    };\r\n    SyncEngine.prototype.rejectListen = function (targetId, err) {\r\n        var _this = this;\r\n        this.assertSubscribed('rejectListens()');\r\n        var limboKey = this.limboKeysByTarget[targetId];\r\n        if (limboKey) {\r\n            // Since this query failed, we won't want to manually unlisten to it.\r\n            // So go ahead and remove it from bookkeeping.\r\n            this.limboTargetsByKey = this.limboTargetsByKey.remove(limboKey);\r\n            delete this.limboKeysByTarget[targetId];\r\n            // TODO(klimt): We really only should do the following on permission\r\n            // denied errors, but we don't have the cause code here.\r\n            // It's a limbo doc. Create a synthetic event saying it was deleted.\r\n            // This is kind of a hack. Ideally, we would have a method in the local\r\n            // store to purge a document. However, it would be tricky to keep all of\r\n            // the local store's invariants with another method.\r\n            var docMap = new SortedMap(DocumentKey.comparator);\r\n            docMap = docMap.insert(limboKey, new NoDocument(limboKey, SnapshotVersion.forDeletedDoc()));\r\n            var limboDocuments = documentKeySet().add(limboKey);\r\n            var event_1 = new RemoteEvent(SnapshotVersion.MIN, {}, docMap, limboDocuments);\r\n            return this.applyRemoteEvent(event_1);\r\n        }\r\n        else {\r\n            var queryView_1 = this.queryViewsByTarget[targetId];\r\n            assert(!!queryView_1, 'Unknown targetId: ' + targetId);\r\n            return this.localStore.releaseQuery(queryView_1.query).then(function () {\r\n                return _this.removeAndCleanupQuery(queryView_1).then(function () {\r\n                    _this.errorHandler(queryView_1.query, err);\r\n                });\r\n            });\r\n        }\r\n    };\r\n    SyncEngine.prototype.applySuccessfulWrite = function (mutationBatchResult) {\r\n        var _this = this;\r\n        this.assertSubscribed('applySuccessfulWrite()');\r\n        // The local store may or may not be able to apply the write result and\r\n        // raise events immediately (depending on whether the watcher is caught\r\n        // up), so we raise user callbacks first so that they consistently happen\r\n        // before listen events.\r\n        this.processUserCallback(mutationBatchResult.batch.batchId, \r\n        /*error=*/ null);\r\n        return this.localStore\r\n            .acknowledgeBatch(mutationBatchResult)\r\n            .then(function (changes) {\r\n            return _this.emitNewSnapsAndNotifyLocalStore(changes);\r\n        });\r\n    };\r\n    SyncEngine.prototype.rejectFailedWrite = function (batchId, error$$1) {\r\n        var _this = this;\r\n        this.assertSubscribed('rejectFailedWrite()');\r\n        // The local store may or may not be able to apply the write result and\r\n        // raise events immediately (depending on whether the watcher is caught up),\r\n        // so we raise user callbacks first so that they consistently happen before\r\n        // listen events.\r\n        this.processUserCallback(batchId, error$$1);\r\n        return this.localStore.rejectBatch(batchId).then(function (changes) {\r\n            return _this.emitNewSnapsAndNotifyLocalStore(changes);\r\n        });\r\n    };\r\n    SyncEngine.prototype.addMutationCallback = function (batchId, callback) {\r\n        var newCallbacks = this.mutationUserCallbacks[this.currentUser.toKey()];\r\n        if (!newCallbacks) {\r\n            newCallbacks = new SortedMap(primitiveComparator);\r\n        }\r\n        newCallbacks = newCallbacks.insert(batchId, callback);\r\n        this.mutationUserCallbacks[this.currentUser.toKey()] = newCallbacks;\r\n    };\r\n    /**\r\n     * Resolves or rejects the user callback for the given batch and then discards\r\n     * it.\r\n     */\r\n    SyncEngine.prototype.processUserCallback = function (batchId, error$$1) {\r\n        var newCallbacks = this.mutationUserCallbacks[this.currentUser.toKey()];\r\n        // NOTE: Mutations restored from persistence won't have callbacks, so it's\r\n        // okay for there to be no callback for this ID.\r\n        if (newCallbacks) {\r\n            var callback = newCallbacks.get(batchId);\r\n            if (callback) {\r\n                assert(batchId === newCallbacks.minKey(), 'Mutation callbacks processed out-of-order?');\r\n                if (error$$1) {\r\n                    callback.reject(error$$1);\r\n                }\r\n                else {\r\n                    callback.resolve();\r\n                }\r\n                newCallbacks = newCallbacks.remove(batchId);\r\n            }\r\n            this.mutationUserCallbacks[this.currentUser.toKey()] = newCallbacks;\r\n        }\r\n    };\r\n    SyncEngine.prototype.removeAndCleanupQuery = function (queryView) {\r\n        this.queryViewsByQuery.delete(queryView.query);\r\n        delete this.queryViewsByTarget[queryView.targetId];\r\n        this.limboDocumentRefs.removeReferencesForId(queryView.targetId);\r\n        return this.gcLimboDocuments();\r\n    };\r\n    SyncEngine.prototype.updateTrackedLimbos = function (targetId, limboChanges) {\r\n        for (var _i = 0, limboChanges_1 = limboChanges; _i < limboChanges_1.length; _i++) {\r\n            var limboChange = limboChanges_1[_i];\r\n            if (limboChange instanceof AddedLimboDocument) {\r\n                this.limboDocumentRefs.addReference(limboChange.key, targetId);\r\n                this.trackLimboChange(limboChange);\r\n            }\r\n            else if (limboChange instanceof RemovedLimboDocument) {\r\n                debug(LOG_TAG$1, 'Document no longer in limbo: ' + limboChange.key);\r\n                this.limboDocumentRefs.removeReference(limboChange.key, targetId);\r\n            }\r\n            else {\r\n                fail('Unknown limbo change: ' + JSON.stringify(limboChange));\r\n            }\r\n        }\r\n        return this.gcLimboDocuments();\r\n    };\r\n    SyncEngine.prototype.trackLimboChange = function (limboChange) {\r\n        var key = limboChange.key;\r\n        if (!this.limboTargetsByKey.get(key)) {\r\n            debug(LOG_TAG$1, 'New document in limbo: ' + key);\r\n            var limboTargetId = this.targetIdGenerator.next();\r\n            var query = Query.atPath(key.path);\r\n            this.limboKeysByTarget[limboTargetId] = key;\r\n            this.remoteStore.listen(new QueryData(query, limboTargetId, QueryPurpose.Listen));\r\n            this.limboTargetsByKey = this.limboTargetsByKey.insert(key, limboTargetId);\r\n        }\r\n    };\r\n    SyncEngine.prototype.gcLimboDocuments = function () {\r\n        var _this = this;\r\n        // HACK: We can use a null transaction here, because we know that the\r\n        // reference set is entirely within memory and doesn't need a store engine.\r\n        return this.limboCollector\r\n            .collectGarbage(null)\r\n            .next(function (keys) {\r\n            keys.forEach(function (key) {\r\n                var limboTargetId = _this.limboTargetsByKey.get(key);\r\n                if (limboTargetId === null) {\r\n                    // This target already got removed, because the query failed.\r\n                    return;\r\n                }\r\n                _this.remoteStore.unlisten(limboTargetId);\r\n                _this.limboTargetsByKey = _this.limboTargetsByKey.remove(key);\r\n                delete _this.limboKeysByTarget[limboTargetId];\r\n            });\r\n        })\r\n            .toPromise();\r\n    };\r\n    // Visible for testing\r\n    SyncEngine.prototype.currentLimboDocs = function () {\r\n        return this.limboTargetsByKey;\r\n    };\r\n    SyncEngine.prototype.emitNewSnapsAndNotifyLocalStore = function (changes, remoteEvent) {\r\n        var _this = this;\r\n        var newSnaps = [];\r\n        var docChangesInAllViews = [];\r\n        var queriesProcessed = [];\r\n        this.queryViewsByQuery.forEach(function (_, queryView) {\r\n            queriesProcessed.push(Promise.resolve()\r\n                .then(function () {\r\n                var viewDocChanges = queryView.view.computeDocChanges(changes);\r\n                if (!viewDocChanges.needsRefill) {\r\n                    return viewDocChanges;\r\n                }\r\n                // The query has a limit and some docs were removed, so we need\r\n                // to re-run the query against the local store to make sure we\r\n                // didn't lose any good docs that had been past the limit.\r\n                return _this.localStore.executeQuery(queryView.query).then(function (docs) {\r\n                    return queryView.view.computeDocChanges(docs, viewDocChanges);\r\n                });\r\n            })\r\n                .then(function (viewDocChanges) {\r\n                var targetChange = remoteEvent && remoteEvent.targetChanges[queryView.targetId];\r\n                var viewChange = queryView.view.applyChanges(viewDocChanges, targetChange);\r\n                return _this.updateTrackedLimbos(queryView.targetId, viewChange.limboChanges).then(function () {\r\n                    if (viewChange.snapshot) {\r\n                        newSnaps.push(viewChange.snapshot);\r\n                        var docChanges = LocalViewChanges.fromSnapshot(viewChange.snapshot);\r\n                        docChangesInAllViews.push(docChanges);\r\n                    }\r\n                });\r\n            }));\r\n        });\r\n        return Promise.all(queriesProcessed)\r\n            .then(function () {\r\n            _this.viewHandler(newSnaps);\r\n            return _this.localStore.notifyLocalViewChanges(docChangesInAllViews);\r\n        })\r\n            .then(function () {\r\n            return _this.localStore.collectGarbage();\r\n        });\r\n    };\r\n    SyncEngine.prototype.assertSubscribed = function (fnName) {\r\n        assert(this.viewHandler !== null && this.errorHandler !== null, 'Trying to call ' + fnName + ' before calling subscribe().');\r\n    };\r\n    SyncEngine.prototype.handleUserChange = function (user) {\r\n        var _this = this;\r\n        this.currentUser = user;\r\n        return this.localStore\r\n            .handleUserChange(user)\r\n            .then(function (changes) {\r\n            return _this.emitNewSnapsAndNotifyLocalStore(changes);\r\n        })\r\n            .then(function () {\r\n            return _this.remoteStore.handleUserChange(user);\r\n        });\r\n    };\r\n    return SyncEngine;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar BATCHID_UNKNOWN = -1;\r\n/**\r\n * A batch of mutations that will be sent as one unit to the backend.\r\n */\r\nvar MutationBatch = /** @class */ (function () {\r\n    function MutationBatch(batchId, localWriteTime, mutations) {\r\n        this.batchId = batchId;\r\n        this.localWriteTime = localWriteTime;\r\n        this.mutations = mutations;\r\n    }\r\n    /**\r\n     * Applies all the mutations in this MutationBatch to the specified document\r\n     * to create a new remote document\r\n     *\r\n     * @param docKey The key of the document to apply mutations to.\r\n     * @param maybeDoc The document to apply mutations to.\r\n     * @param batchResult The result of applying the MutationBatch to the\r\n     * backend.\r\n     */\r\n    MutationBatch.prototype.applyToRemoteDocument = function (docKey, maybeDoc, batchResult) {\r\n        if (maybeDoc) {\r\n            assert(maybeDoc.key.isEqual(docKey), \"applyToRemoteDocument: key \" + docKey + \" should match maybeDoc key\\n        \" + maybeDoc.key);\r\n        }\r\n        var mutationResults = batchResult.mutationResults;\r\n        assert(mutationResults.length === this.mutations.length, \"Mismatch between mutations length\\n      (\" + this.mutations.length + \") and mutation results length\\n      (\" + mutationResults.length + \").\");\r\n        for (var i = 0; i < this.mutations.length; i++) {\r\n            var mutation = this.mutations[i];\r\n            if (mutation.key.isEqual(docKey)) {\r\n                var mutationResult = mutationResults[i];\r\n                maybeDoc = mutation.applyToRemoteDocument(maybeDoc, mutationResult);\r\n            }\r\n        }\r\n        return maybeDoc;\r\n    };\r\n    /**\r\n     * Computes the local view of a document given all the mutations in this\r\n     * batch.\r\n     *\r\n     * @param docKey The key of the document to apply mutations to.\r\n     * @param maybeDoc The document to apply mutations to.\r\n     */\r\n    MutationBatch.prototype.applyToLocalView = function (docKey, maybeDoc) {\r\n        if (maybeDoc) {\r\n            assert(maybeDoc.key.isEqual(docKey), \"applyToLocalDocument: key \" + docKey + \" should match maybeDoc key\\n        \" + maybeDoc.key);\r\n        }\r\n        var baseDoc = maybeDoc;\r\n        for (var i = 0; i < this.mutations.length; i++) {\r\n            var mutation = this.mutations[i];\r\n            if (mutation.key.isEqual(docKey)) {\r\n                maybeDoc = mutation.applyToLocalView(maybeDoc, baseDoc, this.localWriteTime);\r\n            }\r\n        }\r\n        return maybeDoc;\r\n    };\r\n    MutationBatch.prototype.keys = function () {\r\n        var keySet = documentKeySet();\r\n        for (var _i = 0, _a = this.mutations; _i < _a.length; _i++) {\r\n            var mutation = _a[_i];\r\n            keySet = keySet.add(mutation.key);\r\n        }\r\n        return keySet;\r\n    };\r\n    MutationBatch.prototype.isEqual = function (other) {\r\n        return (this.batchId === other.batchId &&\r\n            arrayEquals(this.mutations, other.mutations));\r\n    };\r\n    /**\r\n     * Returns true if this mutation batch has already been removed from the\r\n     * mutation queue.\r\n     *\r\n     * Note that not all implementations of the MutationQueue necessarily use\r\n     * tombstones as part of their implementation and generally speaking no code\r\n     * outside the mutation queues should really care about this.\r\n     */\r\n    MutationBatch.prototype.isTombstone = function () {\r\n        return this.mutations.length === 0;\r\n    };\r\n    /** Converts this batch into a tombstone */\r\n    MutationBatch.prototype.toTombstone = function () {\r\n        return new MutationBatch(this.batchId, this.localWriteTime, []);\r\n    };\r\n    return MutationBatch;\r\n}());\r\n/** The result of applying a mutation batch to the backend. */\r\nvar MutationBatchResult = /** @class */ (function () {\r\n    function MutationBatchResult(batch, commitVersion, mutationResults, streamToken, \r\n    /**\r\n     * A pre-computed mapping from each mutated document to the resulting\r\n     * version.\r\n     */\r\n    docVersions) {\r\n        this.batch = batch;\r\n        this.commitVersion = commitVersion;\r\n        this.mutationResults = mutationResults;\r\n        this.streamToken = streamToken;\r\n        this.docVersions = docVersions;\r\n    }\r\n    /**\r\n     * Creates a new MutationBatchResult for the given batch and results. There\r\n     * must be one result for each mutation in the batch. This static factory\r\n     * caches a document=>version mapping (docVersions).\r\n     */\r\n    MutationBatchResult.from = function (batch, commitVersion, results, streamToken) {\r\n        assert(batch.mutations.length === results.length, 'Mutations sent ' +\r\n            batch.mutations.length +\r\n            ' must equal results received ' +\r\n            results.length);\r\n        var versionMap = documentVersionMap();\r\n        var mutations = batch.mutations;\r\n        for (var i = 0; i < mutations.length; i++) {\r\n            var version = results[i].version;\r\n            if (version === null) {\r\n                // deletes don't have a version, so we substitute the commitVersion\r\n                // of the entire batch.\r\n                version = commitVersion;\r\n            }\r\n            versionMap = versionMap.insert(mutations[i].key, version);\r\n        }\r\n        return new MutationBatchResult(batch, commitVersion, results, streamToken, versionMap);\r\n    };\r\n    return MutationBatchResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar escapeChar = '\\u0001';\r\nvar encodedSeparatorChar = '\\u0001';\r\nvar encodedNul = '\\u0010';\r\nvar encodedEscape = '\\u0011';\r\n/**\r\n * Encodes a resource path into a IndexedDb-compatible string form.\r\n */\r\nfunction encode(path) {\r\n    var result = '';\r\n    for (var i = 0; i < path.length; i++) {\r\n        if (result.length > 0) {\r\n            result = encodeSeparator(result);\r\n        }\r\n        result = encodeSegment(path.get(i), result);\r\n    }\r\n    return encodeSeparator(result);\r\n}\r\n/** Encodes a single segment of a resource path into the given result */\r\nfunction encodeSegment(segment, resultBuf) {\r\n    var result = resultBuf;\r\n    var length = segment.length;\r\n    for (var i = 0; i < length; i++) {\r\n        var c = segment.charAt(i);\r\n        switch (c) {\r\n            case '\\0':\r\n                result += escapeChar + encodedNul;\r\n                break;\r\n            case escapeChar:\r\n                result += escapeChar + encodedEscape;\r\n                break;\r\n            default:\r\n                result += c;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/** Encodes a path separator into the given result */\r\nfunction encodeSeparator(result) {\r\n    return result + escapeChar + encodedSeparatorChar;\r\n}\r\n/**\r\n * Decodes the given IndexedDb-compatible string form of a resource path into\r\n * a ResourcePath instance. Note that this method is not suitable for use with\r\n * decoding resource names from the server; those are One Platform format\r\n * strings.\r\n */\r\nfunction decode$1(path) {\r\n    // Event the empty path must encode as a path of at least length 2. A path\r\n    // with exactly 2 must be the empty path.\r\n    var length = path.length;\r\n    assert(length >= 2, 'Invalid path ' + path);\r\n    if (length === 2) {\r\n        assert(path.charAt(0) === escapeChar && path.charAt(1) === encodedSeparatorChar, 'Non-empty path ' + path + ' had length 2');\r\n        return ResourcePath.EMPTY_PATH;\r\n    }\r\n    // Escape characters cannot exist past the second-to-last position in the\r\n    // source value.\r\n    var lastReasonableEscapeIndex = length - 2;\r\n    var segments = [];\r\n    var segmentBuilder = '';\r\n    for (var start = 0; start < length;) {\r\n        // The last two characters of a valid encoded path must be a separator, so\r\n        // there must be an end to this segment.\r\n        var end = path.indexOf(escapeChar, start);\r\n        if (end < 0 || end > lastReasonableEscapeIndex) {\r\n            fail('Invalid encoded resource path: \"' + path + '\"');\r\n        }\r\n        var next = path.charAt(end + 1);\r\n        switch (next) {\r\n            case encodedSeparatorChar:\r\n                var currentPiece = path.substring(start, end);\r\n                var segment = void 0;\r\n                if (segmentBuilder.length === 0) {\r\n                    // Avoid copying for the common case of a segment that excludes \\0\r\n                    // and \\001\r\n                    segment = currentPiece;\r\n                }\r\n                else {\r\n                    segmentBuilder += currentPiece;\r\n                    segment = segmentBuilder;\r\n                    segmentBuilder = '';\r\n                }\r\n                segments.push(segment);\r\n                break;\r\n            case encodedNul:\r\n                segmentBuilder += path.substring(start, end);\r\n                segmentBuilder += '\\0';\r\n                break;\r\n            case encodedEscape:\r\n                // The escape character can be used in the output to encode itself.\r\n                segmentBuilder += path.substring(start, end + 1);\r\n                break;\r\n            default:\r\n                fail('Invalid encoded resource path: \"' + path + '\"');\r\n        }\r\n        start = end + 2;\r\n    }\r\n    return new ResourcePath(segments);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Schema Version for the Web client:\r\n * 1. Initial version including Mutation Queue, Query Cache, and Remote Document\r\n *    Cache\r\n * 2. Added targetCount to targetGlobal row.\r\n */\r\nvar SCHEMA_VERSION = 2;\r\n/**\r\n * Performs database creation and schema upgrades.\r\n *\r\n * Note that in production, this method is only ever used to upgrade the schema\r\n * to SCHEMA_VERSION. Different values of toVersion are only used for testing\r\n * and local feature development.\r\n */\r\nfunction createOrUpgradeDb(db, txn, fromVersion, toVersion) {\r\n    // This function currently supports migrating to schema version 1 (Mutation\r\n    // Queue, Query and Remote Document Cache) and schema version 2 (Query\r\n    // counting).\r\n    assert(fromVersion < toVersion && fromVersion >= 0 && toVersion <= 2, 'Unexpected schema upgrade from v${fromVersion} to v{toVersion}.');\r\n    if (fromVersion < 1 && toVersion >= 1) {\r\n        createOwnerStore(db);\r\n        createMutationQueue(db);\r\n        createQueryCache(db);\r\n        createRemoteDocumentCache(db);\r\n    }\r\n    var p = PersistencePromise.resolve();\r\n    if (fromVersion < 2 && toVersion >= 2) {\r\n        p = ensureTargetGlobalExists(txn).next(function (targetGlobal) {\r\n            return saveTargetCount(txn, targetGlobal);\r\n        });\r\n    }\r\n    return p;\r\n}\r\n/**\r\n * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.\r\n */\r\nvar DbTimestamp = /** @class */ (function () {\r\n    function DbTimestamp(seconds, nanoseconds) {\r\n        this.seconds = seconds;\r\n        this.nanoseconds = nanoseconds;\r\n    }\r\n    return DbTimestamp;\r\n}());\r\n/**\r\n * A singleton object to be stored in the 'owner' store in IndexedDb.\r\n *\r\n * A given database can be owned by a single tab at a given time. That tab\r\n * must validate that it is still the owner before every write operation and\r\n * should regularly write an updated timestamp to prevent other tabs from\r\n * \"stealing\" ownership of the db.\r\n */\r\nvar DbOwner = /** @class */ (function () {\r\n    function DbOwner(ownerId, leaseTimestampMs) {\r\n        this.ownerId = ownerId;\r\n        this.leaseTimestampMs = leaseTimestampMs;\r\n    }\r\n    /** Name of the IndexedDb object store. */\r\n    DbOwner.store = 'owner';\r\n    return DbOwner;\r\n}());\r\nfunction createOwnerStore(db) {\r\n    db.createObjectStore(DbOwner.store);\r\n}\r\n/**\r\n * An object to be stored in the 'mutationQueues' store in IndexedDb.\r\n *\r\n * Each user gets a single queue of MutationBatches to apply to the server.\r\n * DbMutationQueue tracks the metadata about the queue.\r\n */\r\nvar DbMutationQueue = /** @class */ (function () {\r\n    function DbMutationQueue(\r\n    /**\r\n     * The normalized user ID to which this queue belongs.\r\n     */\r\n    userId, \r\n    /**\r\n     * An identifier for the highest numbered batch that has been acknowledged\r\n     * by the server. All MutationBatches in this queue with batchIds less\r\n     * than or equal to this value are considered to have been acknowledged by\r\n     * the server.\r\n     */\r\n    lastAcknowledgedBatchId, \r\n    /**\r\n     * A stream token that was previously sent by the server.\r\n     *\r\n     * See StreamingWriteRequest in datastore.proto for more details about\r\n     * usage.\r\n     *\r\n     * After sending this token, earlier tokens may not be used anymore so\r\n     * only a single stream token is retained.\r\n     */\r\n    lastStreamToken) {\r\n        this.userId = userId;\r\n        this.lastAcknowledgedBatchId = lastAcknowledgedBatchId;\r\n        this.lastStreamToken = lastStreamToken;\r\n    }\r\n    /** Name of the IndexedDb object store.  */\r\n    DbMutationQueue.store = 'mutationQueues';\r\n    /** Keys are automatically assigned via the userId property. */\r\n    DbMutationQueue.keyPath = 'userId';\r\n    return DbMutationQueue;\r\n}());\r\n/**\r\n * An object to be stored in the 'mutations' store in IndexedDb.\r\n *\r\n * Represents a batch of user-level mutations intended to be sent to the server\r\n * in a single write. Each user-level batch gets a separate DbMutationBatch\r\n * with a new batchId.\r\n */\r\nvar DbMutationBatch = /** @class */ (function () {\r\n    function DbMutationBatch(\r\n    /**\r\n     * The normalized user ID to which this batch belongs.\r\n     */\r\n    userId, \r\n    /**\r\n     * An identifier for this batch, allocated by the mutation queue in a\r\n     * monotonically increasing manner.\r\n     */\r\n    batchId, \r\n    /**\r\n     * The local write time of the batch, stored as milliseconds since the\r\n     * epoch.\r\n     */\r\n    localWriteTimeMs, \r\n    /**\r\n     * A list of mutations to apply. All mutations will be applied atomically.\r\n     *\r\n     * Mutations are serialized via JsonProtoSerializer.toMutation().\r\n     */\r\n    mutations) {\r\n        this.userId = userId;\r\n        this.batchId = batchId;\r\n        this.localWriteTimeMs = localWriteTimeMs;\r\n        this.mutations = mutations;\r\n    }\r\n    /** Name of the IndexedDb object store.  */\r\n    DbMutationBatch.store = 'mutations';\r\n    /** Keys are automatically assigned via the userId, batchId properties. */\r\n    DbMutationBatch.keyPath = ['userId', 'batchId'];\r\n    return DbMutationBatch;\r\n}());\r\nfunction createMutationQueue(db) {\r\n    db.createObjectStore(DbMutationQueue.store, {\r\n        keyPath: DbMutationQueue.keyPath\r\n    });\r\n    db.createObjectStore(DbMutationBatch.store, {\r\n        keyPath: DbMutationBatch.keyPath\r\n    });\r\n    db.createObjectStore(DbDocumentMutation.store);\r\n}\r\n/**\r\n * An object to be stored in the 'documentMutations' store in IndexedDb.\r\n *\r\n * A manually maintained index of all the mutation batches that affect a given\r\n * document key. The rows in this table are references based on the contents of\r\n * DbMutationBatch.mutations.\r\n */\r\nvar DbDocumentMutation = /** @class */ (function () {\r\n    function DbDocumentMutation() {\r\n    }\r\n    /**\r\n     * Creates a [userId] key for use in the DbDocumentMutations index to iterate\r\n     * over all of a user's document mutations.\r\n     */\r\n    DbDocumentMutation.prefixForUser = function (userId) {\r\n        return [userId];\r\n    };\r\n    /**\r\n     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\r\n     * index to iterate over all at document mutations for a given path or lower.\r\n     */\r\n    DbDocumentMutation.prefixForPath = function (userId, path) {\r\n        return [userId, encode(path)];\r\n    };\r\n    /**\r\n     * Creates a full index key of [userId, encodedPath, batchId] for inserting\r\n     * and deleting into the DbDocumentMutations index.\r\n     */\r\n    DbDocumentMutation.key = function (userId, path, batchId) {\r\n        return [userId, encode(path), batchId];\r\n    };\r\n    DbDocumentMutation.store = 'documentMutations';\r\n    /**\r\n     * Because we store all the useful information for this store in the key,\r\n     * there is no useful information to store as the value. The raw (unencoded)\r\n     * path cannot be stored because IndexedDb doesn't store prototype\r\n     * information.\r\n     */\r\n    DbDocumentMutation.PLACEHOLDER = new DbDocumentMutation();\r\n    return DbDocumentMutation;\r\n}());\r\nfunction createRemoteDocumentCache(db) {\r\n    db.createObjectStore(DbRemoteDocument.store);\r\n}\r\n/**\r\n * Represents the known absence of a document at a particular version.\r\n * Stored in IndexedDb as part of a DbRemoteDocument object.\r\n */\r\nvar DbNoDocument = /** @class */ (function () {\r\n    function DbNoDocument(path, readTime) {\r\n        this.path = path;\r\n        this.readTime = readTime;\r\n    }\r\n    return DbNoDocument;\r\n}());\r\n/**\r\n * An object to be stored in the 'remoteDocuments' store in IndexedDb. It\r\n * represents either a cached document (if it exists) or a cached \"no-document\"\r\n * (if it is known to not exist).\r\n *\r\n * Note: This is the persisted equivalent of a MaybeDocument and could perhaps\r\n * be made more general if necessary.\r\n */\r\nvar DbRemoteDocument = /** @class */ (function () {\r\n    function DbRemoteDocument(\r\n    /**\r\n     * Set to an instance of a DbNoDocument if it is known that no document\r\n     * exists.\r\n     */\r\n    noDocument, \r\n    /**\r\n     * Set to an instance of a Document if there's a cached version of the\r\n     * document.\r\n     */\r\n    document) {\r\n        this.noDocument = noDocument;\r\n        this.document = document;\r\n    }\r\n    DbRemoteDocument.store = 'remoteDocuments';\r\n    return DbRemoteDocument;\r\n}());\r\n/**\r\n * An object to be stored in the 'targets' store in IndexedDb.\r\n *\r\n * This is based on and should be kept in sync with the proto used in the iOS\r\n * client.\r\n *\r\n * Each query the client listens to against the server is tracked on disk so\r\n * that the query can be efficiently resumed on restart.\r\n */\r\nvar DbTarget = /** @class */ (function () {\r\n    function DbTarget(\r\n    /**\r\n     * An auto-generated sequential numeric identifier for the query.\r\n     *\r\n     * Queries are stored using their canonicalId as the key, but these\r\n     * canonicalIds can be quite long so we additionally assign a unique\r\n     * queryId which can be used by referenced data structures (e.g.\r\n     * indexes) to minimize the on-disk cost.\r\n     */\r\n    targetId, \r\n    /**\r\n     * The canonical string representing this query. This is not unique.\r\n     */\r\n    canonicalId, \r\n    /**\r\n     * The last readTime received from the Watch Service for this query.\r\n     *\r\n     * This is the same value as TargetChange.read_time in the protos.\r\n     */\r\n    readTime, \r\n    /**\r\n     * An opaque, server-assigned token that allows watching a query to be\r\n     * resumed after disconnecting without retransmitting all the data\r\n     * that matches the query. The resume token essentially identifies a\r\n     * point in time from which the server should resume sending results.\r\n     *\r\n     * This is related to the snapshotVersion in that the resumeToken\r\n     * effectively also encodes that value, but the resumeToken is opaque\r\n     * and sometimes encodes additional information.\r\n     *\r\n     * A consequence of this is that the resumeToken should be used when\r\n     * asking the server to reason about where this client is in the watch\r\n     * stream, but the client should use the snapshotVersion for its own\r\n     * purposes.\r\n     *\r\n     * This is the same value as TargetChange.resume_token in the protos.\r\n     */\r\n    resumeToken, \r\n    /**\r\n     * A sequence number representing the last time this query was\r\n     * listened to, used for garbage collection purposes.\r\n     *\r\n     * Conventionally this would be a timestamp value, but device-local\r\n     * clocks are unreliable and they must be able to create new listens\r\n     * even while disconnected. Instead this should be a monotonically\r\n     * increasing number that's incremented on each listen call.\r\n     *\r\n     * This is different from the queryId since the queryId is an\r\n     * immutable identifier assigned to the Query on first use while\r\n     * lastListenSequenceNumber is updated every time the query is\r\n     * listened to.\r\n     */\r\n    lastListenSequenceNumber, \r\n    /**\r\n     * The query for this target.\r\n     *\r\n     * Because canonical ids are not unique we must store the actual query. We\r\n     * use the proto to have an object we can persist without having to\r\n     * duplicate translation logic to and from a `Query` object.\r\n     */\r\n    query) {\r\n        this.targetId = targetId;\r\n        this.canonicalId = canonicalId;\r\n        this.readTime = readTime;\r\n        this.resumeToken = resumeToken;\r\n        this.lastListenSequenceNumber = lastListenSequenceNumber;\r\n        this.query = query;\r\n    }\r\n    DbTarget.store = 'targets';\r\n    /** Keys are automatically assigned via the targetId property. */\r\n    DbTarget.keyPath = 'targetId';\r\n    /** The name of the queryTargets index. */\r\n    DbTarget.queryTargetsIndexName = 'queryTargetsIndex';\r\n    /**\r\n     * The index of all canonicalIds to the targets that they match. This is not\r\n     * a unique mapping because canonicalId does not promise a unique name for all\r\n     * possible queries, so we append the targetId to make the mapping unique.\r\n     */\r\n    DbTarget.queryTargetsKeyPath = ['canonicalId', 'targetId'];\r\n    return DbTarget;\r\n}());\r\n/**\r\n * An object representing an association between a target and a document.\r\n * Stored in the targetDocument object store to store the documents tracked by a\r\n * particular target.\r\n */\r\nvar DbTargetDocument = /** @class */ (function () {\r\n    function DbTargetDocument(\r\n    /**\r\n     * The targetId identifying a target.\r\n     */\r\n    targetId, \r\n    /**\r\n     * The path to the document, as encoded in the key.\r\n     */\r\n    path) {\r\n        this.targetId = targetId;\r\n        this.path = path;\r\n    }\r\n    /** Name of the IndexedDb object store.  */\r\n    DbTargetDocument.store = 'targetDocuments';\r\n    /** Keys are automatically assigned via the targetId, path properties. */\r\n    DbTargetDocument.keyPath = ['targetId', 'path'];\r\n    /** The index name for the reverse index. */\r\n    DbTargetDocument.documentTargetsIndex = 'documentTargetsIndex';\r\n    /** We also need to create the reverse index for these properties. */\r\n    DbTargetDocument.documentTargetsKeyPath = ['path', 'targetId'];\r\n    return DbTargetDocument;\r\n}());\r\n/**\r\n * A record of global state tracked across all Targets, tracked separately\r\n * to avoid the need for extra indexes.\r\n *\r\n * This should be kept in-sync with the proto used in the iOS client.\r\n */\r\nvar DbTargetGlobal = /** @class */ (function () {\r\n    function DbTargetGlobal(\r\n    /**\r\n     * The highest numbered target id across all targets.\r\n     *\r\n     * See DbTarget.targetId.\r\n     */\r\n    highestTargetId, \r\n    /**\r\n     * The highest numbered lastListenSequenceNumber across all targets.\r\n     *\r\n     * See DbTarget.lastListenSequenceNumber.\r\n     */\r\n    highestListenSequenceNumber, \r\n    /**\r\n     * A global snapshot version representing the last consistent snapshot we\r\n     * received from the backend. This is monotonically increasing and any\r\n     * snapshots received from the backend prior to this version (e.g. for\r\n     * targets resumed with a resumeToken) should be suppressed (buffered)\r\n     * until the backend has caught up to this snapshot version again. This\r\n     * prevents our cache from ever going backwards in time.\r\n     */\r\n    lastRemoteSnapshotVersion, \r\n    /**\r\n     * The number of targets persisted.\r\n     */\r\n    targetCount) {\r\n        this.highestTargetId = highestTargetId;\r\n        this.highestListenSequenceNumber = highestListenSequenceNumber;\r\n        this.lastRemoteSnapshotVersion = lastRemoteSnapshotVersion;\r\n        this.targetCount = targetCount;\r\n    }\r\n    /**\r\n     * The key string used for the single object that exists in the\r\n     * DbTargetGlobal store.\r\n     */\r\n    DbTargetGlobal.key = 'targetGlobalKey';\r\n    DbTargetGlobal.store = 'targetGlobal';\r\n    return DbTargetGlobal;\r\n}());\r\nfunction createQueryCache(db) {\r\n    var targetDocumentsStore = db.createObjectStore(DbTargetDocument.store, {\r\n        keyPath: DbTargetDocument.keyPath\r\n    });\r\n    targetDocumentsStore.createIndex(DbTargetDocument.documentTargetsIndex, DbTargetDocument.documentTargetsKeyPath, { unique: true });\r\n    var targetStore = db.createObjectStore(DbTarget.store, {\r\n        keyPath: DbTarget.keyPath\r\n    });\r\n    // NOTE: This is unique only because the TargetId is the suffix.\r\n    targetStore.createIndex(DbTarget.queryTargetsIndexName, DbTarget.queryTargetsKeyPath, { unique: true });\r\n    db.createObjectStore(DbTargetGlobal.store);\r\n}\r\n/**\r\n * Counts the number of targets persisted and adds that value to the target\r\n * global singleton.\r\n */\r\nfunction saveTargetCount(txn, metadata) {\r\n    var globalStore = txn.store(DbTargetGlobal.store);\r\n    var targetStore = txn.store(DbTarget.store);\r\n    return targetStore.count().next(function (count) {\r\n        metadata.targetCount = count;\r\n        return globalStore.put(DbTargetGlobal.key, metadata);\r\n    });\r\n}\r\n/**\r\n * Ensures that the target global singleton row exists by adding it if it's\r\n * missing.\r\n *\r\n * @param {IDBTransaction} txn The version upgrade transaction for indexeddb\r\n */\r\nfunction ensureTargetGlobalExists(txn) {\r\n    var globalStore = txn.store(DbTargetGlobal.store);\r\n    return globalStore.get(DbTargetGlobal.key).next(function (metadata) {\r\n        if (metadata != null) {\r\n            return PersistencePromise.resolve(metadata);\r\n        }\r\n        else {\r\n            metadata = new DbTargetGlobal(\r\n            /*highestTargetId=*/ 0, \r\n            /*lastListenSequenceNumber=*/ 0, SnapshotVersion.MIN.toTimestamp(), \r\n            /*targetCount=*/ 0);\r\n            return globalStore.put(DbTargetGlobal.key, metadata).next(function () { return metadata; });\r\n        }\r\n    });\r\n}\r\n/**\r\n * The list of all default IndexedDB stores used throughout the SDK. This is\r\n * used when creating transactions so that access across all stores is done\r\n * atomically.\r\n */\r\nvar ALL_STORES = [\r\n    DbMutationQueue.store,\r\n    DbMutationBatch.store,\r\n    DbDocumentMutation.store,\r\n    DbRemoteDocument.store,\r\n    DbTarget.store,\r\n    DbOwner.store,\r\n    DbTargetGlobal.store,\r\n    DbTargetDocument.store\r\n];\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred$1 = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG$2 = 'SimpleDb';\r\n/**\r\n * Provides a wrapper around IndexedDb with a simplified interface that uses\r\n * Promise-like return values to chain operations. Real promises cannot be used\r\n * since .then() continuations are executed asynchronously (e.g. via\r\n * .setImmediate), which would cause IndexedDB to end the transaction.\r\n * See PersistencePromise for more details.\r\n */\r\nvar SimpleDb = /** @class */ (function () {\r\n    function SimpleDb(db) {\r\n        this.db = db;\r\n    }\r\n    /** Opens the specified database, creating or upgrading it if necessary. */\r\n    SimpleDb.openOrCreate = function (name, version, runUpgrade) {\r\n        assert(SimpleDb.isAvailable(), 'IndexedDB not supported in current environment.');\r\n        debug(LOG_TAG$2, 'Opening database:', name);\r\n        return new PersistencePromise(function (resolve, reject) {\r\n            // TODO(mikelehen): Investigate browser compatibility.\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\r\n            // suggests IE9 and older WebKit browsers handle upgrade\r\n            // differently. They expect setVersion, as described here:\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\r\n            var request = window.indexedDB.open(name, version);\r\n            request.onsuccess = function (event) {\r\n                var db = event.target.result;\r\n                resolve(new SimpleDb(db));\r\n            };\r\n            request.onerror = function (event) {\r\n                reject(event.target.error);\r\n            };\r\n            request.onupgradeneeded = function (event) {\r\n                debug(LOG_TAG$2, 'Database \"' + name + '\" requires upgrade from version:', event.oldVersion);\r\n                var db = event.target.result;\r\n                // We are provided a version upgrade transaction from the request, so\r\n                // we wrap that in a SimpleDbTransaction to allow use of our friendlier\r\n                // API for schema migration operations.\r\n                var txn = new SimpleDbTransaction(request.transaction);\r\n                runUpgrade(db, txn, event.oldVersion, SCHEMA_VERSION).next(function () {\r\n                    debug(LOG_TAG$2, 'Database upgrade to version ' + SCHEMA_VERSION + ' complete');\r\n                });\r\n            };\r\n        }).toPromise();\r\n    };\r\n    /** Deletes the specified database. */\r\n    SimpleDb.delete = function (name) {\r\n        debug(LOG_TAG$2, 'Removing database:', name);\r\n        return wrapRequest(window.indexedDB.deleteDatabase(name)).toPromise();\r\n    };\r\n    /** Returns true if IndexedDB is available in the current environment. */\r\n    SimpleDb.isAvailable = function () {\r\n        if (typeof window === 'undefined' || window.indexedDB == null) {\r\n            return false;\r\n        }\r\n        // We extensively use indexed array values and compound keys,\r\n        // which IE and Edge do not support. However, they still have indexedDB\r\n        // defined on the window, so we need to check for them here and make sure\r\n        // to return that persistence is not enabled for those browsers.\r\n        // For tracking support of this feature, see here:\r\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\r\n        // If we are running in Node using the IndexedDBShim, `window` is defined,\r\n        // but `window.navigator` is not. In this case, we support IndexedDB and\r\n        // return `true`.\r\n        if (window.navigator === undefined) {\r\n            return process.env.USE_MOCK_PERSISTENCE === 'YES';\r\n        }\r\n        // Check the UA string to find out the browser.\r\n        // TODO(mikelehen): Move this logic into packages/util/environment.ts\r\n        var ua = window.navigator.userAgent;\r\n        // IE 10\r\n        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\r\n        // IE 11\r\n        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\r\n        // Edge\r\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\r\n        // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\r\n        if (ua.indexOf('MSIE ') > 0 ||\r\n            ua.indexOf('Trident/') > 0 ||\r\n            ua.indexOf('Edge/') > 0) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    SimpleDb.prototype.runTransaction = function (mode, objectStores, transactionFn) {\r\n        var transaction = SimpleDbTransaction.open(this.db, mode, objectStores);\r\n        var transactionFnResult = transactionFn(transaction)\r\n            .catch(function (error$$1) {\r\n            // Abort the transaction if there was an error.\r\n            transaction.abort(error$$1);\r\n        })\r\n            .toPromise();\r\n        // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\r\n        // fire), but still return the original transactionFnResult back to the\r\n        // caller.\r\n        return transaction.completionPromise.then(function () { return transactionFnResult; });\r\n    };\r\n    SimpleDb.prototype.close = function () {\r\n        this.db.close();\r\n    };\r\n    return SimpleDb;\r\n}());\r\n/**\r\n * A controller for iterating over a key range or index. It allows an iterate\r\n * callback to delete the currently-referenced object, or jump to a new key\r\n * within the key range or index.\r\n */\r\nvar IterationController = /** @class */ (function () {\r\n    function IterationController(dbCursor) {\r\n        this.dbCursor = dbCursor;\r\n        this.shouldStop = false;\r\n        this.nextKey = null;\r\n    }\r\n    Object.defineProperty(IterationController.prototype, \"isDone\", {\r\n        get: function () {\r\n            return this.shouldStop;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IterationController.prototype, \"skipToKey\", {\r\n        get: function () {\r\n            return this.nextKey;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(IterationController.prototype, \"cursor\", {\r\n        set: function (value) {\r\n            this.dbCursor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * This function can be called to stop iteration at any point.\r\n     */\r\n    IterationController.prototype.done = function () {\r\n        this.shouldStop = true;\r\n    };\r\n    /**\r\n     * This function can be called to skip to that next key, which could be\r\n     * an index or a primary key.\r\n     */\r\n    IterationController.prototype.skip = function (key) {\r\n        this.nextKey = key;\r\n    };\r\n    /**\r\n     * Delete the current cursor value from the object store.\r\n     *\r\n     * NOTE: You CANNOT do this with a keysOnly query.\r\n     */\r\n    IterationController.prototype.delete = function () {\r\n        return wrapRequest(this.dbCursor.delete());\r\n    };\r\n    return IterationController;\r\n}());\r\n/**\r\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\r\n * specific object store.\r\n */\r\nvar SimpleDbTransaction = /** @class */ (function () {\r\n    function SimpleDbTransaction(transaction) {\r\n        var _this = this;\r\n        this.transaction = transaction;\r\n        this.aborted = false;\r\n        /**\r\n         * A promise that resolves with the result of the IndexedDb transaction.\r\n         */\r\n        this.completionDeferred = new Deferred$1();\r\n        this.transaction.oncomplete = function () {\r\n            _this.completionDeferred.resolve();\r\n        };\r\n        this.transaction.onabort = function () {\r\n            if (transaction.error) {\r\n                _this.completionDeferred.reject(transaction.error);\r\n            }\r\n            else {\r\n                _this.completionDeferred.resolve();\r\n            }\r\n        };\r\n        this.transaction.onerror = function (event) {\r\n            _this.completionDeferred.reject(event.target.error);\r\n        };\r\n    }\r\n    SimpleDbTransaction.open = function (db, mode, objectStoreNames) {\r\n        return new SimpleDbTransaction(db.transaction(objectStoreNames, mode));\r\n    };\r\n    Object.defineProperty(SimpleDbTransaction.prototype, \"completionPromise\", {\r\n        get: function () {\r\n            return this.completionDeferred.promise;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SimpleDbTransaction.prototype.abort = function (error$$1) {\r\n        if (error$$1) {\r\n            this.completionDeferred.reject(error$$1);\r\n        }\r\n        if (!this.aborted) {\r\n            debug(LOG_TAG$2, 'Aborting transaction: %s', error$$1 ? error$$1.message : 'Client-initiated abort');\r\n            this.aborted = true;\r\n            this.transaction.abort();\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\r\n     * operations performed on the SimpleDbStore happen within the context of this\r\n     * transaction and it cannot be used anymore once the transaction is\r\n     * completed.\r\n     *\r\n     * Note that we can't actually enforce that the KeyType and ValueType are\r\n     * correct, but they allow type safety through the rest of the consuming code.\r\n     */\r\n    SimpleDbTransaction.prototype.store = function (storeName) {\r\n        var store = this.transaction.objectStore(storeName);\r\n        assert(!!store, 'Object store not part of transaction: ' + storeName);\r\n        return new SimpleDbStore(store);\r\n    };\r\n    return SimpleDbTransaction;\r\n}());\r\n/**\r\n * A wrapper around an IDBObjectStore providing an API that:\r\n *\r\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\r\n * methods for acting against the object store.\r\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\r\n * method return a PersistencePromise instead.\r\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\r\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\r\n */\r\nvar SimpleDbStore = /** @class */ (function () {\r\n    function SimpleDbStore(store) {\r\n        this.store = store;\r\n    }\r\n    SimpleDbStore.prototype.put = function (keyOrValue, value) {\r\n        var request;\r\n        if (value !== undefined) {\r\n            debug(LOG_TAG$2, 'PUT', this.store.name, keyOrValue, value);\r\n            request = this.store.put(value, keyOrValue);\r\n        }\r\n        else {\r\n            debug(LOG_TAG$2, 'PUT', this.store.name, '<auto-key>', keyOrValue);\r\n            request = this.store.put(keyOrValue);\r\n        }\r\n        return wrapRequest(request);\r\n    };\r\n    /**\r\n     * Gets the object with the specified key from the specified store, or null\r\n     * if no object exists with the specified key.\r\n     *\r\n     * @key The key of the object to get.\r\n     * @return The object with the specified key or null if no object exists.\r\n     */\r\n    SimpleDbStore.prototype.get = function (key) {\r\n        var _this = this;\r\n        var request = this.store.get(key);\r\n        // tslint:disable-next-line:no-any We're doing an unsafe cast to ValueType.\r\n        return wrapRequest(request).next(function (result) {\r\n            // Normalize nonexistence to null.\r\n            if (result === undefined) {\r\n                result = null;\r\n            }\r\n            debug(LOG_TAG$2, 'GET', _this.store.name, key, result);\r\n            return result;\r\n        });\r\n    };\r\n    SimpleDbStore.prototype.delete = function (key) {\r\n        debug(LOG_TAG$2, 'DELETE', this.store.name, key);\r\n        var request = this.store.delete(key);\r\n        return wrapRequest(request);\r\n    };\r\n    /**\r\n     * If we ever need more of the count variants, we can add overloads. For now,\r\n     * all we need is to count everything in a store.\r\n     *\r\n     * Returns the number of rows in the store.\r\n     */\r\n    SimpleDbStore.prototype.count = function () {\r\n        debug(LOG_TAG$2, 'COUNT', this.store.name);\r\n        var request = this.store.count();\r\n        return wrapRequest(request);\r\n    };\r\n    SimpleDbStore.prototype.loadAll = function (indexOrRange, range) {\r\n        var cursor = this.cursor(this.options(indexOrRange, range));\r\n        var results = [];\r\n        return this.iterateCursor(cursor, function (key, value) {\r\n            results.push(value);\r\n        }).next(function () {\r\n            return results;\r\n        });\r\n    };\r\n    SimpleDbStore.prototype.deleteAll = function (indexOrRange, range) {\r\n        debug(LOG_TAG$2, 'DELETE ALL', this.store.name);\r\n        var options = this.options(indexOrRange, range);\r\n        options.keysOnly = false;\r\n        var cursor = this.cursor(options);\r\n        return this.iterateCursor(cursor, function (key, value, control) {\r\n            // NOTE: Calling delete() on a cursor is documented as more efficient than\r\n            // calling delete() on an object store with a single key\r\n            // (https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete),\r\n            // however, this requires us *not* to use a keysOnly cursor\r\n            // (https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete). We\r\n            // may want to compare the performance of each method.\r\n            return control.delete();\r\n        });\r\n    };\r\n    SimpleDbStore.prototype.iterate = function (optionsOrCallback, callback) {\r\n        var options;\r\n        if (!callback) {\r\n            options = {};\r\n            callback = optionsOrCallback;\r\n        }\r\n        else {\r\n            options = optionsOrCallback;\r\n        }\r\n        var cursor = this.cursor(options);\r\n        return this.iterateCursor(cursor, callback);\r\n    };\r\n    SimpleDbStore.prototype.iterateCursor = function (cursorRequest, fn) {\r\n        var results = [];\r\n        return new PersistencePromise(function (resolve, reject) {\r\n            cursorRequest.onerror = function (event) {\r\n                reject(event.target.error);\r\n            };\r\n            cursorRequest.onsuccess = function (event) {\r\n                var cursor = event.target.result;\r\n                if (!cursor) {\r\n                    resolve();\r\n                    return;\r\n                }\r\n                var controller = new IterationController(cursor);\r\n                var userResult = fn(cursor.primaryKey, cursor.value, controller);\r\n                if (userResult instanceof PersistencePromise) {\r\n                    results.push(userResult);\r\n                }\r\n                if (controller.isDone) {\r\n                    resolve();\r\n                }\r\n                else if (controller.skipToKey === null) {\r\n                    cursor.continue();\r\n                }\r\n                else {\r\n                    cursor.continue(controller.skipToKey);\r\n                }\r\n            };\r\n        }).next(function () {\r\n            return PersistencePromise.waitFor(results);\r\n        });\r\n    };\r\n    SimpleDbStore.prototype.options = function (indexOrRange, range) {\r\n        var indexName = undefined;\r\n        if (indexOrRange !== undefined) {\r\n            if (typeof indexOrRange === 'string') {\r\n                indexName = indexOrRange;\r\n            }\r\n            else {\r\n                assert(range === undefined, '3rd argument must not be defined if 2nd is a range.');\r\n                range = indexOrRange;\r\n            }\r\n        }\r\n        return { index: indexName, range: range };\r\n    };\r\n    SimpleDbStore.prototype.cursor = function (options) {\r\n        var direction = 'next';\r\n        if (options.reverse) {\r\n            direction = 'prev';\r\n        }\r\n        if (options.index) {\r\n            var index = this.store.index(options.index);\r\n            if (options.keysOnly) {\r\n                return index.openKeyCursor(options.range, direction);\r\n            }\r\n            else {\r\n                return index.openCursor(options.range, direction);\r\n            }\r\n        }\r\n        else {\r\n            return this.store.openCursor(options.range, direction);\r\n        }\r\n    };\r\n    return SimpleDbStore;\r\n}());\r\n/**\r\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\r\n * handlers to resolve / reject the PersistencePromise as appropriate.\r\n */\r\nfunction wrapRequest(request) {\r\n    return new PersistencePromise(function (resolve, reject) {\r\n        request.onsuccess = function (event) {\r\n            var result = event.target.result;\r\n            resolve(result);\r\n        };\r\n        request.onerror = function (event) {\r\n            reject(event.target.error);\r\n        };\r\n    });\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** A mutation queue for a specific user, backed by IndexedDB. */\r\nvar IndexedDbMutationQueue = /** @class */ (function () {\r\n    function IndexedDbMutationQueue(\r\n    /**\r\n     * The normalized userId (e.g. null UID => \"\" userId) used to store /\r\n     * retrieve mutations.\r\n     */\r\n    userId, serializer) {\r\n        this.userId = userId;\r\n        this.serializer = serializer;\r\n        this.garbageCollector = null;\r\n    }\r\n    /**\r\n     * Creates a new mutation queue for the given user.\r\n     * @param user The user for which to create a mutation queue.\r\n     * @param serializer The serializer to use when persisting to IndexedDb.\r\n     */\r\n    IndexedDbMutationQueue.forUser = function (user, serializer) {\r\n        // TODO(mcg): Figure out what constraints there are on userIDs\r\n        // In particular, are there any reserved characters? are empty ids allowed?\r\n        // For the moment store these together in the same mutations table assuming\r\n        // that empty userIDs aren't allowed.\r\n        assert(user.uid !== '', 'UserID must not be an empty string.');\r\n        var userId = user.isAuthenticated() ? user.uid : '';\r\n        return new IndexedDbMutationQueue(userId, serializer);\r\n    };\r\n    IndexedDbMutationQueue.prototype.start = function (transaction) {\r\n        var _this = this;\r\n        return IndexedDbMutationQueue.loadNextBatchIdFromDb(transaction)\r\n            .next(function (nextBatchId) {\r\n            _this.nextBatchId = nextBatchId;\r\n            return mutationQueuesStore(transaction).get(_this.userId);\r\n        })\r\n            .next(function (metadata) {\r\n            if (!metadata) {\r\n                metadata = new DbMutationQueue(_this.userId, BATCHID_UNKNOWN, \r\n                /*lastStreamToken=*/ '');\r\n            }\r\n            _this.metadata = metadata;\r\n            // On restart, nextBatchId may end up lower than\r\n            // lastAcknowledgedBatchId since it's computed from the queue\r\n            // contents, and there may be no mutations in the queue. In this\r\n            // case, we need to reset lastAcknowledgedBatchId (which is safe\r\n            // since the queue must be empty).\r\n            if (_this.metadata.lastAcknowledgedBatchId >= _this.nextBatchId) {\r\n                return _this.checkEmpty(transaction).next(function (empty) {\r\n                    assert(empty, 'Reset nextBatchID is only possible when the queue is empty');\r\n                    _this.metadata.lastAcknowledgedBatchId = BATCHID_UNKNOWN;\r\n                    return mutationQueuesStore(transaction).put(_this.metadata);\r\n                });\r\n            }\r\n            else {\r\n                return PersistencePromise.resolve();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns one larger than the largest batch ID that has been stored. If there\r\n     * are no mutations returns 0. Note that batch IDs are global.\r\n     */\r\n    IndexedDbMutationQueue.loadNextBatchIdFromDb = function (txn) {\r\n        var maxBatchId = BATCHID_UNKNOWN;\r\n        return mutationsStore(txn)\r\n            .iterate({ reverse: true }, function (key, batch, control) {\r\n            var userId = key[0], batchId = key[1];\r\n            if (batchId > maxBatchId) {\r\n                maxBatchId = batch.batchId;\r\n            }\r\n            if (userId === '') {\r\n                // We can't compute a predecessor for the empty string, since it\r\n                // is lexographically first. That also means that no other\r\n                // userIds can come before this one, so we can just exit early.\r\n                control.done();\r\n            }\r\n            else {\r\n                var nextUser = immediatePredecessor(userId);\r\n                control.skip([nextUser]);\r\n            }\r\n        })\r\n            .next(function () { return maxBatchId + 1; });\r\n    };\r\n    IndexedDbMutationQueue.prototype.checkEmpty = function (transaction) {\r\n        var empty = true;\r\n        var range = IDBKeyRange.bound(this.keyForBatchId(Number.NEGATIVE_INFINITY), this.keyForBatchId(Number.POSITIVE_INFINITY));\r\n        return mutationsStore(transaction)\r\n            .iterate({ range: range }, function (key, value, control) {\r\n            empty = false;\r\n            control.done();\r\n        })\r\n            .next(function () { return empty; });\r\n    };\r\n    IndexedDbMutationQueue.prototype.getNextBatchId = function (transaction) {\r\n        return PersistencePromise.resolve(this.nextBatchId);\r\n    };\r\n    IndexedDbMutationQueue.prototype.getHighestAcknowledgedBatchId = function (transaction) {\r\n        return PersistencePromise.resolve(this.metadata.lastAcknowledgedBatchId);\r\n    };\r\n    IndexedDbMutationQueue.prototype.acknowledgeBatch = function (transaction, batch, streamToken) {\r\n        var batchId = batch.batchId;\r\n        assert(batchId > this.metadata.lastAcknowledgedBatchId, 'Mutation batchIDs must be acknowledged in order');\r\n        this.metadata.lastAcknowledgedBatchId = batchId;\r\n        this.metadata.lastStreamToken = convertStreamToken(streamToken);\r\n        return mutationQueuesStore(transaction).put(this.metadata);\r\n    };\r\n    IndexedDbMutationQueue.prototype.getLastStreamToken = function (transaction) {\r\n        return PersistencePromise.resolve(this.metadata.lastStreamToken);\r\n    };\r\n    IndexedDbMutationQueue.prototype.setLastStreamToken = function (transaction, streamToken) {\r\n        this.metadata.lastStreamToken = convertStreamToken(streamToken);\r\n        return mutationQueuesStore(transaction).put(this.metadata);\r\n    };\r\n    IndexedDbMutationQueue.prototype.addMutationBatch = function (transaction, localWriteTime, mutations) {\r\n        var _this = this;\r\n        var batchId = this.nextBatchId;\r\n        this.nextBatchId++;\r\n        var batch = new MutationBatch(batchId, localWriteTime, mutations);\r\n        var dbBatch = this.serializer.toDbMutationBatch(this.userId, batch);\r\n        return mutationsStore(transaction)\r\n            .put(dbBatch)\r\n            .next(function () {\r\n            var promises = [];\r\n            for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\r\n                var mutation = mutations_1[_i];\r\n                var indexKey = DbDocumentMutation.key(_this.userId, mutation.key.path, batchId);\r\n                promises.push(documentMutationsStore(transaction).put(indexKey, DbDocumentMutation.PLACEHOLDER));\r\n            }\r\n            return PersistencePromise.waitFor(promises);\r\n        })\r\n            .next(function () {\r\n            return batch;\r\n        });\r\n    };\r\n    IndexedDbMutationQueue.prototype.lookupMutationBatch = function (transaction, batchId) {\r\n        var _this = this;\r\n        return mutationsStore(transaction)\r\n            .get(this.keyForBatchId(batchId))\r\n            .next(function (dbBatch) {\r\n            return dbBatch ? _this.serializer.fromDbMutationBatch(dbBatch) : null;\r\n        });\r\n    };\r\n    IndexedDbMutationQueue.prototype.getNextMutationBatchAfterBatchId = function (transaction, batchId) {\r\n        var _this = this;\r\n        // All batches with batchId <= this.metadata.lastAcknowledgedBatchId have\r\n        // been acknowledged so the first unacknowledged batch after batchID will\r\n        // have a batchID larger than both of these values.\r\n        var nextBatchId = Math.max(batchId, this.metadata.lastAcknowledgedBatchId) + 1;\r\n        var range = IDBKeyRange.lowerBound(this.keyForBatchId(nextBatchId));\r\n        var foundBatch = null;\r\n        return mutationsStore(transaction)\r\n            .iterate({ range: range }, function (key, dbBatch, control) {\r\n            if (dbBatch.userId === _this.userId) {\r\n                assert(dbBatch.batchId >= nextBatchId, 'Should have found mutation after ' + nextBatchId);\r\n                foundBatch = _this.serializer.fromDbMutationBatch(dbBatch);\r\n            }\r\n            control.done();\r\n        })\r\n            .next(function () { return foundBatch; });\r\n    };\r\n    IndexedDbMutationQueue.prototype.getAllMutationBatches = function (transaction) {\r\n        var _this = this;\r\n        var range = IDBKeyRange.bound(this.keyForBatchId(BATCHID_UNKNOWN), this.keyForBatchId(Number.POSITIVE_INFINITY));\r\n        return mutationsStore(transaction)\r\n            .loadAll(range)\r\n            .next(function (dbBatches) {\r\n            return dbBatches.map(function (dbBatch) { return _this.serializer.fromDbMutationBatch(dbBatch); });\r\n        });\r\n    };\r\n    IndexedDbMutationQueue.prototype.getAllMutationBatchesThroughBatchId = function (transaction, batchId) {\r\n        var _this = this;\r\n        var range = IDBKeyRange.bound(this.keyForBatchId(BATCHID_UNKNOWN), this.keyForBatchId(batchId));\r\n        return mutationsStore(transaction)\r\n            .loadAll(range)\r\n            .next(function (dbBatches) {\r\n            return dbBatches.map(function (dbBatch) { return _this.serializer.fromDbMutationBatch(dbBatch); });\r\n        });\r\n    };\r\n    IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKey = function (transaction, documentKey) {\r\n        var _this = this;\r\n        // Scan the document-mutation index starting with a prefix starting with\r\n        // the given documentKey.\r\n        var indexPrefix = DbDocumentMutation.prefixForPath(this.userId, documentKey.path);\r\n        var indexStart = IDBKeyRange.lowerBound(indexPrefix);\r\n        var results = [];\r\n        return documentMutationsStore(transaction)\r\n            .iterate({ range: indexStart }, function (indexKey, _, control) {\r\n            var userID = indexKey[0], encodedPath = indexKey[1], batchID = indexKey[2];\r\n            // Only consider rows matching exactly the specific key of\r\n            // interest. Note that because we order by path first, and we\r\n            // order terminators before path separators, we'll encounter all\r\n            // the index rows for documentKey contiguously. In particular, all\r\n            // the rows for documentKey will occur before any rows for\r\n            // documents nested in a subcollection beneath documentKey so we\r\n            // can stop as soon as we hit any such row.\r\n            var path = decode$1(encodedPath);\r\n            if (userID !== _this.userId || !documentKey.path.isEqual(path)) {\r\n                control.done();\r\n                return;\r\n            }\r\n            var mutationKey = _this.keyForBatchId(batchID);\r\n            // Look up the mutation batch in the store.\r\n            // PORTING NOTE: because iteration is callback driven in the web,\r\n            // we just look up the key instead of keeping an open iterator\r\n            // like iOS.\r\n            return mutationsStore(transaction)\r\n                .get(mutationKey)\r\n                .next(function (dbBatch) {\r\n                if (dbBatch === null) {\r\n                    fail('Dangling document-mutation reference found: ' +\r\n                        indexKey +\r\n                        ' which points to ' +\r\n                        mutationKey);\r\n                }\r\n                results.push(_this.serializer.fromDbMutationBatch(dbBatch));\r\n            });\r\n        })\r\n            .next(function () { return results; });\r\n    };\r\n    IndexedDbMutationQueue.prototype.getAllMutationBatchesAffectingQuery = function (transaction, query) {\r\n        var _this = this;\r\n        assert(!query.isDocumentQuery(), \"Document queries shouldn't go down this path\");\r\n        var queryPath = query.path;\r\n        var immediateChildrenLength = queryPath.length + 1;\r\n        // TODO(mcg): Actually implement a single-collection query\r\n        //\r\n        // This is actually executing an ancestor query, traversing the whole\r\n        // subtree below the collection which can be horrifically inefficient for\r\n        // some structures. The right way to solve this is to implement the full\r\n        // value index, but that's not in the cards in the near future so this is\r\n        // the best we can do for the moment.\r\n        //\r\n        // Since we don't yet index the actual properties in the mutations, our\r\n        // current approach is to just return all mutation batches that affect\r\n        // documents in the collection being queried.\r\n        var indexPrefix = DbDocumentMutation.prefixForPath(this.userId, queryPath);\r\n        var indexStart = IDBKeyRange.lowerBound(indexPrefix);\r\n        // Collect up unique batchIDs encountered during a scan of the index. Use a\r\n        // SortedSet to accumulate batch IDs so they can be traversed in order in a\r\n        // scan of the main table.\r\n        var uniqueBatchIDs = new SortedSet(primitiveComparator);\r\n        return documentMutationsStore(transaction)\r\n            .iterate({ range: indexStart }, function (indexKey, _, control) {\r\n            var userID = indexKey[0], encodedPath = indexKey[1], batchID = indexKey[2];\r\n            var path = decode$1(encodedPath);\r\n            if (userID !== _this.userId || !queryPath.isPrefixOf(path)) {\r\n                control.done();\r\n                return;\r\n            }\r\n            // Rows with document keys more than one segment longer than the\r\n            // query path can't be matches. For example, a query on 'rooms'\r\n            // can't match the document /rooms/abc/messages/xyx.\r\n            // TODO(mcg): we'll need a different scanner when we implement\r\n            // ancestor queries.\r\n            if (path.length !== immediateChildrenLength) {\r\n                return;\r\n            }\r\n            uniqueBatchIDs = uniqueBatchIDs.add(batchID);\r\n        })\r\n            .next(function () {\r\n            var results = [];\r\n            var promises = [];\r\n            // TODO(rockwood): Implement this using iterate.\r\n            uniqueBatchIDs.forEach(function (batchID) {\r\n                var mutationKey = _this.keyForBatchId(batchID);\r\n                promises.push(mutationsStore(transaction)\r\n                    .get(mutationKey)\r\n                    .next(function (mutation) {\r\n                    if (mutation === null) {\r\n                        fail('Dangling document-mutation reference found, ' +\r\n                            'which points to ' +\r\n                            mutationKey);\r\n                    }\r\n                    results.push(_this.serializer.fromDbMutationBatch(mutation));\r\n                }));\r\n            });\r\n            return PersistencePromise.waitFor(promises).next(function () { return results; });\r\n        });\r\n    };\r\n    IndexedDbMutationQueue.prototype.removeMutationBatches = function (transaction, batches) {\r\n        var txn = mutationsStore(transaction);\r\n        var indexTxn = documentMutationsStore(transaction);\r\n        var promises = [];\r\n        var _loop_1 = function (batch) {\r\n            var range = IDBKeyRange.only(this_1.keyForBatchId(batch.batchId));\r\n            var numDeleted = 0;\r\n            var removePromise = txn.iterate({ range: range }, function (key, value, control) {\r\n                numDeleted++;\r\n                return control.delete();\r\n            });\r\n            promises.push(removePromise.next(function () {\r\n                assert(numDeleted === 1, 'Dangling document-mutation reference found: Missing batch ' +\r\n                    batch.batchId);\r\n            }));\r\n            for (var _i = 0, _a = batch.mutations; _i < _a.length; _i++) {\r\n                var mutation = _a[_i];\r\n                var indexKey = DbDocumentMutation.key(this_1.userId, mutation.key.path, batch.batchId);\r\n                promises.push(indexTxn.delete(indexKey));\r\n                if (this_1.garbageCollector !== null) {\r\n                    this_1.garbageCollector.addPotentialGarbageKey(mutation.key);\r\n                }\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var _i = 0, batches_1 = batches; _i < batches_1.length; _i++) {\r\n            var batch = batches_1[_i];\r\n            _loop_1(batch);\r\n        }\r\n        return PersistencePromise.waitFor(promises);\r\n    };\r\n    IndexedDbMutationQueue.prototype.performConsistencyCheck = function (txn) {\r\n        var _this = this;\r\n        return this.checkEmpty(txn).next(function (empty) {\r\n            if (!empty) {\r\n                return PersistencePromise.resolve();\r\n            }\r\n            // Verify that there are no entries in the documentMutations index if\r\n            // the queue is empty.\r\n            var startRange = IDBKeyRange.lowerBound(DbDocumentMutation.prefixForUser(_this.userId));\r\n            var danglingMutationReferences = [];\r\n            return documentMutationsStore(txn)\r\n                .iterate({ range: startRange }, function (key, _, control) {\r\n                var userID = key[0];\r\n                if (userID !== _this.userId) {\r\n                    control.done();\r\n                    return;\r\n                }\r\n                else {\r\n                    var path = decode$1(key[1]);\r\n                    danglingMutationReferences.push(path);\r\n                }\r\n            })\r\n                .next(function () {\r\n                assert(danglingMutationReferences.length === 0, 'Document leak -- detected dangling mutation references when queue is empty. Dangling keys: ' +\r\n                    danglingMutationReferences.map(function (p) { return p.canonicalString(); }));\r\n            });\r\n        });\r\n    };\r\n    IndexedDbMutationQueue.prototype.setGarbageCollector = function (gc) {\r\n        this.garbageCollector = gc;\r\n    };\r\n    IndexedDbMutationQueue.prototype.containsKey = function (txn, key) {\r\n        var _this = this;\r\n        var indexKey = DbDocumentMutation.prefixForPath(this.userId, key.path);\r\n        var encodedPath = indexKey[1];\r\n        var startRange = IDBKeyRange.lowerBound(indexKey);\r\n        var containsKey = false;\r\n        return documentMutationsStore(txn)\r\n            .iterate({ range: startRange, keysOnly: true }, function (key, value, control) {\r\n            var userID = key[0], keyPath = key[1], /*batchID*/ _ = key[2];\r\n            if (userID === _this.userId && keyPath === encodedPath) {\r\n                containsKey = true;\r\n            }\r\n            control.done();\r\n        })\r\n            .next(function () { return containsKey; });\r\n    };\r\n    /**\r\n     * Creates a [userId, batchId] key for use with the DbMutationQueue object\r\n     * store.\r\n     */\r\n    IndexedDbMutationQueue.prototype.keyForBatchId = function (batchId) {\r\n        return [this.userId, batchId];\r\n    };\r\n    return IndexedDbMutationQueue;\r\n}());\r\nfunction convertStreamToken(token) {\r\n    if (token instanceof Uint8Array) {\r\n        // TODO(b/78771403): Convert tokens to strings during deserialization\r\n        assert(process.env.USE_MOCK_PERSISTENCE === 'YES', 'Persisting non-string stream tokens is only supported with mock persistence .');\r\n        return token.toString();\r\n    }\r\n    else {\r\n        return token;\r\n    }\r\n}\r\n/**\r\n * Helper to get a typed SimpleDbStore for the mutations object store.\r\n */\r\nfunction mutationsStore(txn) {\r\n    return getStore(txn, DbMutationBatch.store);\r\n}\r\n/**\r\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\r\n */\r\nfunction documentMutationsStore(txn) {\r\n    return getStore(txn, DbDocumentMutation.store);\r\n}\r\n/**\r\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\r\n */\r\nfunction mutationQueuesStore(txn) {\r\n    return getStore(txn, DbMutationQueue.store);\r\n}\r\n/**\r\n * Helper to get a typed SimpleDbStore from a transaction.\r\n */\r\nfunction getStore(txn, store) {\r\n    if (txn instanceof SimpleDbTransaction) {\r\n        return txn.store(store);\r\n    }\r\n    else {\r\n        return fail('Invalid transaction object provided!');\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar IndexedDbQueryCache = /** @class */ (function () {\r\n    function IndexedDbQueryCache(serializer) {\r\n        this.serializer = serializer;\r\n        /**\r\n         * The last received snapshot version. We store this seperately from the\r\n         * metadata to avoid the extra conversion to/from DbTimestamp.\r\n         */\r\n        this.lastRemoteSnapshotVersion = SnapshotVersion.MIN;\r\n        /**\r\n         * A cached copy of the metadata for the query cache.\r\n         */\r\n        this.metadata = null;\r\n        /** The garbage collector to notify about potential garbage keys. */\r\n        this.garbageCollector = null;\r\n    }\r\n    IndexedDbQueryCache.prototype.start = function (transaction) {\r\n        var _this = this;\r\n        return globalTargetStore(transaction)\r\n            .get(DbTargetGlobal.key)\r\n            .next(function (metadata) {\r\n            assert(metadata !== null, 'Missing metadata row that should be added by schema migration.');\r\n            _this.metadata = metadata;\r\n            var lastSavedVersion = metadata.lastRemoteSnapshotVersion;\r\n            _this.lastRemoteSnapshotVersion = SnapshotVersion.fromTimestamp(new Timestamp(lastSavedVersion.seconds, lastSavedVersion.nanoseconds));\r\n            return PersistencePromise.resolve();\r\n        });\r\n    };\r\n    IndexedDbQueryCache.prototype.getHighestTargetId = function () {\r\n        return this.metadata.highestTargetId;\r\n    };\r\n    IndexedDbQueryCache.prototype.getLastRemoteSnapshotVersion = function () {\r\n        return this.lastRemoteSnapshotVersion;\r\n    };\r\n    IndexedDbQueryCache.prototype.setLastRemoteSnapshotVersion = function (transaction, snapshotVersion) {\r\n        this.lastRemoteSnapshotVersion = snapshotVersion;\r\n        this.metadata.lastRemoteSnapshotVersion = snapshotVersion.toTimestamp();\r\n        return globalTargetStore(transaction).put(DbTargetGlobal.key, this.metadata);\r\n    };\r\n    IndexedDbQueryCache.prototype.addQueryData = function (transaction, queryData) {\r\n        var _this = this;\r\n        return this.saveQueryData(transaction, queryData).next(function () {\r\n            _this.metadata.targetCount += 1;\r\n            _this.updateMetadataFromQueryData(queryData);\r\n            return _this.saveMetadata(transaction);\r\n        });\r\n    };\r\n    IndexedDbQueryCache.prototype.updateQueryData = function (transaction, queryData) {\r\n        var _this = this;\r\n        return this.saveQueryData(transaction, queryData).next(function () {\r\n            if (_this.updateMetadataFromQueryData(queryData)) {\r\n                return _this.saveMetadata(transaction);\r\n            }\r\n            else {\r\n                return PersistencePromise.resolve();\r\n            }\r\n        });\r\n    };\r\n    IndexedDbQueryCache.prototype.removeQueryData = function (transaction, queryData) {\r\n        var _this = this;\r\n        assert(this.metadata.targetCount > 0, 'Removing from an empty query cache');\r\n        return this.removeMatchingKeysForTargetId(transaction, queryData.targetId)\r\n            .next(function () { return targetsStore(transaction).delete(queryData.targetId); })\r\n            .next(function () {\r\n            _this.metadata.targetCount -= 1;\r\n            return _this.saveMetadata(transaction);\r\n        });\r\n    };\r\n    IndexedDbQueryCache.prototype.saveMetadata = function (transaction) {\r\n        return globalTargetStore(transaction).put(DbTargetGlobal.key, this.metadata);\r\n    };\r\n    IndexedDbQueryCache.prototype.saveQueryData = function (transaction, queryData) {\r\n        return targetsStore(transaction).put(this.serializer.toDbTarget(queryData));\r\n    };\r\n    /**\r\n     * Updates the in-memory version of the metadata to account for values in the\r\n     * given QueryData. Saving is done separately. Returns true if there were any\r\n     * changes to the metadata.\r\n     */\r\n    IndexedDbQueryCache.prototype.updateMetadataFromQueryData = function (queryData) {\r\n        var needsUpdate = false;\r\n        if (queryData.targetId > this.metadata.highestTargetId) {\r\n            this.metadata.highestTargetId = queryData.targetId;\r\n            needsUpdate = true;\r\n        }\r\n        // TODO(GC): add sequence number check\r\n        return needsUpdate;\r\n    };\r\n    Object.defineProperty(IndexedDbQueryCache.prototype, \"count\", {\r\n        get: function () {\r\n            return this.metadata.targetCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IndexedDbQueryCache.prototype.getQueryData = function (transaction, query) {\r\n        var _this = this;\r\n        // Iterating by the canonicalId may yield more than one result because\r\n        // canonicalId values are not required to be unique per target. This query\r\n        // depends on the queryTargets index to be efficent.\r\n        var canonicalId = query.canonicalId();\r\n        var range = IDBKeyRange.bound([canonicalId, Number.NEGATIVE_INFINITY], [canonicalId, Number.POSITIVE_INFINITY]);\r\n        var result = null;\r\n        return targetsStore(transaction)\r\n            .iterate({ range: range, index: DbTarget.queryTargetsIndexName }, function (key, value, control) {\r\n            var found = _this.serializer.fromDbTarget(value);\r\n            // After finding a potential match, check that the query is\r\n            // actually equal to the requested query.\r\n            if (query.isEqual(found.query)) {\r\n                result = found;\r\n                control.done();\r\n            }\r\n        })\r\n            .next(function () { return result; });\r\n    };\r\n    IndexedDbQueryCache.prototype.addMatchingKeys = function (txn, keys, targetId) {\r\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\r\n        // Indexeddb.\r\n        var promises = [];\r\n        var store = documentTargetStore(txn);\r\n        keys.forEach(function (key) {\r\n            var path = encode(key.path);\r\n            promises.push(store.put(new DbTargetDocument(targetId, path)));\r\n        });\r\n        return PersistencePromise.waitFor(promises);\r\n    };\r\n    IndexedDbQueryCache.prototype.removeMatchingKeys = function (txn, keys, targetId) {\r\n        var _this = this;\r\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\r\n        // IndexedDb.\r\n        var promises = [];\r\n        var store = documentTargetStore(txn);\r\n        keys.forEach(function (key) {\r\n            var path = encode(key.path);\r\n            promises.push(store.delete([targetId, path]));\r\n            if (_this.garbageCollector !== null) {\r\n                _this.garbageCollector.addPotentialGarbageKey(key);\r\n            }\r\n        });\r\n        return PersistencePromise.waitFor(promises);\r\n    };\r\n    IndexedDbQueryCache.prototype.removeMatchingKeysForTargetId = function (txn, targetId) {\r\n        var store = documentTargetStore(txn);\r\n        var range = IDBKeyRange.bound([targetId], [targetId + 1], \r\n        /*lowerOpen=*/ false, \r\n        /*upperOpen=*/ true);\r\n        return this.notifyGCForRemovedKeys(txn, range).next(function () {\r\n            return store.delete(range);\r\n        });\r\n    };\r\n    IndexedDbQueryCache.prototype.notifyGCForRemovedKeys = function (txn, range) {\r\n        var _this = this;\r\n        var store = documentTargetStore(txn);\r\n        if (this.garbageCollector !== null && this.garbageCollector.isEager) {\r\n            // In order to generate garbage events properly, we need to read these\r\n            // keys before deleting.\r\n            return store.iterate({ range: range, keysOnly: true }, function (key, _, control) {\r\n                var path = decode$1(key[1]);\r\n                var docKey = new DocumentKey(path);\r\n                // Paranoid assertion in case the the collector is set to null\r\n                // during the iteration.\r\n                assert(_this.garbageCollector !== null, 'GarbageCollector for query cache set to null during key removal.');\r\n                _this.garbageCollector.addPotentialGarbageKey(docKey);\r\n            });\r\n        }\r\n        else {\r\n            return PersistencePromise.resolve();\r\n        }\r\n    };\r\n    IndexedDbQueryCache.prototype.getMatchingKeysForTargetId = function (txn, targetId) {\r\n        var range = IDBKeyRange.bound([targetId], [targetId + 1], \r\n        /*lowerOpen=*/ false, \r\n        /*upperOpen=*/ true);\r\n        var store = documentTargetStore(txn);\r\n        var result = documentKeySet();\r\n        return store\r\n            .iterate({ range: range, keysOnly: true }, function (key, _, control) {\r\n            var path = decode$1(key[1]);\r\n            var docKey = new DocumentKey(path);\r\n            result = result.add(docKey);\r\n        })\r\n            .next(function () { return result; });\r\n    };\r\n    IndexedDbQueryCache.prototype.setGarbageCollector = function (gc) {\r\n        this.garbageCollector = gc;\r\n    };\r\n    IndexedDbQueryCache.prototype.containsKey = function (txn, key) {\r\n        assert(txn !== null, 'Persistence Transaction cannot be null for query cache containsKey');\r\n        var path = encode(key.path);\r\n        var range = IDBKeyRange.bound([path], [immediateSuccessor(path)], \r\n        /*lowerOpen=*/ false, \r\n        /*upperOpen=*/ true);\r\n        var count = 0;\r\n        return documentTargetStore(txn)\r\n            .iterate({\r\n            index: DbTargetDocument.documentTargetsIndex,\r\n            keysOnly: true,\r\n            range: range\r\n        }, function (key, _, control) {\r\n            count++;\r\n            control.done();\r\n        })\r\n            .next(function () { return count > 0; });\r\n    };\r\n    return IndexedDbQueryCache;\r\n}());\r\n/**\r\n * Helper to get a typed SimpleDbStore for the queries object store.\r\n */\r\nfunction targetsStore(txn) {\r\n    return getStore$1(txn, DbTarget.store);\r\n}\r\n/**\r\n * Helper to get a typed SimpleDbStore for the target globals object store.\r\n */\r\nfunction globalTargetStore(txn) {\r\n    return getStore$1(txn, DbTargetGlobal.store);\r\n}\r\n/**\r\n * Helper to get a typed SimpleDbStore for the document target object store.\r\n */\r\nfunction documentTargetStore(txn) {\r\n    return getStore$1(txn, DbTargetDocument.store);\r\n}\r\n/**\r\n * Helper to get a typed SimpleDbStore from a transaction.\r\n */\r\nfunction getStore$1(txn, store) {\r\n    if (txn instanceof SimpleDbTransaction) {\r\n        return txn.store(store);\r\n    }\r\n    else {\r\n        return fail('Invalid transaction object provided!');\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar IndexedDbRemoteDocumentCache = /** @class */ (function () {\r\n    function IndexedDbRemoteDocumentCache(serializer) {\r\n        this.serializer = serializer;\r\n    }\r\n    IndexedDbRemoteDocumentCache.prototype.addEntry = function (transaction, maybeDocument) {\r\n        return remoteDocumentsStore(transaction).put(dbKey(maybeDocument.key), this.serializer.toDbRemoteDocument(maybeDocument));\r\n    };\r\n    IndexedDbRemoteDocumentCache.prototype.removeEntry = function (transaction, documentKey) {\r\n        return remoteDocumentsStore(transaction).delete(dbKey(documentKey));\r\n    };\r\n    IndexedDbRemoteDocumentCache.prototype.getEntry = function (transaction, documentKey) {\r\n        var _this = this;\r\n        return remoteDocumentsStore(transaction)\r\n            .get(dbKey(documentKey))\r\n            .next(function (dbRemoteDoc) {\r\n            return dbRemoteDoc\r\n                ? _this.serializer.fromDbRemoteDocument(dbRemoteDoc)\r\n                : null;\r\n        });\r\n    };\r\n    IndexedDbRemoteDocumentCache.prototype.getDocumentsMatchingQuery = function (transaction, query) {\r\n        var _this = this;\r\n        var results = documentMap();\r\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\r\n        // the documents we need to match the query against.\r\n        var startKey = query.path.toArray();\r\n        var range = IDBKeyRange.lowerBound(startKey);\r\n        return remoteDocumentsStore(transaction)\r\n            .iterate({ range: range }, function (key, dbRemoteDoc, control) {\r\n            var maybeDoc = _this.serializer.fromDbRemoteDocument(dbRemoteDoc);\r\n            if (!query.path.isPrefixOf(maybeDoc.key.path)) {\r\n                control.done();\r\n            }\r\n            else if (maybeDoc instanceof Document && query.matches(maybeDoc)) {\r\n                results = results.insert(maybeDoc.key, maybeDoc);\r\n            }\r\n        })\r\n            .next(function () { return results; });\r\n    };\r\n    return IndexedDbRemoteDocumentCache;\r\n}());\r\n/**\r\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\r\n */\r\nfunction remoteDocumentsStore(txn) {\r\n    if (txn instanceof SimpleDbTransaction) {\r\n        return txn.store(DbRemoteDocument.store);\r\n    }\r\n    else {\r\n        return fail('Invalid transaction object provided!');\r\n    }\r\n}\r\nfunction dbKey(docKey) {\r\n    return docKey.path.toArray();\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Serializer for values stored in the LocalStore. */\r\nvar LocalSerializer = /** @class */ (function () {\r\n    function LocalSerializer(remoteSerializer) {\r\n        this.remoteSerializer = remoteSerializer;\r\n    }\r\n    /** Decodes a remote document from storage locally to a Document. */\r\n    LocalSerializer.prototype.fromDbRemoteDocument = function (remoteDoc) {\r\n        if (remoteDoc.document) {\r\n            return this.remoteSerializer.fromDocument(remoteDoc.document);\r\n        }\r\n        else if (remoteDoc.noDocument) {\r\n            var key = DocumentKey.fromSegments(remoteDoc.noDocument.path);\r\n            var readTime = remoteDoc.noDocument.readTime;\r\n            var timestamp = new Timestamp(readTime.seconds, readTime.nanoseconds);\r\n            return new NoDocument(key, SnapshotVersion.fromTimestamp(timestamp));\r\n        }\r\n        else {\r\n            return fail('Unexpected DbRemoteDocument');\r\n        }\r\n    };\r\n    /** Encodes a document for storage locally. */\r\n    LocalSerializer.prototype.toDbRemoteDocument = function (maybeDoc) {\r\n        if (maybeDoc instanceof Document) {\r\n            var doc = this.remoteSerializer.toDocument(maybeDoc);\r\n            return new DbRemoteDocument(null, doc);\r\n        }\r\n        else {\r\n            var path = maybeDoc.key.path.toArray();\r\n            var timestamp = maybeDoc.version.toTimestamp();\r\n            var readTime = new DbTimestamp(timestamp.seconds, timestamp.nanoseconds);\r\n            return new DbRemoteDocument(new DbNoDocument(path, readTime), null);\r\n        }\r\n    };\r\n    /** Encodes a batch of mutations into a DbMutationBatch for local storage. */\r\n    LocalSerializer.prototype.toDbMutationBatch = function (userId, batch) {\r\n        var _this = this;\r\n        var serializedMutations = batch.mutations.map(function (m) {\r\n            return _this.remoteSerializer.toMutation(m);\r\n        });\r\n        return new DbMutationBatch(userId, batch.batchId, batch.localWriteTime.toMillis(), serializedMutations);\r\n    };\r\n    /** Decodes a DbMutationBatch into a MutationBatch */\r\n    LocalSerializer.prototype.fromDbMutationBatch = function (dbBatch) {\r\n        var _this = this;\r\n        var mutations = dbBatch.mutations.map(function (m) {\r\n            return _this.remoteSerializer.fromMutation(m);\r\n        });\r\n        var timestamp = Timestamp.fromMillis(dbBatch.localWriteTimeMs);\r\n        return new MutationBatch(dbBatch.batchId, timestamp, mutations);\r\n    };\r\n    /** Decodes a DbTarget into QueryData */\r\n    LocalSerializer.prototype.fromDbTarget = function (dbTarget) {\r\n        var readTime = new Timestamp(dbTarget.readTime.seconds, dbTarget.readTime.nanoseconds);\r\n        var version = SnapshotVersion.fromTimestamp(readTime);\r\n        var query;\r\n        if (isDocumentQuery(dbTarget.query)) {\r\n            query = this.remoteSerializer.fromDocumentsTarget(dbTarget.query);\r\n        }\r\n        else {\r\n            query = this.remoteSerializer.fromQueryTarget(dbTarget.query);\r\n        }\r\n        return new QueryData(query, dbTarget.targetId, QueryPurpose.Listen, version, dbTarget.resumeToken);\r\n    };\r\n    /** Encodes QueryData into a DbTarget for storage locally. */\r\n    LocalSerializer.prototype.toDbTarget = function (queryData) {\r\n        assert(QueryPurpose.Listen === queryData.purpose, 'Only queries with purpose ' +\r\n            QueryPurpose.Listen +\r\n            ' may be stored, got ' +\r\n            queryData.purpose);\r\n        var timestamp = queryData.snapshotVersion.toTimestamp();\r\n        var dbTimestamp = new DbTimestamp(timestamp.seconds, timestamp.nanoseconds);\r\n        var queryProto;\r\n        if (queryData.query.isDocumentQuery()) {\r\n            queryProto = this.remoteSerializer.toDocumentsTarget(queryData.query);\r\n        }\r\n        else {\r\n            queryProto = this.remoteSerializer.toQueryTarget(queryData.query);\r\n        }\r\n        var resumeToken;\r\n        if (queryData.resumeToken instanceof Uint8Array) {\r\n            // TODO(b/78771403): Convert tokens to strings during deserialization\r\n            assert(process.env.USE_MOCK_PERSISTENCE === 'YES', 'Persisting non-string stream tokens is only supported with mock persistence .');\r\n            resumeToken = queryData.resumeToken.toString();\r\n        }\r\n        else {\r\n            resumeToken = queryData.resumeToken;\r\n        }\r\n        // lastListenSequenceNumber is always 0 until we do real GC.\r\n        return new DbTarget(queryData.targetId, queryData.query.canonicalId(), dbTimestamp, resumeToken, 0, queryProto);\r\n    };\r\n    return LocalSerializer;\r\n}());\r\n/**\r\n * A helper function for figuring out what kind of query has been stored.\r\n */\r\nfunction isDocumentQuery(dbQuery) {\r\n    return dbQuery.documents !== undefined;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG$3 = 'IndexedDbPersistence';\r\n/** If the owner lease is older than 5 seconds, try to take ownership. */\r\nvar OWNER_LEASE_MAX_AGE_MS = 5000;\r\n/** Refresh the owner lease every 4 seconds while owner. */\r\nvar OWNER_LEASE_REFRESH_INTERVAL_MS = 4000;\r\n/** LocalStorage location to indicate a zombied ownerId (see class comment). */\r\nvar ZOMBIE_OWNER_LOCALSTORAGE_SUFFIX = 'zombiedOwnerId';\r\n/** Error when the owner lease cannot be acquired or is lost. */\r\nvar EXISTING_OWNER_ERROR_MSG = 'There is another tab open with offline' +\r\n    ' persistence enabled. Only one such tab is allowed at a time. The' +\r\n    ' other tab must be closed or persistence must be disabled.';\r\nvar UNSUPPORTED_PLATFORM_ERROR_MSG = 'This platform is either missing' +\r\n    ' IndexedDB or is known to have an incomplete implementation. Offline' +\r\n    ' persistence has been disabled.';\r\n/**\r\n * An IndexedDB-backed instance of Persistence. Data is stored persistently\r\n * across sessions.\r\n *\r\n * Currently the Firestore SDK only supports a single consumer of the database,\r\n * but browsers obviously support multiple tabs. IndexedDbPersistence ensures a\r\n * single consumer of the database via an \"owner lease\" stored in the database.\r\n *\r\n * On startup, IndexedDbPersistence assigns itself a random \"ownerId\" and writes\r\n * it to a special \"owner\" object in the database (if no entry exists already or\r\n * the current entry is expired). This owner lease is then verified inside every\r\n * transaction to ensure the lease has not been lost.\r\n *\r\n * If a tab opts not to acquire the owner lease (because there's an existing\r\n * non-expired owner) or loses the owner lease, IndexedDbPersistence enters a\r\n * failed state and all subsequent operations will automatically fail.\r\n *\r\n * The current owner regularly refreshes the owner lease with new timestamps to\r\n * prevent newly-opened tabs from taking over ownership.\r\n *\r\n * Additionally there is an optimization so that when a tab is closed, the owner\r\n * lease is released immediately (this is especially important to make sure that\r\n * a refreshed tab is able to immediately re-acquire the owner lease).\r\n * Unfortunately, IndexedDB cannot be reliably used in window.unload since it is\r\n * an asynchronous API. So in addition to attempting to give up the lease,\r\n * the owner writes its ownerId to a \"zombiedOwnerId\" entry in LocalStorage\r\n * which acts as an indicator that another tab should go ahead and take the\r\n * owner lease immediately regardless of the current lease timestamp.\r\n */\r\nvar IndexedDbPersistence = /** @class */ (function () {\r\n    function IndexedDbPersistence(prefix, serializer) {\r\n        this.ownerId = this.generateOwnerId();\r\n        this.dbName = prefix + IndexedDbPersistence.MAIN_DATABASE;\r\n        this.serializer = new LocalSerializer(serializer);\r\n        this.localStoragePrefix = prefix;\r\n    }\r\n    IndexedDbPersistence.prototype.start = function () {\r\n        var _this = this;\r\n        if (!IndexedDbPersistence.isAvailable()) {\r\n            this.persistenceError = new FirestoreError(Code.UNIMPLEMENTED, UNSUPPORTED_PLATFORM_ERROR_MSG);\r\n            return Promise.reject(this.persistenceError);\r\n        }\r\n        assert(!this.started, 'IndexedDbPersistence double-started!');\r\n        this.started = true;\r\n        return SimpleDb.openOrCreate(this.dbName, SCHEMA_VERSION, createOrUpgradeDb)\r\n            .then(function (db) {\r\n            _this.simpleDb = db;\r\n        })\r\n            .then(function () { return _this.tryAcquireOwnerLease(); })\r\n            .then(function () {\r\n            _this.scheduleOwnerLeaseRefreshes();\r\n            _this.attachWindowUnloadHook();\r\n        });\r\n    };\r\n    IndexedDbPersistence.prototype.shutdown = function (deleteData) {\r\n        var _this = this;\r\n        assert(this.started, 'IndexedDbPersistence shutdown without start!');\r\n        this.started = false;\r\n        this.detachWindowUnloadHook();\r\n        this.stopOwnerLeaseRefreshes();\r\n        return this.releaseOwnerLease().then(function () {\r\n            _this.simpleDb.close();\r\n            if (deleteData) {\r\n                return SimpleDb.delete(_this.dbName);\r\n            }\r\n        });\r\n    };\r\n    IndexedDbPersistence.prototype.getMutationQueue = function (user) {\r\n        return IndexedDbMutationQueue.forUser(user, this.serializer);\r\n    };\r\n    IndexedDbPersistence.prototype.getQueryCache = function () {\r\n        return new IndexedDbQueryCache(this.serializer);\r\n    };\r\n    IndexedDbPersistence.prototype.getRemoteDocumentCache = function () {\r\n        return new IndexedDbRemoteDocumentCache(this.serializer);\r\n    };\r\n    IndexedDbPersistence.prototype.runTransaction = function (action, operation) {\r\n        var _this = this;\r\n        if (this.persistenceError) {\r\n            return Promise.reject(this.persistenceError);\r\n        }\r\n        debug(LOG_TAG$3, 'Starting transaction:', action);\r\n        // Do all transactions as readwrite against all object stores, since we\r\n        // are the only reader/writer.\r\n        return this.simpleDb.runTransaction('readwrite', ALL_STORES, function (txn) {\r\n            // Verify that we still have the owner lease as part of every transaction.\r\n            return _this.ensureOwnerLease(txn).next(function () { return operation(txn); });\r\n        });\r\n    };\r\n    IndexedDbPersistence.isAvailable = function () {\r\n        return SimpleDb.isAvailable();\r\n    };\r\n    /**\r\n     * Generates a string used as a prefix when storing data in IndexedDB and\r\n     * LocalStorage.\r\n     */\r\n    IndexedDbPersistence.buildStoragePrefix = function (databaseInfo) {\r\n        // Use two different prefix formats:\r\n        //\r\n        //   * firestore / persistenceKey / projectID . databaseID / ...\r\n        //   * firestore / persistenceKey / projectID / ...\r\n        //\r\n        // projectIDs are DNS-compatible names and cannot contain dots\r\n        // so there's no danger of collisions.\r\n        var database = databaseInfo.databaseId.projectId;\r\n        if (!databaseInfo.databaseId.isDefaultDatabase) {\r\n            database += '.' + databaseInfo.databaseId.database;\r\n        }\r\n        return 'firestore/' + databaseInfo.persistenceKey + '/' + database + '/';\r\n    };\r\n    /**\r\n     * Acquires the owner lease if there's no valid owner. Else returns a rejected\r\n     * promise.\r\n     */\r\n    IndexedDbPersistence.prototype.tryAcquireOwnerLease = function () {\r\n        var _this = this;\r\n        // NOTE: Don't use this.runTransaction, since it requires us to already\r\n        // have the lease.\r\n        return this.simpleDb.runTransaction('readwrite', [DbOwner.store], function (txn) {\r\n            var store = txn.store(DbOwner.store);\r\n            return store.get('owner').next(function (dbOwner) {\r\n                if (!_this.validOwner(dbOwner)) {\r\n                    var newDbOwner = new DbOwner(_this.ownerId, Date.now());\r\n                    debug(LOG_TAG$3, 'No valid owner. Acquiring owner lease. Current owner:', dbOwner, 'New owner:', newDbOwner);\r\n                    return store.put('owner', newDbOwner);\r\n                }\r\n                else {\r\n                    debug(LOG_TAG$3, 'Valid owner already. Failing. Current owner:', dbOwner);\r\n                    _this.persistenceError = new FirestoreError(Code.FAILED_PRECONDITION, EXISTING_OWNER_ERROR_MSG);\r\n                    return PersistencePromise.reject(_this.persistenceError);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Checks the owner lease and deletes it if we are the current owner. */\r\n    IndexedDbPersistence.prototype.releaseOwnerLease = function () {\r\n        var _this = this;\r\n        // NOTE: Don't use this.runTransaction, since it requires us to already\r\n        // have the lease.\r\n        return this.simpleDb.runTransaction('readwrite', [DbOwner.store], function (txn) {\r\n            var store = txn.store(DbOwner.store);\r\n            return store.get('owner').next(function (dbOwner) {\r\n                if (dbOwner !== null && dbOwner.ownerId === _this.ownerId) {\r\n                    debug(LOG_TAG$3, 'Releasing owner lease.');\r\n                    return store.delete('owner');\r\n                }\r\n                else {\r\n                    return PersistencePromise.resolve();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks the owner lease and returns a rejected promise if we are not the\r\n     * current owner. This should be included in every transaction to guard\r\n     * against losing the owner lease.\r\n     */\r\n    IndexedDbPersistence.prototype.ensureOwnerLease = function (txn) {\r\n        var _this = this;\r\n        var store = txn.store(DbOwner.store);\r\n        return store.get('owner').next(function (dbOwner) {\r\n            if (dbOwner === null || dbOwner.ownerId !== _this.ownerId) {\r\n                _this.persistenceError = new FirestoreError(Code.FAILED_PRECONDITION, EXISTING_OWNER_ERROR_MSG);\r\n                return PersistencePromise.reject(_this.persistenceError);\r\n            }\r\n            else {\r\n                return PersistencePromise.resolve();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the provided owner exists, has a recent timestamp, and\r\n     * isn't zombied.\r\n     *\r\n     * NOTE: To determine if the owner is zombied, this method reads from\r\n     * LocalStorage which could be mildly expensive.\r\n     */\r\n    IndexedDbPersistence.prototype.validOwner = function (dbOwner) {\r\n        var now = Date.now();\r\n        var minAcceptable = now - OWNER_LEASE_MAX_AGE_MS;\r\n        var maxAcceptable = now;\r\n        if (dbOwner === null) {\r\n            return false; // no owner.\r\n        }\r\n        else if (dbOwner.leaseTimestampMs < minAcceptable) {\r\n            return false; // owner lease has expired.\r\n        }\r\n        else if (dbOwner.leaseTimestampMs > maxAcceptable) {\r\n            error('Persistence owner-lease is in the future. Discarding.', dbOwner);\r\n            return false;\r\n        }\r\n        else if (dbOwner.ownerId === this.getZombiedOwnerId()) {\r\n            return false; // owner's tab closed.\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Schedules a recurring timer to update the owner lease timestamp to prevent\r\n     * other tabs from taking the lease.\r\n     */\r\n    IndexedDbPersistence.prototype.scheduleOwnerLeaseRefreshes = function () {\r\n        var _this = this;\r\n        // NOTE: This doesn't need to be scheduled on the async queue and doing so\r\n        // would increase the chances of us not refreshing on time if the queue is\r\n        // backed up for some reason.\r\n        this.ownerLeaseRefreshHandle = setInterval(function () {\r\n            var txResult = _this.runTransaction('Refresh owner timestamp', function (txn) {\r\n                // NOTE: We don't need to validate the current owner contents, since\r\n                // runTransaction does that automatically.\r\n                var store = txn.store(DbOwner.store);\r\n                return store.put('owner', new DbOwner(_this.ownerId, Date.now()));\r\n            });\r\n            txResult.catch(function (reason) {\r\n                // Probably means we lost the lease. Report the error and stop trying to\r\n                // refresh the lease.\r\n                error(reason);\r\n                _this.stopOwnerLeaseRefreshes();\r\n            });\r\n        }, OWNER_LEASE_REFRESH_INTERVAL_MS);\r\n    };\r\n    IndexedDbPersistence.prototype.stopOwnerLeaseRefreshes = function () {\r\n        if (this.ownerLeaseRefreshHandle) {\r\n            clearInterval(this.ownerLeaseRefreshHandle);\r\n            this.ownerLeaseRefreshHandle = null;\r\n        }\r\n    };\r\n    /**\r\n     * Attaches a window.unload handler that will synchronously write our\r\n     * ownerId to a \"zombie owner id\" location in localstorage. This can be used\r\n     * by tabs trying to acquire the lease to determine that the lease should be\r\n     * acquired immediately even if the timestamp is recent. This is particularly\r\n     * important for the refresh case (so the tab correctly re-acquires the owner\r\n     * lease). LocalStorage is used for this rather than IndexedDb because it is\r\n     * a synchronous API and so can be used reliably from an unload handler.\r\n     */\r\n    IndexedDbPersistence.prototype.attachWindowUnloadHook = function () {\r\n        var _this = this;\r\n        if (typeof window === 'object' &&\r\n            typeof window.addEventListener === 'function') {\r\n            this.windowUnloadHandler = function () {\r\n                // Record that we're zombied.\r\n                _this.setZombiedOwnerId(_this.ownerId);\r\n                // Attempt graceful shutdown (including releasing our owner lease), but\r\n                // there's no guarantee it will complete.\r\n                _this.shutdown();\r\n            };\r\n            window.addEventListener('unload', this.windowUnloadHandler);\r\n        }\r\n    };\r\n    IndexedDbPersistence.prototype.detachWindowUnloadHook = function () {\r\n        if (this.windowUnloadHandler) {\r\n            assert(typeof window === 'object' &&\r\n                typeof window.removeEventListener === 'function', \"Expected 'window.removeEventListener' to be a function\");\r\n            window.removeEventListener('unload', this.windowUnloadHandler);\r\n            this.windowUnloadHandler = null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns any recorded \"zombied owner\" (i.e. a previous owner that became\r\n     * zombied due to their tab closing) from LocalStorage, or null if no such\r\n     * record exists.\r\n     */\r\n    IndexedDbPersistence.prototype.getZombiedOwnerId = function () {\r\n        try {\r\n            var zombiedOwnerId = window.localStorage.getItem(this.zombiedOwnerLocalStorageKey());\r\n            debug(LOG_TAG$3, 'Zombied ownerID from LocalStorage:', zombiedOwnerId);\r\n            return zombiedOwnerId;\r\n        }\r\n        catch (e) {\r\n            // Gracefully handle if LocalStorage isn't available / working.\r\n            error('Failed to get zombie owner id.', e);\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Records a zombied owner (an owner that had its tab closed) in LocalStorage\r\n     * or, if passed null, deletes any recorded zombied owner.\r\n     */\r\n    IndexedDbPersistence.prototype.setZombiedOwnerId = function (zombieOwnerId) {\r\n        try {\r\n            if (zombieOwnerId === null) {\r\n                window.localStorage.removeItem(this.zombiedOwnerLocalStorageKey());\r\n            }\r\n            else {\r\n                window.localStorage.setItem(this.zombiedOwnerLocalStorageKey(), zombieOwnerId);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Gracefully handle if LocalStorage isn't available / working.\r\n            error('Failed to set zombie owner id.', e);\r\n        }\r\n    };\r\n    IndexedDbPersistence.prototype.zombiedOwnerLocalStorageKey = function () {\r\n        return this.localStoragePrefix + ZOMBIE_OWNER_LOCALSTORAGE_SUFFIX;\r\n    };\r\n    IndexedDbPersistence.prototype.generateOwnerId = function () {\r\n        // For convenience, just use an AutoId.\r\n        return AutoId.newId();\r\n    };\r\n    /**\r\n     * The name of the main (and currently only) IndexedDB database. this name is\r\n     * appended to the prefix provided to the IndexedDbPersistence constructor.\r\n     */\r\n    IndexedDbPersistence.MAIN_DATABASE = 'main';\r\n    return IndexedDbPersistence;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A readonly view of the local state of all documents we're tracking (i.e. we\r\n * have a cached version in remoteDocumentCache or local mutations for the\r\n * document). The view is computed by applying the mutations in the\r\n * MutationQueue to the RemoteDocumentCache.\r\n */\r\nvar LocalDocumentsView = /** @class */ (function () {\r\n    function LocalDocumentsView(remoteDocumentCache, mutationQueue) {\r\n        this.remoteDocumentCache = remoteDocumentCache;\r\n        this.mutationQueue = mutationQueue;\r\n    }\r\n    /**\r\n     * Get the local view of the document identified by `key`.\r\n     *\r\n     * @return Local view of the document or null if we don't have any cached\r\n     * state for it.\r\n     */\r\n    LocalDocumentsView.prototype.getDocument = function (transaction, key) {\r\n        var _this = this;\r\n        return this.remoteDocumentCache\r\n            .getEntry(transaction, key)\r\n            .next(function (remoteDoc) {\r\n            return _this.computeLocalDocument(transaction, key, remoteDoc);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the local view of the documents identified by `keys`.\r\n     *\r\n     * If we don't have cached state for a document in `keys`, a NoDocument will\r\n     * be stored for that key in the resulting set.\r\n     */\r\n    LocalDocumentsView.prototype.getDocuments = function (transaction, keys) {\r\n        var _this = this;\r\n        var promises = [];\r\n        var results = maybeDocumentMap();\r\n        keys.forEach(function (key) {\r\n            promises.push(_this.getDocument(transaction, key).next(function (maybeDoc) {\r\n                // TODO(http://b/32275378): Don't conflate missing / deleted.\r\n                if (!maybeDoc) {\r\n                    maybeDoc = new NoDocument(key, SnapshotVersion.forDeletedDoc());\r\n                }\r\n                results = results.insert(key, maybeDoc);\r\n            }));\r\n        });\r\n        return PersistencePromise.waitFor(promises).next(function () { return results; });\r\n    };\r\n    /** Performs a query against the local view of all documents. */\r\n    LocalDocumentsView.prototype.getDocumentsMatchingQuery = function (transaction, query) {\r\n        if (DocumentKey.isDocumentKey(query.path)) {\r\n            return this.getDocumentsMatchingDocumentQuery(transaction, query.path);\r\n        }\r\n        else {\r\n            return this.getDocumentsMatchingCollectionQuery(transaction, query);\r\n        }\r\n    };\r\n    LocalDocumentsView.prototype.getDocumentsMatchingDocumentQuery = function (transaction, docPath) {\r\n        // Just do a simple document lookup.\r\n        return this.getDocument(transaction, new DocumentKey(docPath)).next(function (maybeDoc) {\r\n            var result = documentMap();\r\n            if (maybeDoc instanceof Document) {\r\n                result = result.insert(maybeDoc.key, maybeDoc);\r\n            }\r\n            return result;\r\n        });\r\n    };\r\n    LocalDocumentsView.prototype.getDocumentsMatchingCollectionQuery = function (transaction, query) {\r\n        var _this = this;\r\n        // Query the remote documents and overlay mutations.\r\n        // TODO(mikelehen): There may be significant overlap between the mutations\r\n        // affecting these remote documents and the\r\n        // getAllMutationBatchesAffectingQuery() mutations. Consider optimizing.\r\n        var results;\r\n        return this.remoteDocumentCache\r\n            .getDocumentsMatchingQuery(transaction, query)\r\n            .next(function (queryResults) {\r\n            return _this.computeLocalDocuments(transaction, queryResults);\r\n        })\r\n            .next(function (promisedResults) {\r\n            results = promisedResults;\r\n            // Now use the mutation queue to discover any other documents that may\r\n            // match the query after applying mutations.\r\n            return _this.mutationQueue.getAllMutationBatchesAffectingQuery(transaction, query);\r\n        })\r\n            .next(function (matchingMutationBatches) {\r\n            var matchingKeys = documentKeySet();\r\n            for (var _i = 0, matchingMutationBatches_1 = matchingMutationBatches; _i < matchingMutationBatches_1.length; _i++) {\r\n                var batch = matchingMutationBatches_1[_i];\r\n                for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\r\n                    var mutation = _b[_a];\r\n                    // TODO(mikelehen): PERF: Check if this mutation actually\r\n                    // affects the query to reduce work.\r\n                    if (!results.get(mutation.key)) {\r\n                        matchingKeys = matchingKeys.add(mutation.key);\r\n                    }\r\n                }\r\n            }\r\n            // Now add in the results for the matchingKeys.\r\n            var promises = [];\r\n            matchingKeys.forEach(function (key) {\r\n                promises.push(_this.getDocument(transaction, key).next(function (doc) {\r\n                    if (doc instanceof Document) {\r\n                        results = results.insert(doc.key, doc);\r\n                    }\r\n                }));\r\n            });\r\n            return PersistencePromise.waitFor(promises);\r\n        })\r\n            .next(function () {\r\n            // Finally, filter out any documents that don't actually match\r\n            // the query.\r\n            results.forEach(function (key, doc) {\r\n                if (!query.matches(doc)) {\r\n                    results = results.remove(key);\r\n                }\r\n            });\r\n            return results;\r\n        });\r\n    };\r\n    /**\r\n     * Takes a remote document and applies local mutations to generate the local\r\n     * view of the document.\r\n     * @param transaction The transaction in which to perform any persistence\r\n     *     operations.\r\n     * @param documentKey The key of the document (necessary when remoteDocument\r\n     *     is null).\r\n     * @param document The base remote document to apply mutations to or null.\r\n     */\r\n    LocalDocumentsView.prototype.computeLocalDocument = function (transaction, documentKey, document) {\r\n        return this.mutationQueue\r\n            .getAllMutationBatchesAffectingDocumentKey(transaction, documentKey)\r\n            .next(function (batches) {\r\n            for (var _i = 0, batches_1 = batches; _i < batches_1.length; _i++) {\r\n                var batch = batches_1[_i];\r\n                document = batch.applyToLocalView(documentKey, document);\r\n            }\r\n            return document;\r\n        });\r\n    };\r\n    /**\r\n     * Takes a set of remote documents and applies local mutations to generate the\r\n     * local view of the documents.\r\n     * @param transaction The transaction in which to perform any persistence\r\n     *     operations.\r\n     * @param documents The base remote documents to apply mutations to.\r\n     * @return The local view of the documents.\r\n     */\r\n    LocalDocumentsView.prototype.computeLocalDocuments = function (transaction, documents) {\r\n        var _this = this;\r\n        var promises = [];\r\n        documents.forEach(function (key, doc) {\r\n            promises.push(_this.computeLocalDocument(transaction, key, doc).next(function (mutatedDoc) {\r\n                if (mutatedDoc instanceof Document) {\r\n                    documents = documents.insert(mutatedDoc.key, mutatedDoc);\r\n                }\r\n                else if (mutatedDoc instanceof NoDocument) {\r\n                    documents = documents.remove(mutatedDoc.key);\r\n                }\r\n                else {\r\n                    fail('Unknown MaybeDocument: ' + mutatedDoc);\r\n                }\r\n            }));\r\n        });\r\n        return PersistencePromise.waitFor(promises).next(function () { return documents; });\r\n    };\r\n    return LocalDocumentsView;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\r\n * It can be used to batch up a set of changes to be written to the cache, but\r\n * additionally supports reading entries back with the `getEntry()` method,\r\n * falling back to the underlying RemoteDocumentCache if no entry is\r\n * buffered.\r\n *\r\n * NOTE: This class was introduced in iOS to work around a limitation in\r\n * LevelDB. Given IndexedDb has full transaction support with\r\n * read-your-own-writes capability, this class is not technically needed, but\r\n * has been preserved as a convenience and to aid portability.\r\n */\r\nvar RemoteDocumentChangeBuffer = /** @class */ (function () {\r\n    function RemoteDocumentChangeBuffer(remoteDocumentCache) {\r\n        this.remoteDocumentCache = remoteDocumentCache;\r\n        this.changes = maybeDocumentMap();\r\n    }\r\n    /** Buffers a `RemoteDocumentCache.addEntry()` call. */\r\n    RemoteDocumentChangeBuffer.prototype.addEntry = function (maybeDocument) {\r\n        var changes = this.assertChanges();\r\n        this.changes = changes.insert(maybeDocument.key, maybeDocument);\r\n    };\r\n    // NOTE: removeEntry() is not presently necessary and so is omitted.\r\n    /**\r\n     * Looks up an entry in the cache. The buffered changes will first be checked,\r\n     * and if no buffered change applies, this will forward to\r\n     * `RemoteDocumentCache.getEntry()`.\r\n     *\r\n     * @param transaction The transaction in which to perform any persistence\r\n     *     operations.\r\n     * @param documentKey The key of the entry to look up.\r\n     * @return The cached Document or NoDocument entry, or null if we have nothing\r\n     * cached.\r\n     */\r\n    RemoteDocumentChangeBuffer.prototype.getEntry = function (transaction, documentKey) {\r\n        var changes = this.assertChanges();\r\n        var bufferedEntry = changes.get(documentKey);\r\n        if (bufferedEntry) {\r\n            return PersistencePromise.resolve(bufferedEntry);\r\n        }\r\n        else {\r\n            return this.remoteDocumentCache.getEntry(transaction, documentKey);\r\n        }\r\n    };\r\n    /**\r\n     * Applies buffered changes to the underlying RemoteDocumentCache, using\r\n     * the provided transaction.\r\n     */\r\n    RemoteDocumentChangeBuffer.prototype.apply = function (transaction) {\r\n        var _this = this;\r\n        var changes = this.assertChanges();\r\n        var promises = [];\r\n        changes.forEach(function (key, maybeDoc) {\r\n            promises.push(_this.remoteDocumentCache.addEntry(transaction, maybeDoc));\r\n        });\r\n        // We should not be used to buffer any more changes.\r\n        this.changes = null;\r\n        return PersistencePromise.waitFor(promises);\r\n    };\r\n    /** Helper to assert this.changes is not null and return it. */\r\n    RemoteDocumentChangeBuffer.prototype.assertChanges = function () {\r\n        assert(this.changes !== null, 'Changes have already been applied.');\r\n        return this.changes;\r\n    };\r\n    return RemoteDocumentChangeBuffer;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG$4 = 'LocalStore';\r\n/**\r\n * Local storage in the Firestore client. Coordinates persistence components\r\n * like the mutation queue and remote document cache to present a\r\n * latency-compensated view of stored data.\r\n *\r\n * The LocalStore is responsible for accepting mutations from the Sync Engine.\r\n * Writes from the client are put into a queue as provisional Mutations until\r\n * they are processed by the RemoteStore and confirmed as having been written\r\n * to the server.\r\n *\r\n * The local store provides the local version of documents that have been\r\n * modified locally. It maintains the constraint:\r\n *\r\n *   LocalDocument = RemoteDocument + Active(LocalMutations)\r\n *\r\n * (Active mutations are those that are enqueued and have not been previously\r\n * acknowledged or rejected).\r\n *\r\n * The RemoteDocument (\"ground truth\") state is provided via the\r\n * applyChangeBatch method. It will be some version of a server-provided\r\n * document OR will be a server-provided document PLUS acknowledged mutations:\r\n *\r\n *   RemoteDocument' = RemoteDocument + Acknowledged(LocalMutations)\r\n *\r\n * Note that this \"dirty\" version of a RemoteDocument will not be identical to a\r\n * server base version, since it has LocalMutations added to it pending getting\r\n * an authoritative copy from the server.\r\n *\r\n * Since LocalMutations can be rejected by the server, we have to be able to\r\n * revert a LocalMutation that has already been applied to the LocalDocument\r\n * (typically done by replaying all remaining LocalMutations to the\r\n * RemoteDocument to re-apply).\r\n *\r\n * The LocalStore is responsible for the garbage collection of the documents it\r\n * contains. For now, it every doc referenced by a view, the mutation queue, or\r\n * the RemoteStore.\r\n *\r\n * It also maintains the persistence of mapping queries to resume tokens and\r\n * target ids. It needs to know this data about queries to properly know what\r\n * docs it would be allowed to garbage collect.\r\n *\r\n * The LocalStore must be able to efficiently execute queries against its local\r\n * cache of the documents, to provide the initial set of results before any\r\n * remote changes have been received.\r\n *\r\n * Note: In TypeScript, most methods return Promises since the implementation\r\n * may rely on fetching data from IndexedDB which is async.\r\n * These Promises will only be rejected on an I/O error or other internal\r\n * (unexpected) failure (e.g. failed assert) and always represent an\r\n * unrecoverable error (should be caught / reported by the async_queue).\r\n */\r\nvar LocalStore = /** @class */ (function () {\r\n    function LocalStore(\r\n    /** Manages our in-memory or durable persistence. */\r\n    persistence, initialUser, \r\n    /**\r\n     * The garbage collector collects documents that should no longer be\r\n     * cached (e.g. if they are no longer retained by the above reference sets\r\n     * and the garbage collector is performing eager collection).\r\n     */\r\n    garbageCollector) {\r\n        this.persistence = persistence;\r\n        this.garbageCollector = garbageCollector;\r\n        /**\r\n         * The set of document references maintained by any local views.\r\n         */\r\n        this.localViewReferences = new ReferenceSet();\r\n        /** Maps a targetID to data about its query. */\r\n        this.targetIds = {};\r\n        /** Used to generate targetIDs for queries tracked locally. */\r\n        this.targetIdGenerator = TargetIdGenerator.forLocalStore();\r\n        /**\r\n         * A heldBatchResult is a mutation batch result (from a write acknowledgement)\r\n         * that arrived before the watch stream got notified of a snapshot that\r\n         * includes the write. So we \"hold\" it until the watch stream catches up. It\r\n         * ensures that the local write remains visible (latency compensation) and\r\n         * doesn't temporarily appear reverted because the watch stream is slower than\r\n         * the write stream and so wasn't reflecting it.\r\n         *\r\n         * NOTE: Eventually we want to move this functionality into the remote store.\r\n         */\r\n        this.heldBatchResults = [];\r\n        this.mutationQueue = persistence.getMutationQueue(initialUser);\r\n        this.remoteDocuments = persistence.getRemoteDocumentCache();\r\n        this.queryCache = persistence.getQueryCache();\r\n        this.localDocuments = new LocalDocumentsView(this.remoteDocuments, this.mutationQueue);\r\n        this.garbageCollector.addGarbageSource(this.localViewReferences);\r\n        this.garbageCollector.addGarbageSource(this.queryCache);\r\n        this.garbageCollector.addGarbageSource(this.mutationQueue);\r\n    }\r\n    /** Performs any initial startup actions required by the local store. */\r\n    LocalStore.prototype.start = function () {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Start LocalStore', function (txn) {\r\n            return _this.startMutationQueue(txn).next(function () { return _this.startQueryCache(txn); });\r\n        });\r\n    };\r\n    /**\r\n     * Tells the LocalStore that the currently authenticated user has changed.\r\n     *\r\n     * In response the local store switches the mutation queue to the new user and\r\n     * returns any resulting document changes.\r\n     */\r\n    LocalStore.prototype.handleUserChange = function (user) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Handle user change', function (txn) {\r\n            // Swap out the mutation queue, grabbing the pending mutation batches\r\n            // before and after.\r\n            var oldBatches;\r\n            return _this.mutationQueue\r\n                .getAllMutationBatches(txn)\r\n                .next(function (promisedOldBatches) {\r\n                oldBatches = promisedOldBatches;\r\n                _this.garbageCollector.removeGarbageSource(_this.mutationQueue);\r\n                _this.mutationQueue = _this.persistence.getMutationQueue(user);\r\n                _this.garbageCollector.addGarbageSource(_this.mutationQueue);\r\n                return _this.startMutationQueue(txn);\r\n            })\r\n                .next(function () {\r\n                // Recreate our LocalDocumentsView using the new\r\n                // MutationQueue.\r\n                _this.localDocuments = new LocalDocumentsView(_this.remoteDocuments, _this.mutationQueue);\r\n                return _this.mutationQueue.getAllMutationBatches(txn);\r\n            })\r\n                .next(function (newBatches) {\r\n                // Union the old/new changed keys.\r\n                var changedKeys = documentKeySet();\r\n                for (var _i = 0, _a = [oldBatches, newBatches]; _i < _a.length; _i++) {\r\n                    var batches = _a[_i];\r\n                    for (var _b = 0, batches_1 = batches; _b < batches_1.length; _b++) {\r\n                        var batch = batches_1[_b];\r\n                        for (var _c = 0, _d = batch.mutations; _c < _d.length; _c++) {\r\n                            var mutation = _d[_c];\r\n                            changedKeys = changedKeys.add(mutation.key);\r\n                        }\r\n                    }\r\n                }\r\n                // Return the set of all (potentially) changed documents as the\r\n                // result of the user change.\r\n                return _this.localDocuments.getDocuments(txn, changedKeys);\r\n            });\r\n        });\r\n    };\r\n    LocalStore.prototype.startQueryCache = function (txn) {\r\n        var _this = this;\r\n        return this.queryCache.start(txn).next(function () {\r\n            var targetId = _this.queryCache.getHighestTargetId();\r\n            _this.targetIdGenerator = TargetIdGenerator.forLocalStore(targetId);\r\n        });\r\n    };\r\n    LocalStore.prototype.startMutationQueue = function (txn) {\r\n        var _this = this;\r\n        return this.mutationQueue\r\n            .start(txn)\r\n            .next(function () {\r\n            // If we have any leftover mutation batch results from a prior run,\r\n            // just drop them.\r\n            // TODO(http://b/33446471): We probably need to repopulate\r\n            // heldBatchResults or similar instead, but that is not\r\n            // straightforward since we're not persisting the write ack versions.\r\n            _this.heldBatchResults = [];\r\n            return _this.mutationQueue.getHighestAcknowledgedBatchId(txn);\r\n        })\r\n            .next(function (highestAck) {\r\n            // TODO(mikelehen): This is the only usage of\r\n            // getAllMutationBatchesThroughBatchId(). Consider removing it in\r\n            // favor of a getAcknowledgedBatches() method.\r\n            if (highestAck !== BATCHID_UNKNOWN) {\r\n                return _this.mutationQueue.getAllMutationBatchesThroughBatchId(txn, highestAck);\r\n            }\r\n            else {\r\n                return PersistencePromise.resolve([]);\r\n            }\r\n        })\r\n            .next(function (ackedBatches) {\r\n            if (ackedBatches.length > 0) {\r\n                return _this.mutationQueue.removeMutationBatches(txn, ackedBatches);\r\n            }\r\n            else {\r\n                return PersistencePromise.resolve();\r\n            }\r\n        });\r\n    };\r\n    /* Accept locally generated Mutations and commit them to storage. */\r\n    LocalStore.prototype.localWrite = function (mutations) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Locally write mutations', function (txn) {\r\n            var batch;\r\n            var localWriteTime = Timestamp.now();\r\n            return _this.mutationQueue\r\n                .addMutationBatch(txn, localWriteTime, mutations)\r\n                .next(function (promisedBatch) {\r\n                batch = promisedBatch;\r\n                // TODO(koss): This is doing an N^2 update by replaying ALL the\r\n                // mutations on each document (instead of just the ones added) in\r\n                // this batch.\r\n                var keys = batch.keys();\r\n                return _this.localDocuments.getDocuments(txn, keys);\r\n            })\r\n                .next(function (changedDocuments) {\r\n                return { batchId: batch.batchId, changes: changedDocuments };\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Acknowledge the given batch.\r\n     *\r\n     * On the happy path when a batch is acknowledged, the local store will\r\n     *\r\n     *  + remove the batch from the mutation queue;\r\n     *  + apply the changes to the remote document cache;\r\n     *  + recalculate the latency compensated view implied by those changes (there\r\n     *    may be mutations in the queue that affect the documents but haven't been\r\n     *    acknowledged yet); and\r\n     *  + give the changed documents back the sync engine\r\n     *\r\n     * @returns The resulting (modified) documents.\r\n     */\r\n    LocalStore.prototype.acknowledgeBatch = function (batchResult) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Acknowledge batch', function (txn) {\r\n            var affected;\r\n            return _this.mutationQueue\r\n                .acknowledgeBatch(txn, batchResult.batch, batchResult.streamToken)\r\n                .next(function () {\r\n                if (_this.shouldHoldBatchResult(batchResult.commitVersion)) {\r\n                    _this.heldBatchResults.push(batchResult);\r\n                    affected = documentKeySet();\r\n                    return PersistencePromise.resolve();\r\n                }\r\n                else {\r\n                    var documentBuffer_1 = new RemoteDocumentChangeBuffer(_this.remoteDocuments);\r\n                    return _this.releaseBatchResults(txn, [batchResult], documentBuffer_1).next(function (promisedAffectedKeys) {\r\n                        affected = promisedAffectedKeys;\r\n                        return documentBuffer_1.apply(txn);\r\n                    });\r\n                }\r\n            })\r\n                .next(function () {\r\n                return _this.mutationQueue.performConsistencyCheck(txn);\r\n            })\r\n                .next(function () {\r\n                return _this.localDocuments.getDocuments(txn, affected);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Remove mutations from the MutationQueue for the specified batch;\r\n     * LocalDocuments will be recalculated.\r\n     *\r\n     * @returns The resulting modified documents.\r\n     */\r\n    LocalStore.prototype.rejectBatch = function (batchId) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Reject batch', function (txn) {\r\n            var toReject;\r\n            var affectedKeys;\r\n            return _this.mutationQueue\r\n                .lookupMutationBatch(txn, batchId)\r\n                .next(function (promisedToReject) {\r\n                assert(promisedToReject != null, 'Attempt to reject nonexistent batch!');\r\n                toReject = promisedToReject;\r\n                return _this.mutationQueue\r\n                    .getHighestAcknowledgedBatchId(txn)\r\n                    .next(function (lastAcked) {\r\n                    assert(batchId > lastAcked, \"Acknowledged batches can't be rejected.\");\r\n                    return toReject;\r\n                });\r\n            })\r\n                .next(function () {\r\n                return _this.removeMutationBatch(txn, toReject);\r\n            })\r\n                .next(function (promisedAffectedKeys) {\r\n                affectedKeys = promisedAffectedKeys;\r\n                return _this.mutationQueue.performConsistencyCheck(txn);\r\n            })\r\n                .next(function () {\r\n                return _this.localDocuments.getDocuments(txn, affectedKeys);\r\n            });\r\n        });\r\n    };\r\n    /** Returns the last recorded stream token for the current user. */\r\n    LocalStore.prototype.getLastStreamToken = function () {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Get last stream token', function (txn) {\r\n            return _this.mutationQueue.getLastStreamToken(txn);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the stream token for the current user without acknowledging any\r\n     * mutation batch. This is usually only useful after a stream handshake or in\r\n     * response to an error that requires clearing the stream token.\r\n     */\r\n    LocalStore.prototype.setLastStreamToken = function (streamToken) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Set last stream token', function (txn) {\r\n            return _this.mutationQueue.setLastStreamToken(txn, streamToken);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the last consistent snapshot processed (used by the RemoteStore to\r\n     * determine whether to buffer incoming snapshots from the backend).\r\n     */\r\n    LocalStore.prototype.getLastRemoteSnapshotVersion = function () {\r\n        return this.queryCache.getLastRemoteSnapshotVersion();\r\n    };\r\n    /**\r\n     * Update the \"ground-state\" (remote) documents. We assume that the remote\r\n     * event reflects any write batches that have been acknowledged or rejected\r\n     * (i.e. we do not re-apply local mutations to updates from this event).\r\n     *\r\n     * LocalDocuments are re-calculated if there are remaining mutations in the\r\n     * queue.\r\n     */\r\n    LocalStore.prototype.applyRemoteEvent = function (remoteEvent) {\r\n        var _this = this;\r\n        var documentBuffer = new RemoteDocumentChangeBuffer(this.remoteDocuments);\r\n        return this.persistence.runTransaction('Apply remote event', function (txn) {\r\n            var promises = [];\r\n            forEachNumber(remoteEvent.targetChanges, function (targetId, change) {\r\n                // Do not ref/unref unassigned targetIds - it may lead to leaks.\r\n                var queryData = _this.targetIds[targetId];\r\n                if (!queryData)\r\n                    return;\r\n                var mapping = change.mapping;\r\n                if (mapping) {\r\n                    // First make sure that all references are deleted\r\n                    if (mapping instanceof ResetMapping) {\r\n                        promises.push(_this.queryCache\r\n                            .removeMatchingKeysForTargetId(txn, targetId)\r\n                            .next(function () {\r\n                            return _this.queryCache.addMatchingKeys(txn, mapping.documents, targetId);\r\n                        }));\r\n                    }\r\n                    else if (mapping instanceof UpdateMapping) {\r\n                        promises.push(_this.queryCache\r\n                            .removeMatchingKeys(txn, mapping.removedDocuments, targetId)\r\n                            .next(function () {\r\n                            return _this.queryCache.addMatchingKeys(txn, mapping.addedDocuments, targetId);\r\n                        }));\r\n                    }\r\n                    else {\r\n                        return fail('Unknown mapping type: ' + JSON.stringify(mapping));\r\n                    }\r\n                }\r\n                // Update the resume token if the change includes one. Don't clear\r\n                // any preexisting value.\r\n                var resumeToken = change.resumeToken;\r\n                if (resumeToken.length > 0) {\r\n                    queryData = queryData.update({\r\n                        resumeToken: resumeToken,\r\n                        snapshotVersion: change.snapshotVersion\r\n                    });\r\n                    _this.targetIds[targetId] = queryData;\r\n                    promises.push(_this.queryCache.updateQueryData(txn, queryData));\r\n                }\r\n            });\r\n            var changedDocKeys = documentKeySet();\r\n            remoteEvent.documentUpdates.forEach(function (key, doc) {\r\n                changedDocKeys = changedDocKeys.add(key);\r\n                promises.push(documentBuffer.getEntry(txn, key).next(function (existingDoc) {\r\n                    // Make sure we don't apply an old document version to the remote\r\n                    // cache, though we make an exception for SnapshotVersion.MIN which\r\n                    // can happen for manufactured events (e.g. in the case of a limbo\r\n                    // document resolution failing).\r\n                    if (existingDoc == null ||\r\n                        doc.version.isEqual(SnapshotVersion.MIN) ||\r\n                        doc.version.compareTo(existingDoc.version) >= 0) {\r\n                        documentBuffer.addEntry(doc);\r\n                    }\r\n                    else {\r\n                        debug(LOG_TAG$4, 'Ignoring outdated watch update for ', key, '. Current version:', existingDoc.version, ' Watch version:', doc.version);\r\n                    }\r\n                    // The document might be garbage because it was unreferenced by\r\n                    // everything. Make sure to mark it as garbage if it is...\r\n                    _this.garbageCollector.addPotentialGarbageKey(key);\r\n                }));\r\n            });\r\n            // HACK: The only reason we allow a null snapshot version is so that we\r\n            // can synthesize remote events when we get permission denied errors while\r\n            // trying to resolve the state of a locally cached document that is in\r\n            // limbo.\r\n            var lastRemoteVersion = _this.queryCache.getLastRemoteSnapshotVersion();\r\n            var remoteVersion = remoteEvent.snapshotVersion;\r\n            if (!remoteVersion.isEqual(SnapshotVersion.MIN)) {\r\n                assert(remoteVersion.compareTo(lastRemoteVersion) >= 0, 'Watch stream reverted to previous snapshot?? ' +\r\n                    remoteVersion +\r\n                    ' < ' +\r\n                    lastRemoteVersion);\r\n                promises.push(_this.queryCache.setLastRemoteSnapshotVersion(txn, remoteVersion));\r\n            }\r\n            var releasedWriteKeys;\r\n            return PersistencePromise.waitFor(promises)\r\n                .next(function () { return _this.releaseHeldBatchResults(txn, documentBuffer); })\r\n                .next(function (promisedReleasedWriteKeys) {\r\n                releasedWriteKeys = promisedReleasedWriteKeys;\r\n                return documentBuffer.apply(txn);\r\n            })\r\n                .next(function () {\r\n                return _this.localDocuments.getDocuments(txn, changedDocKeys.unionWith(releasedWriteKeys));\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Notify local store of the changed views to locally pin documents.\r\n     */\r\n    LocalStore.prototype.notifyLocalViewChanges = function (viewChanges) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Notify local view changes', function (txn) {\r\n            var promises = [];\r\n            var _loop_1 = function (view) {\r\n                promises.push(_this.queryCache\r\n                    .getQueryData(txn, view.query)\r\n                    .next(function (queryData) {\r\n                    assert(queryData !== null, 'Local view changes contain unallocated query.');\r\n                    var targetId = queryData.targetId;\r\n                    _this.localViewReferences.addReferences(view.addedKeys, targetId);\r\n                    _this.localViewReferences.removeReferences(view.removedKeys, targetId);\r\n                }));\r\n            };\r\n            for (var _i = 0, viewChanges_1 = viewChanges; _i < viewChanges_1.length; _i++) {\r\n                var view = viewChanges_1[_i];\r\n                _loop_1(view);\r\n            }\r\n            return PersistencePromise.waitFor(promises);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the mutation batch after the passed in batchId in the mutation queue\r\n     * or null if empty.\r\n     * @param afterBatchId If provided, the batch to search after.\r\n     * @returns The next mutation or null if there wasn't one.\r\n     */\r\n    LocalStore.prototype.nextMutationBatch = function (afterBatchId) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Get next mutation batch', function (txn) {\r\n            if (afterBatchId === undefined) {\r\n                afterBatchId = BATCHID_UNKNOWN;\r\n            }\r\n            return _this.mutationQueue.getNextMutationBatchAfterBatchId(txn, afterBatchId);\r\n        });\r\n    };\r\n    /**\r\n     * Read the current value of a Document with a given key or null if not\r\n     * found - used for testing.\r\n     */\r\n    LocalStore.prototype.readDocument = function (key) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('read document', function (txn) {\r\n            return _this.localDocuments.getDocument(txn, key);\r\n        });\r\n    };\r\n    /**\r\n     * Assigns the given query an internal ID so that its results can be pinned so\r\n     * they don't get GC'd. A query must be allocated in the local store before\r\n     * the store can be used to manage its view.\r\n     */\r\n    LocalStore.prototype.allocateQuery = function (query) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Allocate query', function (txn) {\r\n            var queryData;\r\n            return _this.queryCache\r\n                .getQueryData(txn, query)\r\n                .next(function (cached) {\r\n                if (cached) {\r\n                    // This query has been listened to previously, so reuse the\r\n                    // previous targetID.\r\n                    // TODO(mcg): freshen last accessed date?\r\n                    queryData = cached;\r\n                    return PersistencePromise.resolve();\r\n                }\r\n                else {\r\n                    var targetId = _this.targetIdGenerator.next();\r\n                    queryData = new QueryData(query, targetId, QueryPurpose.Listen);\r\n                    return _this.queryCache.addQueryData(txn, queryData);\r\n                }\r\n            })\r\n                .next(function () {\r\n                assert(!_this.targetIds[queryData.targetId], 'Tried to allocate an already allocated query: ' + query);\r\n                _this.targetIds[queryData.targetId] = queryData;\r\n                return queryData;\r\n            });\r\n        });\r\n    };\r\n    /** Unpin all the documents associated with the given query. */\r\n    LocalStore.prototype.releaseQuery = function (query) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Release query', function (txn) {\r\n            return _this.queryCache\r\n                .getQueryData(txn, query)\r\n                .next(function (queryData) {\r\n                assert(queryData != null, 'Tried to release nonexistent query: ' + query);\r\n                _this.localViewReferences.removeReferencesForId(queryData.targetId);\r\n                delete _this.targetIds[queryData.targetId];\r\n                if (_this.garbageCollector.isEager) {\r\n                    return _this.queryCache.removeQueryData(txn, queryData);\r\n                }\r\n                else {\r\n                    return PersistencePromise.resolve();\r\n                }\r\n            })\r\n                .next(function () {\r\n                // If this was the last watch target, then we won't get any more\r\n                // watch snapshots, so we should release any held batch results.\r\n                if (isEmpty(_this.targetIds)) {\r\n                    var documentBuffer_2 = new RemoteDocumentChangeBuffer(_this.remoteDocuments);\r\n                    return _this.releaseHeldBatchResults(txn, documentBuffer_2).next(function () {\r\n                        documentBuffer_2.apply(txn);\r\n                    });\r\n                }\r\n                else {\r\n                    return PersistencePromise.resolve();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Runs the specified query against all the documents in the local store and\r\n     * returns the results.\r\n     */\r\n    LocalStore.prototype.executeQuery = function (query) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Execute query', function (txn) {\r\n            return _this.localDocuments.getDocumentsMatchingQuery(txn, query);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the keys of the documents that are associated with the given\r\n     * target id in the remote table.\r\n     */\r\n    LocalStore.prototype.remoteDocumentKeys = function (targetId) {\r\n        var _this = this;\r\n        return this.persistence.runTransaction('Remote document keys', function (txn) {\r\n            return _this.queryCache.getMatchingKeysForTargetId(txn, targetId);\r\n        });\r\n    };\r\n    /**\r\n     * Collect garbage if necessary.\r\n     * Should be called periodically by Sync Engine to recover resources. The\r\n     * implementation must guarantee that GC won't happen in other places than\r\n     * this method call.\r\n     */\r\n    LocalStore.prototype.collectGarbage = function () {\r\n        var _this = this;\r\n        // Call collectGarbage regardless of whether isGCEnabled so the referenceSet\r\n        // doesn't continue to accumulate the garbage keys.\r\n        return this.persistence.runTransaction('Garbage collection', function (txn) {\r\n            return _this.garbageCollector.collectGarbage(txn).next(function (garbage) {\r\n                var promises = [];\r\n                garbage.forEach(function (key) {\r\n                    promises.push(_this.remoteDocuments.removeEntry(txn, key));\r\n                });\r\n                return PersistencePromise.waitFor(promises);\r\n            });\r\n        });\r\n    };\r\n    LocalStore.prototype.releaseHeldBatchResults = function (txn, documentBuffer) {\r\n        var toRelease = [];\r\n        for (var _i = 0, _a = this.heldBatchResults; _i < _a.length; _i++) {\r\n            var batchResult = _a[_i];\r\n            if (!this.isRemoteUpToVersion(batchResult.commitVersion)) {\r\n                break;\r\n            }\r\n            toRelease.push(batchResult);\r\n        }\r\n        if (toRelease.length === 0) {\r\n            return PersistencePromise.resolve(documentKeySet());\r\n        }\r\n        else {\r\n            this.heldBatchResults.splice(0, toRelease.length);\r\n            return this.releaseBatchResults(txn, toRelease, documentBuffer);\r\n        }\r\n    };\r\n    LocalStore.prototype.isRemoteUpToVersion = function (version) {\r\n        // If there are no watch targets, then we won't get remote snapshots, and\r\n        // we are always \"up-to-date.\"\r\n        var lastRemoteVersion = this.queryCache.getLastRemoteSnapshotVersion();\r\n        return (version.compareTo(lastRemoteVersion) <= 0 ||\r\n            isEmpty(this.targetIds));\r\n    };\r\n    LocalStore.prototype.shouldHoldBatchResult = function (version) {\r\n        // Check if watcher isn't up to date or prior results are already held.\r\n        return (!this.isRemoteUpToVersion(version) || this.heldBatchResults.length > 0);\r\n    };\r\n    LocalStore.prototype.releaseBatchResults = function (txn, batchResults, documentBuffer) {\r\n        var _this = this;\r\n        var promiseChain = PersistencePromise.resolve();\r\n        var _loop_2 = function (batchResult) {\r\n            promiseChain = promiseChain.next(function () {\r\n                return _this.applyWriteToRemoteDocuments(txn, batchResult, documentBuffer);\r\n            });\r\n        };\r\n        for (var _i = 0, batchResults_1 = batchResults; _i < batchResults_1.length; _i++) {\r\n            var batchResult = batchResults_1[_i];\r\n            _loop_2(batchResult);\r\n        }\r\n        return promiseChain.next(function () {\r\n            return _this.removeMutationBatches(txn, batchResults.map(function (result) { return result.batch; }));\r\n        });\r\n    };\r\n    LocalStore.prototype.removeMutationBatch = function (txn, batch) {\r\n        return this.removeMutationBatches(txn, [batch]);\r\n    };\r\n    /** Removes all the mutation batches named in the given array. */\r\n    LocalStore.prototype.removeMutationBatches = function (txn, batches) {\r\n        var affectedDocs = documentKeySet();\r\n        for (var _i = 0, batches_2 = batches; _i < batches_2.length; _i++) {\r\n            var batch = batches_2[_i];\r\n            for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\r\n                var mutation = _b[_a];\r\n                var key = mutation.key;\r\n                affectedDocs = affectedDocs.add(key);\r\n            }\r\n        }\r\n        return this.mutationQueue\r\n            .removeMutationBatches(txn, batches)\r\n            .next(function () { return affectedDocs; });\r\n    };\r\n    LocalStore.prototype.applyWriteToRemoteDocuments = function (txn, batchResult, documentBuffer) {\r\n        var batch = batchResult.batch;\r\n        var docKeys = batch.keys();\r\n        var promiseChain = PersistencePromise.resolve();\r\n        docKeys.forEach(function (docKey) {\r\n            promiseChain = promiseChain\r\n                .next(function () {\r\n                return documentBuffer.getEntry(txn, docKey);\r\n            })\r\n                .next(function (remoteDoc) {\r\n                var doc = remoteDoc;\r\n                var ackVersion = batchResult.docVersions.get(docKey);\r\n                assert(ackVersion !== null, 'ackVersions should contain every doc in the write.');\r\n                if (!doc || doc.version.compareTo(ackVersion) < 0) {\r\n                    doc = batch.applyToRemoteDocument(docKey, doc, batchResult);\r\n                    if (!doc) {\r\n                        assert(!remoteDoc, 'Mutation batch ' +\r\n                            batch +\r\n                            ' applied to document ' +\r\n                            remoteDoc +\r\n                            ' resulted in null');\r\n                    }\r\n                    else {\r\n                        documentBuffer.addEntry(doc);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return promiseChain;\r\n    };\r\n    return LocalStore;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MemoryMutationQueue = /** @class */ (function () {\r\n    function MemoryMutationQueue() {\r\n        /**\r\n         * The set of all mutations that have been sent but not yet been applied to\r\n         * the backend.\r\n         */\r\n        this.mutationQueue = [];\r\n        /** Next value to use when assigning sequential IDs to each mutation batch. */\r\n        this.nextBatchId = 1;\r\n        /** The highest acknowledged mutation in the queue. */\r\n        this.highestAcknowledgedBatchId = BATCHID_UNKNOWN;\r\n        /** The last received stream token from the server, used to acknowledge which\r\n         * responses the client has processed. Stream tokens are opaque checkpoint\r\n         * markers whose only real value is their inclusion in the next request.\r\n         */\r\n        this.lastStreamToken = emptyByteString();\r\n        /** The garbage collector to notify about potential garbage keys. */\r\n        this.garbageCollector = null;\r\n        /** An ordered mapping between documents and the mutations batch IDs. */\r\n        this.batchesByDocumentKey = new SortedSet(DocReference.compareByKey);\r\n    }\r\n    MemoryMutationQueue.prototype.start = function (transaction) {\r\n        // NOTE: The queue may be shutdown / started multiple times, since we\r\n        // maintain the queue for the duration of the app session in case a user\r\n        // logs out / back in. To behave like the LevelDB-backed MutationQueue (and\r\n        // accommodate tests that expect as much), we reset nextBatchId and\r\n        // highestAcknowledgedBatchId if the queue is empty.\r\n        if (this.mutationQueue.length === 0) {\r\n            this.nextBatchId = 1;\r\n            this.highestAcknowledgedBatchId = BATCHID_UNKNOWN;\r\n        }\r\n        assert(this.highestAcknowledgedBatchId < this.nextBatchId, 'highestAcknowledgedBatchId must be less than the nextBatchId');\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryMutationQueue.prototype.checkEmpty = function (transaction) {\r\n        return PersistencePromise.resolve(this.mutationQueue.length === 0);\r\n    };\r\n    MemoryMutationQueue.prototype.getNextBatchId = function (transaction) {\r\n        return PersistencePromise.resolve(this.nextBatchId);\r\n    };\r\n    MemoryMutationQueue.prototype.getHighestAcknowledgedBatchId = function (transaction) {\r\n        return PersistencePromise.resolve(this.highestAcknowledgedBatchId);\r\n    };\r\n    MemoryMutationQueue.prototype.acknowledgeBatch = function (transaction, batch, streamToken) {\r\n        var batchId = batch.batchId;\r\n        assert(batchId > this.highestAcknowledgedBatchId, 'Mutation batchIDs must be acknowledged in order');\r\n        var batchIndex = this.indexOfExistingBatchId(batchId, 'acknowledged');\r\n        // Verify that the batch in the queue is the one to be acknowledged.\r\n        var check = this.mutationQueue[batchIndex];\r\n        assert(batchId === check.batchId, 'Queue ordering failure: expected batch ' +\r\n            batchId +\r\n            ', got batch ' +\r\n            check.batchId);\r\n        assert(!check.isTombstone(), \"Can't acknowledge a previously removed batch\");\r\n        this.highestAcknowledgedBatchId = batchId;\r\n        this.lastStreamToken = streamToken;\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryMutationQueue.prototype.getLastStreamToken = function (transaction) {\r\n        return PersistencePromise.resolve(this.lastStreamToken);\r\n    };\r\n    MemoryMutationQueue.prototype.setLastStreamToken = function (transaction, streamToken) {\r\n        this.lastStreamToken = streamToken;\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryMutationQueue.prototype.addMutationBatch = function (transaction, localWriteTime, mutations) {\r\n        assert(mutations.length !== 0, 'Mutation batches should not be empty');\r\n        var batchId = this.nextBatchId;\r\n        this.nextBatchId++;\r\n        if (this.mutationQueue.length > 0) {\r\n            var prior = this.mutationQueue[this.mutationQueue.length - 1];\r\n            assert(prior.batchId < batchId, 'Mutation batchIDs must be monotonically increasing order');\r\n        }\r\n        var batch = new MutationBatch(batchId, localWriteTime, mutations);\r\n        this.mutationQueue.push(batch);\r\n        // Track references by document key.\r\n        for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {\r\n            var mutation = mutations_1[_i];\r\n            this.batchesByDocumentKey = this.batchesByDocumentKey.add(new DocReference(mutation.key, batchId));\r\n        }\r\n        return PersistencePromise.resolve(batch);\r\n    };\r\n    MemoryMutationQueue.prototype.lookupMutationBatch = function (transaction, batchId) {\r\n        return PersistencePromise.resolve(this.findMutationBatch(batchId));\r\n    };\r\n    MemoryMutationQueue.prototype.getNextMutationBatchAfterBatchId = function (transaction, batchId) {\r\n        var size = this.mutationQueue.length;\r\n        // All batches with batchId <= this.highestAcknowledgedBatchId have been\r\n        // acknowledged so the first unacknowledged batch after batchID will have a\r\n        // batchID larger than both of these values.\r\n        var nextBatchId = Math.max(batchId, this.highestAcknowledgedBatchId) + 1;\r\n        // The requested batchId may still be out of range so normalize it to the\r\n        // start of the queue.\r\n        var rawIndex = this.indexOfBatchId(nextBatchId);\r\n        var index = rawIndex < 0 ? 0 : rawIndex;\r\n        // Finally return the first non-tombstone batch.\r\n        for (; index < size; index++) {\r\n            var batch = this.mutationQueue[index];\r\n            if (!batch.isTombstone()) {\r\n                return PersistencePromise.resolve(batch);\r\n            }\r\n        }\r\n        return PersistencePromise.resolve(null);\r\n    };\r\n    MemoryMutationQueue.prototype.getAllMutationBatches = function (transaction) {\r\n        return PersistencePromise.resolve(this.getAllLiveMutationBatchesBeforeIndex(this.mutationQueue.length));\r\n    };\r\n    MemoryMutationQueue.prototype.getAllMutationBatchesThroughBatchId = function (transaction, batchId) {\r\n        var count = this.mutationQueue.length;\r\n        var endIndex = this.indexOfBatchId(batchId);\r\n        if (endIndex < 0) {\r\n            endIndex = 0;\r\n        }\r\n        else if (endIndex >= count) {\r\n            endIndex = count;\r\n        }\r\n        else {\r\n            // The endIndex is in the queue so increment to pull everything in the\r\n            // queue including it.\r\n            endIndex++;\r\n        }\r\n        return PersistencePromise.resolve(this.getAllLiveMutationBatchesBeforeIndex(endIndex));\r\n    };\r\n    MemoryMutationQueue.prototype.getAllMutationBatchesAffectingDocumentKey = function (transaction, documentKey) {\r\n        var _this = this;\r\n        var start = new DocReference(documentKey, 0);\r\n        var end = new DocReference(documentKey, Number.POSITIVE_INFINITY);\r\n        var result = [];\r\n        this.batchesByDocumentKey.forEachInRange([start, end], function (ref) {\r\n            assert(documentKey.isEqual(ref.key), \"Should only iterate over a single key's batches\");\r\n            var batch = _this.findMutationBatch(ref.targetOrBatchId);\r\n            assert(batch !== null, 'Batches in the index must exist in the main table');\r\n            result.push(batch);\r\n        });\r\n        return PersistencePromise.resolve(result);\r\n    };\r\n    MemoryMutationQueue.prototype.getAllMutationBatchesAffectingQuery = function (transaction, query) {\r\n        var _this = this;\r\n        // Use the query path as a prefix for testing if a document matches the\r\n        // query.\r\n        var prefix = query.path;\r\n        var immediateChildrenPathLength = prefix.length + 1;\r\n        // Construct a document reference for actually scanning the index. Unlike\r\n        // the prefix the document key in this reference must have an even number of\r\n        // segments. The empty segment can be used a suffix of the query path\r\n        // because it precedes all other segments in an ordered traversal.\r\n        var startPath = prefix;\r\n        if (!DocumentKey.isDocumentKey(startPath)) {\r\n            startPath = startPath.child('');\r\n        }\r\n        var start = new DocReference(new DocumentKey(startPath), 0);\r\n        // Find unique batchIDs referenced by all documents potentially matching the\r\n        // query.\r\n        var uniqueBatchIDs = new SortedSet(primitiveComparator);\r\n        this.batchesByDocumentKey.forEachWhile(function (ref) {\r\n            var rowKeyPath = ref.key.path;\r\n            if (!prefix.isPrefixOf(rowKeyPath)) {\r\n                return false;\r\n            }\r\n            else {\r\n                // Rows with document keys more than one segment longer than the query\r\n                // path can't be matches. For example, a query on 'rooms' can't match\r\n                // the document /rooms/abc/messages/xyx.\r\n                // TODO(mcg): we'll need a different scanner when we implement\r\n                // ancestor queries.\r\n                if (rowKeyPath.length === immediateChildrenPathLength) {\r\n                    uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\r\n                }\r\n                return true;\r\n            }\r\n        }, start);\r\n        // Construct an array of matching batches, sorted by batchID to ensure that\r\n        // multiple mutations affecting the same document key are applied in order.\r\n        var result = [];\r\n        uniqueBatchIDs.forEach(function (batchId) {\r\n            var batch = _this.findMutationBatch(batchId);\r\n            if (batch !== null) {\r\n                result.push(batch);\r\n            }\r\n        });\r\n        return PersistencePromise.resolve(result);\r\n    };\r\n    MemoryMutationQueue.prototype.removeMutationBatches = function (transaction, batches) {\r\n        var batchCount = batches.length;\r\n        assert(batchCount > 0, 'Should not remove mutations when none exist.');\r\n        var firstBatchId = batches[0].batchId;\r\n        var queueCount = this.mutationQueue.length;\r\n        // Find the position of the first batch for removal. This need not be the\r\n        // first entry in the queue.\r\n        var startIndex = this.indexOfExistingBatchId(firstBatchId, 'removed');\r\n        assert(this.mutationQueue[startIndex].batchId === firstBatchId, 'Removed batches must exist in the queue');\r\n        // Check that removed batches are contiguous (while excluding tombstones).\r\n        var batchIndex = 1;\r\n        var queueIndex = startIndex + 1;\r\n        while (batchIndex < batchCount && queueIndex < queueCount) {\r\n            var batch = this.mutationQueue[queueIndex];\r\n            if (batch.isTombstone()) {\r\n                queueIndex++;\r\n                continue;\r\n            }\r\n            assert(batch.batchId === batches[batchIndex].batchId, 'Removed batches must be contiguous in the queue');\r\n            batchIndex++;\r\n            queueIndex++;\r\n        }\r\n        // Only actually remove batches if removing at the front of the queue.\r\n        // Previously rejected batches may have left tombstones in the queue, so\r\n        // expand the removal range to include any tombstones.\r\n        if (startIndex === 0) {\r\n            for (; queueIndex < queueCount; queueIndex++) {\r\n                var batch = this.mutationQueue[queueIndex];\r\n                if (!batch.isTombstone()) {\r\n                    break;\r\n                }\r\n            }\r\n            var length_1 = queueIndex - startIndex;\r\n            this.mutationQueue.splice(startIndex, length_1);\r\n        }\r\n        else {\r\n            // Mark the tombstones\r\n            for (var i = startIndex; i < queueIndex; i++) {\r\n                this.mutationQueue[i] = this.mutationQueue[i].toTombstone();\r\n            }\r\n        }\r\n        var references = this.batchesByDocumentKey;\r\n        for (var _i = 0, batches_1 = batches; _i < batches_1.length; _i++) {\r\n            var batch = batches_1[_i];\r\n            var batchId = batch.batchId;\r\n            for (var _a = 0, _b = batch.mutations; _a < _b.length; _a++) {\r\n                var mutation = _b[_a];\r\n                var key = mutation.key;\r\n                if (this.garbageCollector !== null) {\r\n                    this.garbageCollector.addPotentialGarbageKey(key);\r\n                }\r\n                var ref = new DocReference(key, batchId);\r\n                references = references.delete(ref);\r\n            }\r\n        }\r\n        this.batchesByDocumentKey = references;\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryMutationQueue.prototype.setGarbageCollector = function (garbageCollector) {\r\n        this.garbageCollector = garbageCollector;\r\n    };\r\n    MemoryMutationQueue.prototype.containsKey = function (txn, key) {\r\n        var ref = new DocReference(key, 0);\r\n        var firstRef = this.batchesByDocumentKey.firstAfterOrEqual(ref);\r\n        return PersistencePromise.resolve(key.isEqual(firstRef && firstRef.key));\r\n    };\r\n    MemoryMutationQueue.prototype.performConsistencyCheck = function (txn) {\r\n        if (this.mutationQueue.length === 0) {\r\n            assert(this.batchesByDocumentKey.isEmpty(), 'Document leak -- detected dangling mutation references when queue is empty.');\r\n        }\r\n        return PersistencePromise.resolve();\r\n    };\r\n    /**\r\n     * A private helper that collects all the mutations batches in the queue up to\r\n     * but not including the given endIndex. All tombstones in the queue are\r\n     * excluded.\r\n     */\r\n    MemoryMutationQueue.prototype.getAllLiveMutationBatchesBeforeIndex = function (endIndex) {\r\n        var result = [];\r\n        for (var i = 0; i < endIndex; i++) {\r\n            var batch = this.mutationQueue[i];\r\n            if (!batch.isTombstone()) {\r\n                result.push(batch);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Finds the index of the given batchId in the mutation queue and asserts that\r\n     * the resulting index is within the bounds of the queue.\r\n     *\r\n     * @param batchId The batchId to search for\r\n     * @param action A description of what the caller is doing, phrased in passive\r\n     * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\r\n     */\r\n    MemoryMutationQueue.prototype.indexOfExistingBatchId = function (batchId, action) {\r\n        var index = this.indexOfBatchId(batchId);\r\n        assert(index >= 0 && index < this.mutationQueue.length, 'Batches must exist to be ' + action);\r\n        return index;\r\n    };\r\n    /**\r\n     * Finds the index of the given batchId in the mutation queue. This operation\r\n     * is O(1).\r\n     *\r\n     * @return The computed index of the batch with the given batchId, based on\r\n     * the state of the queue. Note this index can be negative if the requested\r\n     * batchId has already been remvoed from the queue or past the end of the\r\n     * queue if the batchId is larger than the last added batch.\r\n     */\r\n    MemoryMutationQueue.prototype.indexOfBatchId = function (batchId) {\r\n        if (this.mutationQueue.length === 0) {\r\n            // As an index this is past the end of the queue\r\n            return 0;\r\n        }\r\n        // Examine the front of the queue to figure out the difference between the\r\n        // batchId and indexes in the array. Note that since the queue is ordered\r\n        // by batchId, if the first batch has a larger batchId then the requested\r\n        // batchId doesn't exist in the queue.\r\n        var firstBatchId = this.mutationQueue[0].batchId;\r\n        return batchId - firstBatchId;\r\n    };\r\n    /**\r\n     * A version of lookupMutationBatch that doesn't return a promise, this makes\r\n     * other functions that uses this code easier to read and more efficent.\r\n     */\r\n    MemoryMutationQueue.prototype.findMutationBatch = function (batchId) {\r\n        var index = this.indexOfBatchId(batchId);\r\n        if (index < 0 || index >= this.mutationQueue.length) {\r\n            return null;\r\n        }\r\n        var batch = this.mutationQueue[index];\r\n        assert(batch.batchId === batchId, 'If found batch must match');\r\n        return batch.isTombstone() ? null : batch;\r\n    };\r\n    return MemoryMutationQueue;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MemoryQueryCache = /** @class */ (function () {\r\n    function MemoryQueryCache() {\r\n        /**\r\n         * Maps a query to the data about that query\r\n         */\r\n        this.queries = new ObjectMap(function (q) { return q.canonicalId(); });\r\n        /** The last received snapshot version. */\r\n        this.lastRemoteSnapshotVersion = SnapshotVersion.MIN;\r\n        /** The highest numbered target ID encountered. */\r\n        this.highestTargetId = 0;\r\n        /**\r\n         * A ordered bidirectional mapping between documents and the remote target\r\n         * IDs.\r\n         */\r\n        this.references = new ReferenceSet();\r\n        this.targetCount = 0;\r\n    }\r\n    MemoryQueryCache.prototype.start = function (transaction) {\r\n        // Nothing to do.\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryQueryCache.prototype.getLastRemoteSnapshotVersion = function () {\r\n        return this.lastRemoteSnapshotVersion;\r\n    };\r\n    MemoryQueryCache.prototype.getHighestTargetId = function () {\r\n        return this.highestTargetId;\r\n    };\r\n    MemoryQueryCache.prototype.setLastRemoteSnapshotVersion = function (transaction, snapshotVersion) {\r\n        this.lastRemoteSnapshotVersion = snapshotVersion;\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryQueryCache.prototype.saveQueryData = function (queryData) {\r\n        this.queries.set(queryData.query, queryData);\r\n        var targetId = queryData.targetId;\r\n        if (targetId > this.highestTargetId) {\r\n            this.highestTargetId = targetId;\r\n        }\r\n        // TODO(GC): track sequence number\r\n    };\r\n    MemoryQueryCache.prototype.addQueryData = function (transaction, queryData) {\r\n        assert(!this.queries.has(queryData.query), 'Adding a query that already exists');\r\n        this.saveQueryData(queryData);\r\n        this.targetCount += 1;\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryQueryCache.prototype.updateQueryData = function (transaction, queryData) {\r\n        assert(this.queries.has(queryData.query), 'Updating a non-existent query');\r\n        this.saveQueryData(queryData);\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryQueryCache.prototype.removeQueryData = function (transaction, queryData) {\r\n        assert(this.targetCount > 0, 'Removing a target from an empty cache');\r\n        assert(this.queries.has(queryData.query), 'Removing a non-existent target from the cache');\r\n        this.queries.delete(queryData.query);\r\n        this.references.removeReferencesForId(queryData.targetId);\r\n        this.targetCount -= 1;\r\n        return PersistencePromise.resolve();\r\n    };\r\n    Object.defineProperty(MemoryQueryCache.prototype, \"count\", {\r\n        get: function () {\r\n            return this.targetCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryQueryCache.prototype.getQueryData = function (transaction, query) {\r\n        var queryData = this.queries.get(query) || null;\r\n        return PersistencePromise.resolve(queryData);\r\n    };\r\n    MemoryQueryCache.prototype.addMatchingKeys = function (txn, keys, targetId) {\r\n        this.references.addReferences(keys, targetId);\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryQueryCache.prototype.removeMatchingKeys = function (txn, keys, targetId) {\r\n        this.references.removeReferences(keys, targetId);\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryQueryCache.prototype.removeMatchingKeysForTargetId = function (txn, targetId) {\r\n        this.references.removeReferencesForId(targetId);\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryQueryCache.prototype.getMatchingKeysForTargetId = function (txn, targetId) {\r\n        var matchingKeys = this.references.referencesForId(targetId);\r\n        return PersistencePromise.resolve(matchingKeys);\r\n    };\r\n    MemoryQueryCache.prototype.setGarbageCollector = function (gc) {\r\n        this.references.setGarbageCollector(gc);\r\n    };\r\n    MemoryQueryCache.prototype.containsKey = function (txn, key) {\r\n        return this.references.containsKey(txn, key);\r\n    };\r\n    return MemoryQueryCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MemoryRemoteDocumentCache = /** @class */ (function () {\r\n    function MemoryRemoteDocumentCache() {\r\n        this.docs = maybeDocumentMap();\r\n    }\r\n    MemoryRemoteDocumentCache.prototype.addEntry = function (transaction, maybeDocument) {\r\n        this.docs = this.docs.insert(maybeDocument.key, maybeDocument);\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryRemoteDocumentCache.prototype.removeEntry = function (transaction, documentKey) {\r\n        this.docs = this.docs.remove(documentKey);\r\n        return PersistencePromise.resolve();\r\n    };\r\n    MemoryRemoteDocumentCache.prototype.getEntry = function (transaction, documentKey) {\r\n        return PersistencePromise.resolve(this.docs.get(documentKey));\r\n    };\r\n    MemoryRemoteDocumentCache.prototype.getDocumentsMatchingQuery = function (transaction, query) {\r\n        var results = documentMap();\r\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\r\n        // the documents we need to match the query against.\r\n        var prefix = new DocumentKey(query.path.child(''));\r\n        var iterator = this.docs.getIteratorFrom(prefix);\r\n        while (iterator.hasNext()) {\r\n            var _a = iterator.getNext(), key = _a.key, maybeDoc = _a.value;\r\n            if (!query.path.isPrefixOf(key.path)) {\r\n                break;\r\n            }\r\n            if (maybeDoc instanceof Document && query.matches(maybeDoc)) {\r\n                results = results.insert(maybeDoc.key, maybeDoc);\r\n            }\r\n        }\r\n        return PersistencePromise.resolve(results);\r\n    };\r\n    return MemoryRemoteDocumentCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG$5 = 'MemoryPersistence';\r\n/**\r\n * A memory-backed instance of Persistence. Data is stored only in RAM and\r\n * not persisted across sessions.\r\n */\r\nvar MemoryPersistence = /** @class */ (function () {\r\n    function MemoryPersistence() {\r\n        /**\r\n         * Note that these are retained here to make it easier to write tests\r\n         * affecting both the in-memory and IndexedDB-backed persistence layers. Tests\r\n         * can create a new LocalStore wrapping this Persistence instance and this\r\n         * will make the in-memory persistence layer behave as if it were actually\r\n         * persisting values.\r\n         */\r\n        this.mutationQueues = {};\r\n        this.remoteDocumentCache = new MemoryRemoteDocumentCache();\r\n        this.queryCache = new MemoryQueryCache();\r\n        this.started = false;\r\n    }\r\n    MemoryPersistence.prototype.start = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                // No durable state to read on startup.\r\n                assert(!this.started, 'MemoryPersistence double-started!');\r\n                this.started = true;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    MemoryPersistence.prototype.shutdown = function (deleteData) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                // No durable state to ensure is closed on shutdown.\r\n                assert(this.started, 'MemoryPersistence shutdown without start!');\r\n                this.started = false;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    MemoryPersistence.prototype.getMutationQueue = function (user) {\r\n        var queue = this.mutationQueues[user.toKey()];\r\n        if (!queue) {\r\n            queue = new MemoryMutationQueue();\r\n            this.mutationQueues[user.toKey()] = queue;\r\n        }\r\n        return queue;\r\n    };\r\n    MemoryPersistence.prototype.getQueryCache = function () {\r\n        return this.queryCache;\r\n    };\r\n    MemoryPersistence.prototype.getRemoteDocumentCache = function () {\r\n        return this.remoteDocumentCache;\r\n    };\r\n    MemoryPersistence.prototype.runTransaction = function (action, operation) {\r\n        debug(LOG_TAG$5, 'Starting transaction:', action);\r\n        return operation(new MemoryPersistenceTransaction()).toPromise();\r\n    };\r\n    return MemoryPersistence;\r\n}());\r\n/** Dummy class since memory persistence doesn't actually use transactions. */\r\nvar MemoryPersistenceTransaction = /** @class */ (function () {\r\n    function MemoryPersistenceTransaction() {\r\n    }\r\n    return MemoryPersistenceTransaction;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A garbage collector implementation that does absolutely nothing. It ignores\r\n * all addGarbageSource and addPotentialGarbageKey messages and and never\r\n * produces any garbage.\r\n */\r\nvar NoOpGarbageCollector = /** @class */ (function () {\r\n    function NoOpGarbageCollector() {\r\n        this.isEager = false;\r\n    }\r\n    NoOpGarbageCollector.prototype.addGarbageSource = function (garbageSource) {\r\n        // Not tracking garbage so don't track sources.\r\n    };\r\n    NoOpGarbageCollector.prototype.removeGarbageSource = function (garbageSource) {\r\n        // Not tracking garbage so don't track sources.\r\n    };\r\n    NoOpGarbageCollector.prototype.addPotentialGarbageKey = function (key) {\r\n        // Not tracking garbage so ignore.\r\n    };\r\n    NoOpGarbageCollector.prototype.collectGarbage = function (txn) {\r\n        return PersistencePromise.resolve(documentKeySet());\r\n    };\r\n    return NoOpGarbageCollector;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wellknown \"timer\" IDs used when scheduling delayed operations on the\r\n * AsyncQueue. These IDs can then be used from tests to check for the presence\r\n * of operations or to run them early.\r\n *\r\n * The string values are used when encoding these timer IDs in JSON spec tests.\r\n */\r\nvar TimerId;\r\n(function (TimerId) {\r\n    /** All can be used with runDelayedOperationsEarly() to run all timers. */\r\n    TimerId[\"All\"] = \"all\";\r\n    /**\r\n     * The following 4 timers are used in persistent_stream.ts for the listen and\r\n     * write streams. The \"Idle\" timer is used to close the stream due to\r\n     * inactivity. The \"ConnectionBackoff\" timer is used to restart a stream once\r\n     * the appropriate backoff delay has elapsed.\r\n     */\r\n    TimerId[\"ListenStreamIdle\"] = \"listen_stream_idle\";\r\n    TimerId[\"ListenStreamConnectionBackoff\"] = \"listen_stream_connection_backoff\";\r\n    TimerId[\"WriteStreamIdle\"] = \"write_stream_idle\";\r\n    TimerId[\"WriteStreamConnectionBackoff\"] = \"write_stream_connection_backoff\";\r\n    /**\r\n     * A timer used in online_state_tracker.ts to transition from\r\n     * OnlineState.Unknown to Offline after a set timeout, rather than waiting\r\n     * indefinitely for success or failure.\r\n     */\r\n    TimerId[\"OnlineStateTimeout\"] = \"online_state_timeout\";\r\n})(TimerId || (TimerId = {}));\r\n/**\r\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\r\n *\r\n * It is created via DelayedOperation.createAndSchedule().\r\n *\r\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\r\n */\r\nvar DelayedOperation = /** @class */ (function () {\r\n    function DelayedOperation(asyncQueue, timerId, targetTimeMs, op, removalCallback) {\r\n        this.asyncQueue = asyncQueue;\r\n        this.timerId = timerId;\r\n        this.targetTimeMs = targetTimeMs;\r\n        this.op = op;\r\n        this.removalCallback = removalCallback;\r\n        this.deferred = new Deferred$1();\r\n        this.then = this.deferred.promise.then.bind(this.deferred.promise);\r\n        this.catch = this.deferred.promise.catch.bind(this.deferred.promise);\r\n        // It's normal for the deferred promise to be canceled (due to cancellation)\r\n        // and so we attach a dummy catch callback to avoid\r\n        // 'UnhandledPromiseRejectionWarning' log spam.\r\n        this.deferred.promise.catch(function (err) { });\r\n    }\r\n    /**\r\n     * Creates and returns a DelayedOperation that has been scheduled to be\r\n     * executed on the provided asyncQueue after the provided delayMs.\r\n     *\r\n     * @param asyncQueue The queue to schedule the operation on.\r\n     * @param id A Timer ID identifying the type of operation this is.\r\n     * @param delayMs The delay (ms) before the operation should be scheduled.\r\n     * @param op The operation to run.\r\n     * @param removalCallback A callback to be called synchronously once the\r\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\r\n     *   from its delayedOperations list.\r\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\r\n     *   the DelayedOperation class public.\r\n     */\r\n    DelayedOperation.createAndSchedule = function (asyncQueue, timerId, delayMs, op, removalCallback) {\r\n        var targetTime = Date.now() + delayMs;\r\n        var delayedOp = new DelayedOperation(asyncQueue, timerId, targetTime, op, removalCallback);\r\n        delayedOp.start(delayMs);\r\n        return delayedOp;\r\n    };\r\n    /**\r\n     * Starts the timer. This is called immediately after construction by\r\n     * createAndSchedule().\r\n     */\r\n    DelayedOperation.prototype.start = function (delayMs) {\r\n        var _this = this;\r\n        this.timerHandle = setTimeout(function () { return _this.handleDelayElapsed(); }, delayMs);\r\n    };\r\n    /**\r\n     * Queues the operation to run immediately (if it hasn't already been run or\r\n     * canceled).\r\n     */\r\n    DelayedOperation.prototype.skipDelay = function () {\r\n        return this.handleDelayElapsed();\r\n    };\r\n    /**\r\n     * Cancels the operation if it hasn't already been executed or canceled. The\r\n     * promise will be rejected.\r\n     *\r\n     * As long as the operation has not yet been run, calling cancel() provides a\r\n     * guarantee that the operation will not be run.\r\n     */\r\n    DelayedOperation.prototype.cancel = function (reason) {\r\n        if (this.timerHandle !== null) {\r\n            this.clearTimeout();\r\n            this.deferred.reject(new FirestoreError(Code.CANCELLED, 'Operation cancelled' + (reason ? ': ' + reason : '')));\r\n        }\r\n    };\r\n    DelayedOperation.prototype.handleDelayElapsed = function () {\r\n        var _this = this;\r\n        this.asyncQueue.enqueue(function () {\r\n            if (_this.timerHandle !== null) {\r\n                _this.clearTimeout();\r\n                return _this.op().then(function (result) {\r\n                    return _this.deferred.resolve(result);\r\n                });\r\n            }\r\n            else {\r\n                return Promise.resolve();\r\n            }\r\n        });\r\n    };\r\n    DelayedOperation.prototype.clearTimeout = function () {\r\n        if (this.timerHandle !== null) {\r\n            this.removalCallback(this);\r\n            clearTimeout(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n    };\r\n    return DelayedOperation;\r\n}());\r\nvar AsyncQueue = /** @class */ (function () {\r\n    function AsyncQueue() {\r\n        // The last promise in the queue.\r\n        this.tail = Promise.resolve();\r\n        // Operations scheduled to be queued in the future. Operations are\r\n        // automatically removed after they are run or canceled.\r\n        this.delayedOperations = [];\r\n        // Flag set while there's an outstanding AsyncQueue operation, used for\r\n        // assertion sanity-checks.\r\n        this.operationInProgress = false;\r\n    }\r\n    /**\r\n     * Adds a new operation to the queue. Returns a promise that will be resolved\r\n     * when the promise returned by the new operation is (with its value).\r\n     */\r\n    AsyncQueue.prototype.enqueue = function (op) {\r\n        var _this = this;\r\n        this.verifyNotFailed();\r\n        var newTail = this.tail.then(function () {\r\n            _this.operationInProgress = true;\r\n            return op()\r\n                .catch(function (error$$1) {\r\n                _this.failure = error$$1;\r\n                _this.operationInProgress = false;\r\n                var message = error$$1.stack || error$$1.message || '';\r\n                error('INTERNAL UNHANDLED ERROR: ', message);\r\n                // Escape the promise chain and throw the error globally so that\r\n                // e.g. any global crash reporting library detects and reports it.\r\n                // (but not for simulated errors in our tests since this breaks mocha)\r\n                if (message.indexOf('Firestore Test Simulated Error') < 0) {\r\n                    setTimeout(function () {\r\n                        throw error$$1;\r\n                    }, 0);\r\n                }\r\n                // Re-throw the error so that this.tail becomes a rejected Promise and\r\n                // all further attempts to chain (via .then) will just short-circuit\r\n                // and return the rejected Promise.\r\n                throw error$$1;\r\n            })\r\n                .then(function (result) {\r\n                _this.operationInProgress = false;\r\n                return result;\r\n            });\r\n        });\r\n        this.tail = newTail;\r\n        return newTail;\r\n    };\r\n    /**\r\n     * Schedules an operation to be queued on the AsyncQueue once the specified\r\n     * `delayMs` has elapsed. The returned CancelablePromise can be used to cancel\r\n     * the operation prior to its running.\r\n     */\r\n    AsyncQueue.prototype.enqueueAfterDelay = function (timerId, delayMs, op) {\r\n        var _this = this;\r\n        this.verifyNotFailed();\r\n        // While not necessarily harmful, we currently don't expect to have multiple\r\n        // ops with the same timer id in the queue, so defensively reject them.\r\n        assert(!this.containsDelayedOperation(timerId), \"Attempted to schedule multiple operations with timer id \" + timerId + \".\");\r\n        var delayedOp = DelayedOperation.createAndSchedule(this, timerId, delayMs, op, function (op) { return _this.removeDelayedOperation(op); });\r\n        this.delayedOperations.push(delayedOp);\r\n        return delayedOp;\r\n    };\r\n    AsyncQueue.prototype.verifyNotFailed = function () {\r\n        if (this.failure) {\r\n            fail('AsyncQueue is already failed: ' +\r\n                (this.failure.stack || this.failure.message));\r\n        }\r\n    };\r\n    /**\r\n     * Verifies there's an operation currently in-progress on the AsyncQueue.\r\n     * Unfortunately we can't verify that the running code is in the promise chain\r\n     * of that operation, so this isn't a foolproof check, but it should be enough\r\n     * to catch some bugs.\r\n     */\r\n    AsyncQueue.prototype.verifyOperationInProgress = function () {\r\n        assert(this.operationInProgress, 'verifyOpInProgress() called when no op in progress on this queue.');\r\n    };\r\n    /**\r\n     * Waits until all currently queued tasks are finished executing. Delayed\r\n     * operations are not run.\r\n     */\r\n    AsyncQueue.prototype.drain = function () {\r\n        return this.enqueue(function () { return Promise.resolve(); });\r\n    };\r\n    /**\r\n     * For Tests: Determine if a delayed operation with a particular TimerId\r\n     * exists.\r\n     */\r\n    AsyncQueue.prototype.containsDelayedOperation = function (timerId) {\r\n        return this.delayedOperations.findIndex(function (op) { return op.timerId === timerId; }) >= 0;\r\n    };\r\n    /**\r\n     * For Tests: Runs some or all delayed operations early.\r\n     *\r\n     * @param lastTimerId Delayed operations up to and including this TimerId will\r\n     *  be drained. Throws if no such operation exists. Pass TimerId.All to run\r\n     *  all delayed operations.\r\n     * @returns a Promise that resolves once all operations have been run.\r\n     */\r\n    AsyncQueue.prototype.runDelayedOperationsEarly = function (lastTimerId) {\r\n        var _this = this;\r\n        // Note that draining may generate more delayed ops, so we do that first.\r\n        return this.drain().then(function () {\r\n            assert(lastTimerId === TimerId.All ||\r\n                _this.containsDelayedOperation(lastTimerId), \"Attempted to drain to missing operation \" + lastTimerId);\r\n            // Run ops in the same order they'd run if they ran naturally.\r\n            _this.delayedOperations.sort(function (a, b) { return a.targetTimeMs - b.targetTimeMs; });\r\n            for (var _i = 0, _a = _this.delayedOperations; _i < _a.length; _i++) {\r\n                var op = _a[_i];\r\n                op.skipDelay();\r\n                if (lastTimerId !== TimerId.All && op.timerId === lastTimerId) {\r\n                    break;\r\n                }\r\n            }\r\n            return _this.drain();\r\n        });\r\n    };\r\n    /** Called once a DelayedOperation is run or canceled. */\r\n    AsyncQueue.prototype.removeDelayedOperation = function (op) {\r\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\r\n        var index = this.delayedOperations.indexOf(op);\r\n        assert(index >= 0, 'Delayed operation not found.');\r\n        this.delayedOperations.splice(index, 1);\r\n    };\r\n    return AsyncQueue;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG$6 = 'ExponentialBackoff';\r\n/**\r\n * A helper for running delayed tasks following an exponential backoff curve\r\n * between attempts.\r\n *\r\n * Each delay is made up of a \"base\" delay which follows the exponential\r\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\r\n * base delay. This prevents clients from accidentally synchronizing their\r\n * delays causing spikes of load to the backend.\r\n */\r\nvar ExponentialBackoff = /** @class */ (function () {\r\n    function ExponentialBackoff(\r\n    /**\r\n     * The AsyncQueue to run backoff operations on.\r\n     */\r\n    queue, \r\n    /**\r\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\r\n     */\r\n    timerId, \r\n    /**\r\n     * The initial delay (used as the base delay on the first retry attempt).\r\n     * Note that jitter will still be applied, so the actual delay could be as\r\n     * little as 0.5*initialDelayMs.\r\n     */\r\n    initialDelayMs, \r\n    /**\r\n     * The multiplier to use to determine the extended base delay after each\r\n     * attempt.\r\n     */\r\n    backoffFactor, \r\n    /**\r\n     * The maximum base delay after which no further backoff is performed.\r\n     * Note that jitter will still be applied, so the actual delay could be as\r\n     * much as 1.5*maxDelayMs.\r\n     */\r\n    maxDelayMs) {\r\n        this.queue = queue;\r\n        this.timerId = timerId;\r\n        this.initialDelayMs = initialDelayMs;\r\n        this.backoffFactor = backoffFactor;\r\n        this.maxDelayMs = maxDelayMs;\r\n        this.timerPromise = null;\r\n        this.reset();\r\n    }\r\n    /**\r\n     * Resets the backoff delay.\r\n     *\r\n     * The very next backoffAndWait() will have no delay. If it is called again\r\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\r\n     * subsequent ones will increase according to the backoffFactor.\r\n     */\r\n    ExponentialBackoff.prototype.reset = function () {\r\n        this.currentBaseMs = 0;\r\n    };\r\n    /**\r\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\r\n     * RESOURCE_EXHAUSTED error).\r\n     */\r\n    ExponentialBackoff.prototype.resetToMax = function () {\r\n        this.currentBaseMs = this.maxDelayMs;\r\n    };\r\n    /**\r\n     * Returns a promise that resolves after currentDelayMs, and increases the\r\n     * delay for any subsequent attempts. If there was a pending backoff operation\r\n     * already, it will be canceled.\r\n     */\r\n    ExponentialBackoff.prototype.backoffAndRun = function (op) {\r\n        // Cancel any pending backoff operation.\r\n        this.cancel();\r\n        // First schedule using the current base (which may be 0 and should be\r\n        // honored as such).\r\n        var delayWithJitterMs = this.currentBaseMs + this.jitterDelayMs();\r\n        if (this.currentBaseMs > 0) {\r\n            debug(LOG_TAG$6, \"Backing off for \" + delayWithJitterMs + \" ms \" +\r\n                (\"(base delay: \" + this.currentBaseMs + \" ms)\"));\r\n        }\r\n        this.timerPromise = this.queue.enqueueAfterDelay(this.timerId, delayWithJitterMs, op);\r\n        // Apply backoff factor to determine next delay and ensure it is within\r\n        // bounds.\r\n        this.currentBaseMs *= this.backoffFactor;\r\n        if (this.currentBaseMs < this.initialDelayMs) {\r\n            this.currentBaseMs = this.initialDelayMs;\r\n        }\r\n        if (this.currentBaseMs > this.maxDelayMs) {\r\n            this.currentBaseMs = this.maxDelayMs;\r\n        }\r\n    };\r\n    ExponentialBackoff.prototype.cancel = function () {\r\n        if (this.timerPromise !== null) {\r\n            this.timerPromise.cancel();\r\n            this.timerPromise = null;\r\n        }\r\n    };\r\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\r\n    ExponentialBackoff.prototype.jitterDelayMs = function () {\r\n        return (Math.random() - 0.5) * this.currentBaseMs;\r\n    };\r\n    return ExponentialBackoff;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG$7 = 'PersistentStream';\r\nvar PersistentStreamState;\r\n(function (PersistentStreamState) {\r\n    /**\r\n     * The streaming RPC is not running and there's no error condition.\r\n     * Calling `start` will start the stream immediately without backoff.\r\n     * While in this state isStarted will return false.\r\n     */\r\n    PersistentStreamState[PersistentStreamState[\"Initial\"] = 0] = \"Initial\";\r\n    /**\r\n     * The stream is starting, and is waiting for an auth token to attach to\r\n     * the initial request. While in this state, isStarted will return\r\n     * true but isOpen will return false.\r\n     */\r\n    PersistentStreamState[PersistentStreamState[\"Auth\"] = 1] = \"Auth\";\r\n    /**\r\n     * The streaming RPC is up and running. Requests and responses can flow\r\n     * freely. Both isStarted and isOpen will return true.\r\n     */\r\n    PersistentStreamState[PersistentStreamState[\"Open\"] = 2] = \"Open\";\r\n    /**\r\n     * The stream encountered an error. The next start attempt will back off.\r\n     * While in this state isStarted() will return false.\r\n     *\r\n     */\r\n    PersistentStreamState[PersistentStreamState[\"Error\"] = 3] = \"Error\";\r\n    /**\r\n     * An in-between state after an error where the stream is waiting before\r\n     * re-starting. After\r\n     * waiting is complete, the stream will try to open. While in this\r\n     * state isStarted() will return YES but isOpen will return false.\r\n     */\r\n    PersistentStreamState[PersistentStreamState[\"Backoff\"] = 4] = \"Backoff\";\r\n    /**\r\n     * The stream has been explicitly stopped; no further events will be emitted.\r\n     */\r\n    PersistentStreamState[PersistentStreamState[\"Stopped\"] = 5] = \"Stopped\";\r\n})(PersistentStreamState || (PersistentStreamState = {}));\r\n/**\r\n * Initial backoff time in milliseconds after an error.\r\n * Set to 1s according to https://cloud.google.com/apis/design/errors.\r\n */\r\nvar BACKOFF_INITIAL_DELAY_MS = 1000;\r\n/** Maximum backoff time in milliseconds */\r\nvar BACKOFF_MAX_DELAY_MS = 60 * 1000;\r\nvar BACKOFF_FACTOR = 1.5;\r\n/** The time a stream stays open after it is marked idle. */\r\nvar IDLE_TIMEOUT_MS = 60 * 1000;\r\n/**\r\n * A PersistentStream is an abstract base class that represents a streaming RPC\r\n * to the Firestore backend. It's built on top of the connections own support\r\n * for streaming RPCs, and adds several critical features for our clients:\r\n *\r\n *   - Exponential backoff on failure\r\n *   - Authentication via CredentialsProvider\r\n *   - Dispatching all callbacks into the shared worker queue\r\n *\r\n * Subclasses of PersistentStream implement serialization of models to and\r\n * from the JSON representation of the protocol buffers for a specific\r\n * streaming RPC.\r\n *\r\n * ## Starting and Stopping\r\n *\r\n * Streaming RPCs are stateful and need to be `start`ed before messages can\r\n * be sent and received. The PersistentStream will call the onOpen function\r\n * of the listener once the stream is ready to accept requests.\r\n *\r\n * Should a `start` fail, PersistentStream will call the registered\r\n * onClose with a FirestoreError indicating what went wrong.\r\n *\r\n * A PersistentStream can be started and stopped repeatedly.\r\n *\r\n * Generic types:\r\n *  SendType: The type of the outgoing message of the underlying\r\n *    connection stream\r\n *  ReceiveType: The type of the incoming message of the underlying\r\n *    connection stream\r\n *  ListenerType: The type of the listener that will be used for callbacks\r\n */\r\nvar PersistentStream = /** @class */ (function () {\r\n    function PersistentStream(queue, connectionTimerId, idleTimerId, connection, credentialsProvider) {\r\n        this.queue = queue;\r\n        this.idleTimerId = idleTimerId;\r\n        this.connection = connection;\r\n        this.credentialsProvider = credentialsProvider;\r\n        this.inactivityTimerPromise = null;\r\n        this.stream = null;\r\n        this.listener = null;\r\n        this.backoff = new ExponentialBackoff(queue, connectionTimerId, BACKOFF_INITIAL_DELAY_MS, BACKOFF_FACTOR, BACKOFF_MAX_DELAY_MS);\r\n        this.state = PersistentStreamState.Initial;\r\n    }\r\n    /**\r\n     * Returns true if `start` has been called and no error has occurred. True\r\n     * indicates the stream is open or in the process of opening (which\r\n     * encompasses respecting backoff, getting auth tokens, and starting the\r\n     * actual RPC). Use `isOpen` to determine if the stream is open and ready for\r\n     * outbound requests.\r\n     */\r\n    PersistentStream.prototype.isStarted = function () {\r\n        return (this.state === PersistentStreamState.Backoff ||\r\n            this.state === PersistentStreamState.Auth ||\r\n            this.state === PersistentStreamState.Open);\r\n    };\r\n    /**\r\n     * Returns true if the underlying RPC is open (the openHandler has been\r\n     * called) and the stream is ready for outbound requests.\r\n     */\r\n    PersistentStream.prototype.isOpen = function () {\r\n        return this.state === PersistentStreamState.Open;\r\n    };\r\n    /**\r\n     * Starts the RPC. Only allowed if isStarted returns false. The stream is\r\n     * not immediately ready for use: onOpen will be invoked when the RPC is ready\r\n     * for outbound requests, at which point isOpen will return true.\r\n     *\r\n     *  When start returns, isStarted will return true.\r\n     */\r\n    PersistentStream.prototype.start = function (listener) {\r\n        if (this.state === PersistentStreamState.Error) {\r\n            this.performBackoff(listener);\r\n            return;\r\n        }\r\n        assert(this.state === PersistentStreamState.Initial, 'Already started');\r\n        this.listener = listener;\r\n        this.auth();\r\n    };\r\n    /**\r\n     * Stops the RPC. This call is idempotent and allowed regardless of the\r\n     * current isStarted state.\r\n     *\r\n     * When stop returns, isStarted and isOpen will both return false.\r\n     */\r\n    PersistentStream.prototype.stop = function () {\r\n        if (this.isStarted()) {\r\n            this.close(PersistentStreamState.Stopped);\r\n        }\r\n    };\r\n    /**\r\n     * After an error the stream will usually back off on the next attempt to\r\n     * start it. If the error warrants an immediate restart of the stream, the\r\n     * sender can use this to indicate that the receiver should not back off.\r\n     *\r\n     * Each error will call the onClose function. That function can decide to\r\n     * inhibit backoff if required.\r\n     */\r\n    PersistentStream.prototype.inhibitBackoff = function () {\r\n        assert(!this.isStarted(), 'Can only inhibit backoff in a stopped state');\r\n        this.state = PersistentStreamState.Initial;\r\n        this.backoff.reset();\r\n    };\r\n    /**\r\n     * Marks this stream as idle. If no further actions are performed on the\r\n     * stream for one minute, the stream will automatically close itself and\r\n     * notify the stream's onClose() handler with Status.OK. The stream will then\r\n     * be in a !isStarted() state, requiring the caller to start the stream again\r\n     * before further use.\r\n     *\r\n     * Only streams that are in state 'Open' can be marked idle, as all other\r\n     * states imply pending network operations.\r\n     */\r\n    PersistentStream.prototype.markIdle = function () {\r\n        var _this = this;\r\n        // Starts the idle time if we are in state 'Open' and are not yet already\r\n        // running a timer (in which case the previous idle timeout still applies).\r\n        if (this.isOpen() && this.inactivityTimerPromise === null) {\r\n            this.inactivityTimerPromise = this.queue.enqueueAfterDelay(this.idleTimerId, IDLE_TIMEOUT_MS, function () { return _this.handleIdleCloseTimer(); });\r\n        }\r\n    };\r\n    /** Sends a message to the underlying stream. */\r\n    PersistentStream.prototype.sendRequest = function (msg) {\r\n        this.cancelIdleCheck();\r\n        this.stream.send(msg);\r\n    };\r\n    /** Called by the idle timer when the stream should close due to inactivity. */\r\n    PersistentStream.prototype.handleIdleCloseTimer = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (this.isOpen()) {\r\n                    // When timing out an idle stream there's no reason to force the stream into backoff when\r\n                    // it restarts so set the stream state to Initial instead of Error.\r\n                    return [2 /*return*/, this.close(PersistentStreamState.Initial)];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /** Marks the stream as active again. */\r\n    PersistentStream.prototype.cancelIdleCheck = function () {\r\n        if (this.inactivityTimerPromise) {\r\n            this.inactivityTimerPromise.cancel();\r\n            this.inactivityTimerPromise = null;\r\n        }\r\n    };\r\n    /**\r\n     * Closes the stream and cleans up as necessary:\r\n     *\r\n     * * closes the underlying GRPC stream;\r\n     * * calls the onClose handler with the given 'error';\r\n     * * sets internal stream state to 'finalState';\r\n     * * adjusts the backoff timer based on the error\r\n     *\r\n     * A new stream can be opened by calling `start` unless `finalState` is set to\r\n     * `PersistentStreamState.Stopped`.\r\n     *\r\n     * @param finalState the intended state of the stream after closing.\r\n     * @param error the error the connection was closed with.\r\n     */\r\n    PersistentStream.prototype.close = function (finalState, error$$1) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var listener;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                assert(finalState === PersistentStreamState.Error || isNullOrUndefined(error$$1), \"Can't provide an error when not in an error state.\");\r\n                // The stream will be closed so we don't need our idle close timer anymore.\r\n                this.cancelIdleCheck();\r\n                // Ensure we don't leave a pending backoff operation queued (in case close()\r\n                // was called while we were waiting to reconnect).\r\n                this.backoff.cancel();\r\n                if (finalState !== PersistentStreamState.Error) {\r\n                    // If this is an intentional close ensure we don't delay our next connection attempt.\r\n                    this.backoff.reset();\r\n                }\r\n                else if (error$$1 && error$$1.code === Code.RESOURCE_EXHAUSTED) {\r\n                    // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\r\n                    error(error$$1.toString());\r\n                    error('Using maximum backoff delay to prevent overloading the backend.');\r\n                    this.backoff.resetToMax();\r\n                }\r\n                // Clean up the underlying stream because we are no longer interested in events.\r\n                if (this.stream !== null) {\r\n                    this.tearDown();\r\n                    this.stream.close();\r\n                    this.stream = null;\r\n                }\r\n                // This state must be assigned before calling onClose() to allow the callback to\r\n                // inhibit backoff or otherwise manipulate the state in its non-started state.\r\n                this.state = finalState;\r\n                listener = this.listener;\r\n                // Clear the listener to avoid bleeding of events from the underlying streams.\r\n                this.listener = null;\r\n                // If the caller explicitly requested a stream stop, don't notify them of a closing stream (it\r\n                // could trigger undesirable recovery logic, etc.).\r\n                if (finalState !== PersistentStreamState.Stopped) {\r\n                    return [2 /*return*/, listener.onClose(error$$1)];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Can be overridden to perform additional cleanup before the stream is closed.\r\n     * Calling super.tearDown() is not required.\r\n     */\r\n    PersistentStream.prototype.tearDown = function () { };\r\n    PersistentStream.prototype.auth = function () {\r\n        var _this = this;\r\n        assert(this.state === PersistentStreamState.Initial, 'Must be in initial state to auth');\r\n        this.state = PersistentStreamState.Auth;\r\n        this.credentialsProvider.getToken(/*forceRefresh=*/ false).then(function (token) {\r\n            // Normally we'd have to schedule the callback on the AsyncQueue.\r\n            // However, the following calls are safe to be called outside the\r\n            // AsyncQueue since they don't chain asynchronous calls\r\n            _this.startStream(token);\r\n        }, function (error$$1) {\r\n            _this.queue.enqueue(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                var rpcError;\r\n                return tslib_1.__generator(this, function (_a) {\r\n                    if (this.state !== PersistentStreamState.Stopped) {\r\n                        rpcError = new FirestoreError(Code.UNKNOWN, 'Fetching auth token failed: ' + error$$1.message);\r\n                        return [2 /*return*/, this.handleStreamClose(rpcError)];\r\n                    }\r\n                    return [2 /*return*/];\r\n                });\r\n            }); });\r\n        });\r\n    };\r\n    PersistentStream.prototype.startStream = function (token) {\r\n        var _this = this;\r\n        if (this.state === PersistentStreamState.Stopped) {\r\n            // Stream can be stopped while waiting for authorization.\r\n            return;\r\n        }\r\n        assert(this.state === PersistentStreamState.Auth, 'Trying to start stream in a non-auth state');\r\n        // Helper function to dispatch to AsyncQueue and make sure that any\r\n        // close will seem instantaneous and events are prevented from being\r\n        // raised after the close call\r\n        var dispatchIfStillActive = function (stream, fn) {\r\n            _this.queue.enqueue(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                return tslib_1.__generator(this, function (_a) {\r\n                    // Only raise events if the stream instance has not changed\r\n                    if (this.stream === stream) {\r\n                        return [2 /*return*/, fn()];\r\n                    }\r\n                    return [2 /*return*/];\r\n                });\r\n            }); });\r\n        };\r\n        // Only start stream if listener has not changed\r\n        if (this.listener !== null) {\r\n            var currentStream_1 = this.startRpc(token);\r\n            this.stream = currentStream_1;\r\n            this.stream.onOpen(function () {\r\n                dispatchIfStillActive(currentStream_1, function () {\r\n                    assert(_this.state === PersistentStreamState.Auth, 'Expected stream to be in state auth, but was ' + _this.state);\r\n                    _this.state = PersistentStreamState.Open;\r\n                    return _this.listener.onOpen();\r\n                });\r\n            });\r\n            this.stream.onClose(function (error$$1) {\r\n                dispatchIfStillActive(currentStream_1, function () {\r\n                    return _this.handleStreamClose(error$$1);\r\n                });\r\n            });\r\n            this.stream.onMessage(function (msg) {\r\n                dispatchIfStillActive(currentStream_1, function () {\r\n                    return _this.onMessage(msg);\r\n                });\r\n            });\r\n        }\r\n    };\r\n    PersistentStream.prototype.performBackoff = function (listener) {\r\n        var _this = this;\r\n        assert(this.state === PersistentStreamState.Error, 'Should only perform backoff in an error case');\r\n        this.state = PersistentStreamState.Backoff;\r\n        this.backoff.backoffAndRun(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (this.state === PersistentStreamState.Stopped) {\r\n                    // We should have canceled the backoff timer when the stream was\r\n                    // closed, but just in case we make this a no-op.\r\n                    return [2 /*return*/];\r\n                }\r\n                this.state = PersistentStreamState.Initial;\r\n                this.start(listener);\r\n                assert(this.isStarted(), 'PersistentStream should have started');\r\n                return [2 /*return*/];\r\n            });\r\n        }); });\r\n    };\r\n    PersistentStream.prototype.handleStreamClose = function (error$$1) {\r\n        assert(this.isStarted(), \"Can't handle server close on non-started stream\");\r\n        debug(LOG_TAG$7, \"close with error: \" + error$$1);\r\n        this.stream = null;\r\n        // In theory the stream could close cleanly, however, in our current model\r\n        // we never expect this to happen because if we stop a stream ourselves,\r\n        // this callback will never be called. To prevent cases where we retry\r\n        // without a backoff accidentally, we set the stream to error in all cases.\r\n        return this.close(PersistentStreamState.Error, error$$1);\r\n    };\r\n    return PersistentStream;\r\n}());\r\n/**\r\n * A PersistentStream that implements the Listen RPC.\r\n *\r\n * Once the Listen stream has called the openHandler, any number of listen and\r\n * unlisten calls calls can be sent to control what changes will be sent from\r\n * the server for ListenResponses.\r\n */\r\nvar PersistentListenStream = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentListenStream, _super);\r\n    function PersistentListenStream(queue, connection, credentials, serializer) {\r\n        var _this = _super.call(this, queue, TimerId.ListenStreamConnectionBackoff, TimerId.ListenStreamIdle, connection, credentials) || this;\r\n        _this.serializer = serializer;\r\n        return _this;\r\n    }\r\n    PersistentListenStream.prototype.startRpc = function (token) {\r\n        return this.connection.openStream('Listen', token);\r\n    };\r\n    PersistentListenStream.prototype.onMessage = function (watchChangeProto) {\r\n        // A successful response means the stream is healthy\r\n        this.backoff.reset();\r\n        var watchChange = this.serializer.fromWatchChange(watchChangeProto);\r\n        var snapshot = this.serializer.versionFromListenResponse(watchChangeProto);\r\n        return this.listener.onWatchChange(watchChange, snapshot);\r\n    };\r\n    /**\r\n     * Registers interest in the results of the given query. If the query\r\n     * includes a resumeToken it will be included in the request. Results that\r\n     * affect the query will be streamed back as WatchChange messages that\r\n     * reference the targetId.\r\n     */\r\n    PersistentListenStream.prototype.watch = function (queryData) {\r\n        var request = {};\r\n        request.database = this.serializer.encodedDatabaseId;\r\n        request.addTarget = this.serializer.toTarget(queryData);\r\n        var labels = this.serializer.toListenRequestLabels(queryData);\r\n        if (labels) {\r\n            request.labels = labels;\r\n        }\r\n        this.sendRequest(request);\r\n    };\r\n    /**\r\n     * Unregisters interest in the results of the query associated with the\r\n     * given targetId.\r\n     */\r\n    PersistentListenStream.prototype.unwatch = function (targetId) {\r\n        var request = {};\r\n        request.database = this.serializer.encodedDatabaseId;\r\n        request.removeTarget = targetId;\r\n        this.sendRequest(request);\r\n    };\r\n    return PersistentListenStream;\r\n}(PersistentStream));\r\n/**\r\n * A Stream that implements the Write RPC.\r\n *\r\n * The Write RPC requires the caller to maintain special streamToken\r\n * state in between calls, to help the server understand which responses the\r\n * client has processed by the time the next request is made. Every response\r\n * will contain a streamToken; this value must be passed to the next\r\n * request.\r\n *\r\n * After calling start() on this stream, the next request must be a handshake,\r\n * containing whatever streamToken is on hand. Once a response to this\r\n * request is received, all pending mutations may be submitted. When\r\n * submitting multiple batches of mutations at the same time, it's\r\n * okay to use the same streamToken for the calls to writeMutations.\r\n *\r\n * TODO(b/33271235): Use proto types\r\n */\r\nvar PersistentWriteStream = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentWriteStream, _super);\r\n    function PersistentWriteStream(queue, connection, credentials, serializer) {\r\n        var _this = _super.call(this, queue, TimerId.WriteStreamConnectionBackoff, TimerId.WriteStreamIdle, connection, credentials) || this;\r\n        _this.serializer = serializer;\r\n        _this.handshakeComplete_ = false;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PersistentWriteStream.prototype, \"handshakeComplete\", {\r\n        /**\r\n         * Tracks whether or not a handshake has been successfully exchanged and\r\n         * the stream is ready to accept mutations.\r\n         */\r\n        get: function () {\r\n            return this.handshakeComplete_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // Override of PersistentStream.start\r\n    PersistentWriteStream.prototype.start = function (listener) {\r\n        this.handshakeComplete_ = false;\r\n        _super.prototype.start.call(this, listener);\r\n    };\r\n    PersistentWriteStream.prototype.tearDown = function () {\r\n        if (this.handshakeComplete_) {\r\n            this.writeMutations([]);\r\n        }\r\n    };\r\n    PersistentWriteStream.prototype.startRpc = function (token) {\r\n        return this.connection.openStream('Write', token);\r\n    };\r\n    PersistentWriteStream.prototype.onMessage = function (responseProto) {\r\n        // Always capture the last stream token.\r\n        assert(!!responseProto.streamToken, 'Got a write response without a stream token');\r\n        this.lastStreamToken = responseProto.streamToken;\r\n        if (!this.handshakeComplete_) {\r\n            // The first response is always the handshake response\r\n            assert(!responseProto.writeResults || responseProto.writeResults.length === 0, 'Got mutation results for handshake');\r\n            this.handshakeComplete_ = true;\r\n            return this.listener.onHandshakeComplete();\r\n        }\r\n        else {\r\n            // A successful first write response means the stream is healthy,\r\n            // Note, that we could consider a successful handshake healthy, however,\r\n            // the write itself might be causing an error we want to back off from.\r\n            this.backoff.reset();\r\n            var results = this.serializer.fromWriteResults(responseProto.writeResults);\r\n            var commitVersion = this.serializer.fromVersion(responseProto.commitTime);\r\n            return this.listener.onMutationResult(commitVersion, results);\r\n        }\r\n    };\r\n    /**\r\n     * Sends an initial streamToken to the server, performing the handshake\r\n     * required to make the StreamingWrite RPC work. Subsequent\r\n     * calls should wait until onHandshakeComplete was called.\r\n     */\r\n    PersistentWriteStream.prototype.writeHandshake = function () {\r\n        assert(this.isOpen(), 'Writing handshake requires an opened stream');\r\n        assert(!this.handshakeComplete_, 'Handshake already completed');\r\n        // TODO(dimond): Support stream resumption. We intentionally do not set the\r\n        // stream token on the handshake, ignoring any stream token we might have.\r\n        var request = {};\r\n        request.database = this.serializer.encodedDatabaseId;\r\n        this.sendRequest(request);\r\n    };\r\n    /** Sends a group of mutations to the Firestore backend to apply. */\r\n    PersistentWriteStream.prototype.writeMutations = function (mutations) {\r\n        var _this = this;\r\n        assert(this.isOpen(), 'Writing mutations requires an opened stream');\r\n        assert(this.handshakeComplete_, 'Handshake must be complete before writing mutations');\r\n        assert(this.lastStreamToken.length > 0, 'Trying to write mutation without a token');\r\n        var request = {\r\n            // Protos are typed with string, but we support UInt8Array on Node\r\n            // tslint:disable-next-line:no-any\r\n            streamToken: this.lastStreamToken,\r\n            writes: mutations.map(function (mutation) { return _this.serializer.toMutation(mutation); })\r\n        };\r\n        this.sendRequest(request);\r\n    };\r\n    return PersistentWriteStream;\r\n}(PersistentStream));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Datastore is a wrapper around the external Google Cloud Datastore grpc API,\r\n * which provides an interface that is more convenient for the rest of the\r\n * client SDK architecture to consume.\r\n */\r\nvar Datastore = /** @class */ (function () {\r\n    function Datastore(queue, connection, credentials, serializer) {\r\n        this.queue = queue;\r\n        this.connection = connection;\r\n        this.credentials = credentials;\r\n        this.serializer = serializer;\r\n    }\r\n    Datastore.prototype.newPersistentWriteStream = function () {\r\n        return new PersistentWriteStream(this.queue, this.connection, this.credentials, this.serializer);\r\n    };\r\n    Datastore.prototype.newPersistentWatchStream = function () {\r\n        return new PersistentListenStream(this.queue, this.connection, this.credentials, this.serializer);\r\n    };\r\n    Datastore.prototype.commit = function (mutations) {\r\n        var _this = this;\r\n        var params = {\r\n            database: this.serializer.encodedDatabaseId,\r\n            writes: mutations.map(function (m) { return _this.serializer.toMutation(m); })\r\n        };\r\n        return this.invokeRPC('Commit', params).then(function (response) {\r\n            return _this.serializer.fromWriteResults(response.writeResults);\r\n        });\r\n    };\r\n    Datastore.prototype.lookup = function (keys) {\r\n        var _this = this;\r\n        var params = {\r\n            database: this.serializer.encodedDatabaseId,\r\n            documents: keys.map(function (k) { return _this.serializer.toName(k); })\r\n        };\r\n        return this.invokeStreamingRPC('BatchGetDocuments', params).then(function (response) {\r\n            var docs = maybeDocumentMap();\r\n            response.forEach(function (proto) {\r\n                var doc = _this.serializer.fromMaybeDocument(proto);\r\n                docs = docs.insert(doc.key, doc);\r\n            });\r\n            var result = [];\r\n            keys.forEach(function (key) {\r\n                var doc = docs.get(key);\r\n                assert(!!doc, 'Missing entity in write response for ' + key);\r\n                result.push(doc);\r\n            });\r\n            return result;\r\n        });\r\n    };\r\n    /** Gets an auth token and invokes the provided RPC. */\r\n    Datastore.prototype.invokeRPC = function (rpcName, request) {\r\n        var _this = this;\r\n        // TODO(mikelehen): Retry (with backoff) on token failures?\r\n        return this.credentials.getToken(/*forceRefresh=*/ false).then(function (token) {\r\n            return _this.connection.invokeRPC(rpcName, request, token);\r\n        });\r\n    };\r\n    /** Gets an auth token and invokes the provided RPC with streamed results. */\r\n    Datastore.prototype.invokeStreamingRPC = function (rpcName, request) {\r\n        var _this = this;\r\n        // TODO(mikelehen): Retry (with backoff) on token failures?\r\n        return this.credentials.getToken(/*forceRefresh=*/ false).then(function (token) {\r\n            return _this.connection.invokeStreamingRPC(rpcName, request, token);\r\n        });\r\n    };\r\n    return Datastore;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Internal transaction object responsible for accumulating the mutations to\r\n * perform and the base versions for any documents read.\r\n */\r\nvar Transaction = /** @class */ (function () {\r\n    function Transaction(datastore) {\r\n        this.datastore = datastore;\r\n        // The version of each document that was read during this transaction.\r\n        this.readVersions = documentVersionMap();\r\n        this.mutations = [];\r\n        this.committed = false;\r\n    }\r\n    Transaction.prototype.recordVersion = function (doc) {\r\n        var docVersion = doc.version;\r\n        if (doc instanceof NoDocument) {\r\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\r\n            docVersion = SnapshotVersion.forDeletedDoc();\r\n        }\r\n        var existingVersion = this.readVersions.get(doc.key);\r\n        if (existingVersion !== null) {\r\n            if (!docVersion.isEqual(existingVersion)) {\r\n                // This transaction will fail no matter what.\r\n                throw new FirestoreError(Code.ABORTED, 'Document version changed between two reads.');\r\n            }\r\n        }\r\n        else {\r\n            this.readVersions = this.readVersions.insert(doc.key, docVersion);\r\n        }\r\n    };\r\n    Transaction.prototype.lookup = function (keys) {\r\n        var _this = this;\r\n        if (this.committed) {\r\n            return Promise.reject('Transaction has already completed.');\r\n        }\r\n        if (this.mutations.length > 0) {\r\n            return Promise.reject('Transactions lookups are invalid after writes.');\r\n        }\r\n        return this.datastore.lookup(keys).then(function (docs) {\r\n            docs.forEach(function (doc) { return _this.recordVersion(doc); });\r\n            return docs;\r\n        });\r\n    };\r\n    Transaction.prototype.write = function (mutations) {\r\n        if (this.committed) {\r\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'Transaction has already completed.');\r\n        }\r\n        this.mutations = this.mutations.concat(mutations);\r\n    };\r\n    /**\r\n     * Returns the version of this document when it was read in this transaction,\r\n     * as a precondition, or no precondition if it was not read.\r\n     */\r\n    Transaction.prototype.precondition = function (key) {\r\n        var version = this.readVersions.get(key);\r\n        if (version) {\r\n            return Precondition.updateTime(version);\r\n        }\r\n        else {\r\n            return Precondition.NONE;\r\n        }\r\n    };\r\n    /**\r\n     * Returns the precondition for a document if the operation is an update.\r\n     */\r\n    Transaction.prototype.preconditionForUpdate = function (key) {\r\n        var version = this.readVersions.get(key);\r\n        if (version && version.isEqual(SnapshotVersion.forDeletedDoc())) {\r\n            // The document doesn't exist, so fail the transaction.\r\n            throw new FirestoreError(Code.FAILED_PRECONDITION, \"Can't update a document that doesn't exist.\");\r\n        }\r\n        else if (version) {\r\n            // Document exists, base precondition on document update time.\r\n            return Precondition.updateTime(version);\r\n        }\r\n        else {\r\n            // Document was not read, so we just use the preconditions for a blind\r\n            // update.\r\n            return Precondition.exists(true);\r\n        }\r\n    };\r\n    Transaction.prototype.set = function (key, data) {\r\n        this.write(data.toMutations(key, this.precondition(key)));\r\n    };\r\n    Transaction.prototype.update = function (key, data) {\r\n        this.write(data.toMutations(key, this.preconditionForUpdate(key)));\r\n    };\r\n    Transaction.prototype.delete = function (key) {\r\n        this.write([new DeleteMutation(key, this.precondition(key))]);\r\n        // Since the delete will be applied before all following writes, we need to\r\n        // ensure that the precondition for the next write will be exists: false.\r\n        this.readVersions = this.readVersions.insert(key, SnapshotVersion.forDeletedDoc());\r\n    };\r\n    Transaction.prototype.commit = function () {\r\n        var _this = this;\r\n        var unwritten = this.readVersions;\r\n        // For each mutation, note that the doc was written.\r\n        this.mutations.forEach(function (mutation) {\r\n            unwritten = unwritten.remove(mutation.key);\r\n        });\r\n        if (!unwritten.isEmpty()) {\r\n            return Promise.reject(Error('Every document read in a transaction must also be written.'));\r\n        }\r\n        return this.datastore.commit(this.mutations).then(function () {\r\n            _this.committed = true;\r\n        });\r\n    };\r\n    return Transaction;\r\n}());\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG$8 = 'OnlineStateTracker';\r\n// To deal with transient failures, we allow multiple stream attempts before\r\n// giving up and transitioning from OnlineState.Unknown to Offline.\r\nvar MAX_WATCH_STREAM_FAILURES = 2;\r\n// To deal with stream attempts that don't succeed or fail in a timely manner,\r\n// we have a timeout for OnlineState to reach Online or Offline.\r\n// If the timeout is reached, we transition to Offline rather than waiting\r\n// indefinitely.\r\nvar ONLINE_STATE_TIMEOUT_MS = 10 * 1000;\r\n/**\r\n * A component used by the RemoteStore to track the OnlineState (that is,\r\n * whether or not the client as a whole should be considered to be online or\r\n * offline), implementing the appropriate heuristics.\r\n *\r\n * In particular, when the client is trying to connect to the backend, we\r\n * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for\r\n * a connection to succeed. If we have too many failures or the timeout elapses,\r\n * then we set the OnlineState to Offline, and the client will behave as if\r\n * it is offline (get()s will return cached data, etc.).\r\n */\r\nvar OnlineStateTracker = /** @class */ (function () {\r\n    function OnlineStateTracker(asyncQueue, onlineStateHandler) {\r\n        this.asyncQueue = asyncQueue;\r\n        this.onlineStateHandler = onlineStateHandler;\r\n        /** The current OnlineState. */\r\n        this.state = OnlineState.Unknown;\r\n        /**\r\n         * A count of consecutive failures to open the stream. If it reaches the\r\n         * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to\r\n         * Offline.\r\n         */\r\n        this.watchStreamFailures = 0;\r\n        /**\r\n         * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we\r\n         * transition from OnlineState.Unknown to OnlineState.Offline without waiting\r\n         * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).\r\n         */\r\n        this.onlineStateTimer = null;\r\n        /**\r\n         * Whether the client should log a warning message if it fails to connect to\r\n         * the backend (initially true, cleared after a successful stream, or if we've\r\n         * logged the message already).\r\n         */\r\n        this.shouldWarnClientIsOffline = true;\r\n    }\r\n    /**\r\n     * Called by RemoteStore when a watch stream is started (including on each\r\n     * backoff attempt).\r\n     *\r\n     * If this is the first attempt, it sets the OnlineState to Unknown and starts\r\n     * the onlineStateTimer.\r\n     */\r\n    OnlineStateTracker.prototype.handleWatchStreamStart = function () {\r\n        var _this = this;\r\n        if (this.watchStreamFailures === 0) {\r\n            this.setAndBroadcast(OnlineState.Unknown);\r\n            assert(this.onlineStateTimer === null, \"onlineStateTimer shouldn't be started yet\");\r\n            this.onlineStateTimer = this.asyncQueue.enqueueAfterDelay(TimerId.OnlineStateTimeout, ONLINE_STATE_TIMEOUT_MS, function () {\r\n                _this.onlineStateTimer = null;\r\n                assert(_this.state === OnlineState.Unknown, 'Timer should be canceled if we transitioned to a different state.');\r\n                debug(LOG_TAG$8, \"Watch stream didn't reach online or offline within \" +\r\n                    (ONLINE_STATE_TIMEOUT_MS + \"ms. Considering client offline.\"));\r\n                _this.logClientOfflineWarningIfNecessary();\r\n                _this.setAndBroadcast(OnlineState.Offline);\r\n                // NOTE: handleWatchStreamFailure() will continue to increment\r\n                // watchStreamFailures even though we are already marked Offline,\r\n                // but this is non-harmful.\r\n                return Promise.resolve();\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Updates our OnlineState as appropriate after the watch stream reports a\r\n     * failure. The first failure moves us to the 'Unknown' state. We then may\r\n     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we\r\n     * actually transition to the 'Offline' state.\r\n     */\r\n    OnlineStateTracker.prototype.handleWatchStreamFailure = function () {\r\n        if (this.state === OnlineState.Online) {\r\n            this.setAndBroadcast(OnlineState.Unknown);\r\n            // To get to OnlineState.Online, set() must have been called which would\r\n            // have reset our heuristics.\r\n            assert(this.watchStreamFailures === 0, 'watchStreamFailures must be 0');\r\n            assert(this.onlineStateTimer === null, 'onlineStateTimer must be null');\r\n        }\r\n        else {\r\n            this.watchStreamFailures++;\r\n            if (this.watchStreamFailures >= MAX_WATCH_STREAM_FAILURES) {\r\n                this.clearOnlineStateTimer();\r\n                this.logClientOfflineWarningIfNecessary();\r\n                this.setAndBroadcast(OnlineState.Offline);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Explicitly sets the OnlineState to the specified state.\r\n     *\r\n     * Note that this resets our timers / failure counters, etc. used by our\r\n     * Offline heuristics, so must not be used in place of\r\n     * handleWatchStreamStart() and handleWatchStreamFailure().\r\n     */\r\n    OnlineStateTracker.prototype.set = function (newState) {\r\n        this.clearOnlineStateTimer();\r\n        this.watchStreamFailures = 0;\r\n        if (newState === OnlineState.Online) {\r\n            // We've connected to watch at least once. Don't warn the developer\r\n            // about being offline going forward.\r\n            this.shouldWarnClientIsOffline = false;\r\n        }\r\n        this.setAndBroadcast(newState);\r\n    };\r\n    OnlineStateTracker.prototype.setAndBroadcast = function (newState) {\r\n        if (newState !== this.state) {\r\n            this.state = newState;\r\n            this.onlineStateHandler(newState);\r\n        }\r\n    };\r\n    OnlineStateTracker.prototype.logClientOfflineWarningIfNecessary = function () {\r\n        if (this.shouldWarnClientIsOffline) {\r\n            error('Could not reach Firestore backend.');\r\n            this.shouldWarnClientIsOffline = false;\r\n        }\r\n    };\r\n    OnlineStateTracker.prototype.clearOnlineStateTimer = function () {\r\n        if (this.onlineStateTimer !== null) {\r\n            this.onlineStateTimer.cancel();\r\n            this.onlineStateTimer = null;\r\n        }\r\n    };\r\n    return OnlineStateTracker;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG$9 = 'RemoteStore';\r\n// TODO(b/35853402): Negotiate this with the stream.\r\nvar MAX_PENDING_WRITES = 10;\r\n/**\r\n * RemoteStore - An interface to remotely stored data, basically providing a\r\n * wrapper around the Datastore that is more reliable for the rest of the\r\n * system.\r\n *\r\n * RemoteStore is responsible for maintaining the connection to the server.\r\n * - maintaining a list of active listens.\r\n * - reconnecting when the connection is dropped.\r\n * - resuming all the active listens on reconnect.\r\n *\r\n * RemoteStore handles all incoming events from the Datastore.\r\n * - listening to the watch stream and repackaging the events as RemoteEvents\r\n * - notifying SyncEngine of any changes to the active listens.\r\n *\r\n * RemoteStore takes writes from other components and handles them reliably.\r\n * - pulling pending mutations from LocalStore and sending them to Datastore.\r\n * - retrying mutations that failed because of network problems.\r\n * - acking mutations to the SyncEngine once they are accepted or rejected.\r\n */\r\nvar RemoteStore = /** @class */ (function () {\r\n    function RemoteStore(\r\n    /**\r\n     * The local store, used to fill the write pipeline with outbound\r\n     * mutations and resolve existence filter mismatches.\r\n     */\r\n    localStore, \r\n    /** The client-side proxy for interacting with the backend. */\r\n    datastore, asyncQueue, onlineStateHandler) {\r\n        this.localStore = localStore;\r\n        this.datastore = datastore;\r\n        this.pendingWrites = [];\r\n        this.lastBatchSeen = BATCHID_UNKNOWN;\r\n        /**\r\n         * A mapping of watched targets that the client cares about tracking and the\r\n         * user has explicitly called a 'listen' for this target.\r\n         *\r\n         * These targets may or may not have been sent to or acknowledged by the\r\n         * server. On re-establishing the listen stream, these targets should be sent\r\n         * to the server. The targets removed with unlistens are removed eagerly\r\n         * without waiting for confirmation from the listen stream.\r\n         */\r\n        this.listenTargets = {};\r\n        /**\r\n         * A mapping of targetId to pending acks needed.\r\n         *\r\n         * If a targetId is present in this map, then we're waiting for watch to\r\n         * acknowledge a removal or addition of the target. If a target is not in this\r\n         * mapping, and it's in the listenTargets map, then we consider the target to\r\n         * be active.\r\n         *\r\n         * We increment the count here every time we issue a request over the stream\r\n         * to watch or unwatch. We then decrement the count every time we get a target\r\n         * added or target removed message from the server. Once the count is equal to\r\n         * 0 we know that the client and server are in the same state (once this state\r\n         * is reached the targetId is removed from the map to free the memory).\r\n         */\r\n        this.pendingTargetResponses = {};\r\n        this.accumulatedWatchChanges = [];\r\n        this.watchStream = null;\r\n        this.writeStream = null;\r\n        this.onlineStateTracker = new OnlineStateTracker(asyncQueue, onlineStateHandler);\r\n    }\r\n    /**\r\n     * Starts up the remote store, creating streams, restoring state from\r\n     * LocalStore, etc.\r\n     */\r\n    RemoteStore.prototype.start = function () {\r\n        return this.enableNetwork();\r\n    };\r\n    RemoteStore.prototype.isNetworkEnabled = function () {\r\n        assert((this.watchStream == null) === (this.writeStream == null), 'WatchStream and WriteStream should both be null or non-null');\r\n        return this.watchStream != null;\r\n    };\r\n    /** Re-enables the network. Idempotent. */\r\n    RemoteStore.prototype.enableNetwork = function () {\r\n        var _this = this;\r\n        if (this.isNetworkEnabled()) {\r\n            return Promise.resolve();\r\n        }\r\n        // Create new streams (but note they're not started yet).\r\n        this.watchStream = this.datastore.newPersistentWatchStream();\r\n        this.writeStream = this.datastore.newPersistentWriteStream();\r\n        // Load any saved stream token from persistent storage\r\n        return this.localStore.getLastStreamToken().then(function (token) {\r\n            _this.writeStream.lastStreamToken = token;\r\n            if (_this.shouldStartWatchStream()) {\r\n                _this.startWatchStream();\r\n            }\r\n            else {\r\n                _this.onlineStateTracker.set(OnlineState.Unknown);\r\n            }\r\n            return _this.fillWritePipeline(); // This may start the writeStream.\r\n        });\r\n    };\r\n    /**\r\n     * Temporarily disables the network. The network can be re-enabled using\r\n     * enableNetwork().\r\n     */\r\n    RemoteStore.prototype.disableNetwork = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.disableNetworkInternal();\r\n                // Set the OnlineState to Offline so get()s return from cache, etc.\r\n                this.onlineStateTracker.set(OnlineState.Offline);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Disables the network, if it is currently enabled.\r\n     */\r\n    RemoteStore.prototype.disableNetworkInternal = function () {\r\n        if (this.isNetworkEnabled()) {\r\n            // NOTE: We're guaranteed not to get any further events from these streams (not even a close\r\n            // event).\r\n            this.watchStream.stop();\r\n            this.writeStream.stop();\r\n            this.cleanUpWatchStreamState();\r\n            this.cleanUpWriteStreamState();\r\n            this.writeStream = null;\r\n            this.watchStream = null;\r\n        }\r\n    };\r\n    RemoteStore.prototype.shutdown = function () {\r\n        debug(LOG_TAG$9, 'RemoteStore shutting down.');\r\n        this.disableNetworkInternal();\r\n        // Set the OnlineState to Unknown (rather than Offline) to avoid potentially\r\n        // triggering spurious listener events with cached data, etc.\r\n        this.onlineStateTracker.set(OnlineState.Unknown);\r\n        return Promise.resolve();\r\n    };\r\n    /** Starts new listen for the given query. Uses resume token if provided */\r\n    RemoteStore.prototype.listen = function (queryData) {\r\n        assert(!contains(this.listenTargets, queryData.targetId), 'listen called with duplicate targetId!');\r\n        // Mark this as something the client is currently listening for.\r\n        this.listenTargets[queryData.targetId] = queryData;\r\n        if (this.shouldStartWatchStream()) {\r\n            // The listen will be sent in onWatchStreamOpen\r\n            this.startWatchStream();\r\n        }\r\n        else if (this.isNetworkEnabled() && this.watchStream.isOpen()) {\r\n            this.sendWatchRequest(queryData);\r\n        }\r\n    };\r\n    /** Removes the listen from server */\r\n    RemoteStore.prototype.unlisten = function (targetId) {\r\n        assert(contains(this.listenTargets, targetId), 'unlisten called without assigned target ID!');\r\n        delete this.listenTargets[targetId];\r\n        if (this.isNetworkEnabled() && this.watchStream.isOpen()) {\r\n            this.sendUnwatchRequest(targetId);\r\n            if (isEmpty(this.listenTargets)) {\r\n                this.watchStream.markIdle();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * We need to increment the the expected number of pending responses we're due\r\n     * from watch so we wait for the ack to process any messages from this target.\r\n     */\r\n    RemoteStore.prototype.sendWatchRequest = function (queryData) {\r\n        this.recordPendingTargetRequest(queryData.targetId);\r\n        this.watchStream.watch(queryData);\r\n    };\r\n    /**\r\n     * We need to increment the expected number of pending responses we're due\r\n     * from watch so we wait for the removal on the server before we process any\r\n     * messages from this target.\r\n     */\r\n    RemoteStore.prototype.sendUnwatchRequest = function (targetId) {\r\n        this.recordPendingTargetRequest(targetId);\r\n        this.watchStream.unwatch(targetId);\r\n    };\r\n    /**\r\n     * Increment the mapping of how many acks are needed from watch before we can\r\n     * consider the server to be 'in-sync' with the client's active targets.\r\n     */\r\n    RemoteStore.prototype.recordPendingTargetRequest = function (targetId) {\r\n        // For each request we get we need to record we need a response for it.\r\n        this.pendingTargetResponses[targetId] =\r\n            (this.pendingTargetResponses[targetId] || 0) + 1;\r\n    };\r\n    RemoteStore.prototype.startWatchStream = function () {\r\n        assert(this.shouldStartWatchStream(), 'startWriteStream() called when shouldStartWatchStream() is false.');\r\n        this.watchStream.start({\r\n            onOpen: this.onWatchStreamOpen.bind(this),\r\n            onClose: this.onWatchStreamClose.bind(this),\r\n            onWatchChange: this.onWatchStreamChange.bind(this)\r\n        });\r\n        this.onlineStateTracker.handleWatchStreamStart();\r\n    };\r\n    /**\r\n     * Returns whether the watch stream should be started because it's necessary\r\n     * and has not yet been started.\r\n     */\r\n    RemoteStore.prototype.shouldStartWatchStream = function () {\r\n        return (this.isNetworkEnabled() &&\r\n            !this.watchStream.isStarted() &&\r\n            !isEmpty(this.listenTargets));\r\n    };\r\n    RemoteStore.prototype.cleanUpWatchStreamState = function () {\r\n        // If the connection is closed then we'll never get a snapshot version for\r\n        // the accumulated changes and so we'll never be able to complete the batch.\r\n        // When we start up again the server is going to resend these changes\r\n        // anyway, so just toss the accumulated state.\r\n        this.accumulatedWatchChanges = [];\r\n        this.pendingTargetResponses = {};\r\n    };\r\n    RemoteStore.prototype.onWatchStreamOpen = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                // TODO(b/35852690): close the stream again (with some timeout?) if no watch\r\n                // targets are active\r\n                forEachNumber(this.listenTargets, function (targetId, queryData) {\r\n                    _this.sendWatchRequest(queryData);\r\n                });\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    RemoteStore.prototype.onWatchStreamClose = function (error$$1) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                assert(this.isNetworkEnabled(), 'onWatchStreamClose() should only be called when the network is enabled');\r\n                this.cleanUpWatchStreamState();\r\n                this.onlineStateTracker.handleWatchStreamFailure();\r\n                // If there was an error, retry the connection.\r\n                if (this.shouldStartWatchStream()) {\r\n                    this.startWatchStream();\r\n                }\r\n                else {\r\n                    // No need to restart watch stream because there are no active targets.\r\n                    // The online state is set to unknown because there is no active attempt\r\n                    // at establishing a connection\r\n                    this.onlineStateTracker.set(OnlineState.Unknown);\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    RemoteStore.prototype.onWatchStreamChange = function (watchChange, snapshotVersion) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var changes;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                // Mark the client as online since we got a message from the server\r\n                this.onlineStateTracker.set(OnlineState.Online);\r\n                if (watchChange instanceof WatchTargetChange &&\r\n                    watchChange.state === WatchTargetChangeState.Removed &&\r\n                    watchChange.cause) {\r\n                    // There was an error on a target, don't wait for a consistent snapshot\r\n                    // to raise events\r\n                    return [2 /*return*/, this.handleTargetError(watchChange)];\r\n                }\r\n                // Accumulate watch changes but don't process them if there's no\r\n                // snapshotVersion or it's older than a previous snapshot we've processed\r\n                // (can happen after we resume a target using a resume token).\r\n                this.accumulatedWatchChanges.push(watchChange);\r\n                if (!snapshotVersion.isEqual(SnapshotVersion.MIN) &&\r\n                    snapshotVersion.compareTo(this.localStore.getLastRemoteSnapshotVersion()) >= 0) {\r\n                    changes = this.accumulatedWatchChanges;\r\n                    this.accumulatedWatchChanges = [];\r\n                    return [2 /*return*/, this.handleWatchChangeBatch(snapshotVersion, changes)];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Takes a batch of changes from the Datastore, repackages them as a\r\n     * RemoteEvent, and passes that on to the listener, which is typically the\r\n     * SyncEngine.\r\n     */\r\n    RemoteStore.prototype.handleWatchChangeBatch = function (snapshotVersion, changes) {\r\n        var _this = this;\r\n        var aggregator = new WatchChangeAggregator(snapshotVersion, this.listenTargets, this.pendingTargetResponses);\r\n        aggregator.addChanges(changes);\r\n        var remoteEvent = aggregator.createRemoteEvent();\r\n        // Get the new response counts from the aggregator\r\n        this.pendingTargetResponses = aggregator.pendingTargetResponses;\r\n        var promises = [];\r\n        // Handle existence filters and existence filter mismatches.\r\n        forEachNumber(aggregator.existenceFilters, function (targetId, filter) {\r\n            var queryData = _this.listenTargets[targetId];\r\n            if (!queryData) {\r\n                // A watched target might have been removed already.\r\n                return;\r\n            }\r\n            var query = queryData.query;\r\n            if (query.isDocumentQuery()) {\r\n                if (filter.count === 0) {\r\n                    // The existence filter told us the document does not exist.\r\n                    // We need to deduce that this document does not exist and apply\r\n                    // a deleted document to our updates. Without applying a deleted\r\n                    // document there might be another query that will raise this\r\n                    // document as part of a snapshot until it is resolved,\r\n                    // essentially exposing inconsistency between queries.\r\n                    var key = new DocumentKey(query.path);\r\n                    var deletedDoc = new NoDocument(key, snapshotVersion);\r\n                    remoteEvent.addDocumentUpdate(deletedDoc);\r\n                }\r\n                else {\r\n                    assert(filter.count === 1, 'Single document existence filter with count: ' + filter.count);\r\n                }\r\n            }\r\n            else {\r\n                // Not a document query.\r\n                var promise = _this.localStore\r\n                    .remoteDocumentKeys(targetId)\r\n                    .then(function (trackedRemote) {\r\n                    if (remoteEvent.targetChanges[targetId]) {\r\n                        var mapping = remoteEvent.targetChanges[targetId].mapping;\r\n                        if (mapping !== null) {\r\n                            if (mapping instanceof UpdateMapping) {\r\n                                trackedRemote = mapping.applyToKeySet(trackedRemote);\r\n                            }\r\n                            else {\r\n                                assert(mapping instanceof ResetMapping, 'Expected either reset or update mapping but got something else: ' +\r\n                                    mapping);\r\n                                trackedRemote = mapping.documents;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (trackedRemote.size !== filter.count) {\r\n                        // Existence filter mismatch, resetting mapping.\r\n                        // Make sure the mismatch is exposed in the remote event.\r\n                        remoteEvent.handleExistenceFilterMismatch(targetId);\r\n                        // Clear the resume token for the query, since we're in a\r\n                        // known mismatch state.\r\n                        var newQueryData = new QueryData(query, targetId, queryData.purpose);\r\n                        _this.listenTargets[targetId] = newQueryData;\r\n                        // Cause a hard reset by unwatching and rewatching\r\n                        // immediately, but deliberately don't send a resume token\r\n                        // so that we get a full update.\r\n                        // Make sure we expect that this acks are going to happen.\r\n                        _this.sendUnwatchRequest(targetId);\r\n                        // Mark the query we send as being on behalf of an existence\r\n                        // filter mismatch, but don't actually retain that in\r\n                        // listenTargets. This ensures that we flag the first\r\n                        // re-listen this way without impacting future listens of\r\n                        // this target (that might happen e.g. on reconnect).\r\n                        var requestQueryData = new QueryData(query, targetId, QueryPurpose.ExistenceFilterMismatch);\r\n                        _this.sendWatchRequest(requestQueryData);\r\n                    }\r\n                });\r\n                promises.push(promise);\r\n            }\r\n        });\r\n        return Promise.all(promises).then(function () {\r\n            // Update in-memory resume tokens. LocalStore will update the\r\n            // persistent view of these when applying the completed RemoteEvent.\r\n            forEachNumber(remoteEvent.targetChanges, function (targetId, change) {\r\n                if (change.resumeToken.length > 0) {\r\n                    var queryData = _this.listenTargets[targetId];\r\n                    // A watched target might have been removed already.\r\n                    if (queryData) {\r\n                        _this.listenTargets[targetId] = queryData.update({\r\n                            resumeToken: change.resumeToken,\r\n                            snapshotVersion: change.snapshotVersion\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            // Finally handle remote event\r\n            return _this.syncEngine.applyRemoteEvent(remoteEvent);\r\n        });\r\n    };\r\n    /** Handles an error on a target */\r\n    RemoteStore.prototype.handleTargetError = function (watchChange) {\r\n        var _this = this;\r\n        assert(!!watchChange.cause, 'Handling target error without a cause');\r\n        var error$$1 = watchChange.cause;\r\n        var promiseChain = Promise.resolve();\r\n        watchChange.targetIds.forEach(function (targetId) {\r\n            promiseChain = promiseChain.then(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                return tslib_1.__generator(this, function (_a) {\r\n                    // A watched target might have been removed already.\r\n                    if (contains(this.listenTargets, targetId)) {\r\n                        delete this.listenTargets[targetId];\r\n                        return [2 /*return*/, this.syncEngine.rejectListen(targetId, error$$1)];\r\n                    }\r\n                    return [2 /*return*/];\r\n                });\r\n            }); });\r\n        });\r\n        return promiseChain;\r\n    };\r\n    RemoteStore.prototype.cleanUpWriteStreamState = function () {\r\n        this.lastBatchSeen = BATCHID_UNKNOWN;\r\n        debug(LOG_TAG$9, 'Stopping write stream with ' +\r\n            this.pendingWrites.length +\r\n            ' pending writes');\r\n        this.pendingWrites = [];\r\n    };\r\n    /**\r\n     * Notifies that there are new mutations to process in the queue. This is\r\n     * typically called by SyncEngine after it has sent mutations to LocalStore.\r\n     */\r\n    RemoteStore.prototype.fillWritePipeline = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (this.canWriteMutations()) {\r\n                    return [2 /*return*/, this.localStore\r\n                            .nextMutationBatch(this.lastBatchSeen)\r\n                            .then(function (batch) {\r\n                            if (batch === null) {\r\n                                if (_this.pendingWrites.length === 0) {\r\n                                    _this.writeStream.markIdle();\r\n                                }\r\n                            }\r\n                            else {\r\n                                _this.commit(batch);\r\n                                return _this.fillWritePipeline();\r\n                            }\r\n                        })];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the backend can accept additional write requests.\r\n     *\r\n     * When sending mutations to the write stream (e.g. in fillWritePipeline),\r\n     * call this method first to check if more mutations can be sent.\r\n     *\r\n     * Currently the only thing that can prevent the backend from accepting\r\n     * write requests is if there are too many requests already outstanding. As\r\n     * writes complete the backend will be able to accept more.\r\n     */\r\n    RemoteStore.prototype.canWriteMutations = function () {\r\n        return (this.isNetworkEnabled() && this.pendingWrites.length < MAX_PENDING_WRITES);\r\n    };\r\n    // For testing\r\n    RemoteStore.prototype.outstandingWrites = function () {\r\n        return this.pendingWrites.length;\r\n    };\r\n    /**\r\n     * Given mutations to commit, actually commits them to the Datastore. Note\r\n     * that this does *not* return a Promise specifically because the AsyncQueue\r\n     * should not block operations for this.\r\n     */\r\n    RemoteStore.prototype.commit = function (batch) {\r\n        assert(this.canWriteMutations(), \"commit called when batches can't be written\");\r\n        this.lastBatchSeen = batch.batchId;\r\n        this.pendingWrites.push(batch);\r\n        if (this.shouldStartWriteStream()) {\r\n            this.startWriteStream();\r\n        }\r\n        else if (this.isNetworkEnabled() && this.writeStream.handshakeComplete) {\r\n            this.writeStream.writeMutations(batch.mutations);\r\n        }\r\n    };\r\n    RemoteStore.prototype.shouldStartWriteStream = function () {\r\n        return (this.isNetworkEnabled() &&\r\n            !this.writeStream.isStarted() &&\r\n            this.pendingWrites.length > 0);\r\n    };\r\n    RemoteStore.prototype.startWriteStream = function () {\r\n        assert(this.shouldStartWriteStream(), 'startWriteStream() called when shouldStartWriteStream() is false.');\r\n        this.writeStream.start({\r\n            onOpen: this.onWriteStreamOpen.bind(this),\r\n            onClose: this.onWriteStreamClose.bind(this),\r\n            onHandshakeComplete: this.onWriteHandshakeComplete.bind(this),\r\n            onMutationResult: this.onMutationResult.bind(this)\r\n        });\r\n    };\r\n    RemoteStore.prototype.onWriteStreamOpen = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.writeStream.writeHandshake();\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    RemoteStore.prototype.onWriteHandshakeComplete = function () {\r\n        var _this = this;\r\n        // Record the stream token.\r\n        return this.localStore\r\n            .setLastStreamToken(this.writeStream.lastStreamToken)\r\n            .then(function () {\r\n            // Drain any pending writes.\r\n            //\r\n            // Note that at this point pendingWrites contains mutations that\r\n            // have already been accepted by fillWritePipeline/commitBatch. If\r\n            // the pipeline is full, canWriteMutations will be false, despite\r\n            // the fact that we actually need to send mutations over.\r\n            //\r\n            // This also means that this method indirectly respects the limits\r\n            // imposed by canWriteMutations since writes can't be added to the\r\n            // pendingWrites array when canWriteMutations is false. If the\r\n            // limits imposed by canWriteMutations actually protect us from\r\n            // DOSing ourselves then those limits won't be exceeded here and\r\n            // we'll continue to make progress.\r\n            for (var _i = 0, _a = _this.pendingWrites; _i < _a.length; _i++) {\r\n                var batch = _a[_i];\r\n                _this.writeStream.writeMutations(batch.mutations);\r\n            }\r\n        });\r\n    };\r\n    RemoteStore.prototype.onMutationResult = function (commitVersion, results) {\r\n        var _this = this;\r\n        // This is a response to a write containing mutations and should be\r\n        // correlated to the first pending write.\r\n        assert(this.pendingWrites.length > 0, 'Got result for empty pending writes');\r\n        var batch = this.pendingWrites.shift();\r\n        var success = MutationBatchResult.from(batch, commitVersion, results, this.writeStream.lastStreamToken);\r\n        return this.syncEngine.applySuccessfulWrite(success).then(function () {\r\n            // It's possible that with the completion of this mutation another\r\n            // slot has freed up.\r\n            return _this.fillWritePipeline();\r\n        });\r\n    };\r\n    RemoteStore.prototype.onWriteStreamClose = function (error$$1) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var errorHandling;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                assert(this.isNetworkEnabled(), 'onWriteStreamClose() should only be called when the network is enabled');\r\n                // If the write stream closed due to an error, invoke the error callbacks if\r\n                // there are pending writes.\r\n                if (error$$1 && this.pendingWrites.length > 0) {\r\n                    assert(!!error$$1, 'We have pending writes, but the write stream closed without an error');\r\n                    errorHandling = void 0;\r\n                    if (this.writeStream.handshakeComplete) {\r\n                        // This error affects the actual write.\r\n                        errorHandling = this.handleWriteError(error$$1);\r\n                    }\r\n                    else {\r\n                        // If there was an error before the handshake has finished, it's\r\n                        // possible that the server is unable to process the stream token\r\n                        // we're sending. (Perhaps it's too old?)\r\n                        errorHandling = this.handleHandshakeError(error$$1);\r\n                    }\r\n                    return [2 /*return*/, errorHandling.then(function () {\r\n                            // The write stream might have been started by refilling the write\r\n                            // pipeline for failed writes\r\n                            if (_this.shouldStartWriteStream()) {\r\n                                _this.startWriteStream();\r\n                            }\r\n                        })];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    RemoteStore.prototype.handleHandshakeError = function (error$$1) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                // Reset the token if it's a permanent error or the error code is\r\n                // ABORTED, signaling the write stream is no longer valid.\r\n                if (isPermanentError(error$$1.code) || error$$1.code === Code.ABORTED) {\r\n                    debug(LOG_TAG$9, 'RemoteStore error before completed handshake; resetting stream token: ', this.writeStream.lastStreamToken);\r\n                    this.writeStream.lastStreamToken = emptyByteString();\r\n                    return [2 /*return*/, this.localStore.setLastStreamToken(emptyByteString())];\r\n                }\r\n                else {\r\n                    // Some other error, don't reset stream token. Our stream logic will\r\n                    // just retry with exponential backoff.\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    RemoteStore.prototype.handleWriteError = function (error$$1) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var batch;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (isPermanentError(error$$1.code)) {\r\n                    batch = this.pendingWrites.shift();\r\n                    // In this case it's also unlikely that the server itself is melting\r\n                    // down -- this was just a bad request so inhibit backoff on the next\r\n                    // restart.\r\n                    this.writeStream.inhibitBackoff();\r\n                    return [2 /*return*/, this.syncEngine\r\n                            .rejectFailedWrite(batch.batchId, error$$1)\r\n                            .then(function () {\r\n                            // It's possible that with the completion of this mutation\r\n                            // another slot has freed up.\r\n                            return _this.fillWritePipeline();\r\n                        })];\r\n                }\r\n                else {\r\n                    // Transient error, just let the retry logic kick in.\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    RemoteStore.prototype.createTransaction = function () {\r\n        return new Transaction(this.datastore);\r\n    };\r\n    RemoteStore.prototype.handleUserChange = function (user) {\r\n        debug(LOG_TAG$9, 'RemoteStore changing users: uid=', user.uid);\r\n        // If the network has been explicitly disabled, make sure we don't\r\n        // accidentally re-enable it.\r\n        if (this.isNetworkEnabled()) {\r\n            // Tear down and re-create our network streams. This will ensure we get a fresh auth token\r\n            // for the new user and re-fill the write pipeline with new mutations from the LocalStore\r\n            // (since mutations are per-user).\r\n            this.disableNetworkInternal();\r\n            this.onlineStateTracker.set(OnlineState.Unknown);\r\n            return this.enableNetwork();\r\n        }\r\n    };\r\n    return RemoteStore;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_TAG$10 = 'FirestoreClient';\r\n/** The DOMException code for quota exceeded. */\r\nvar DOM_EXCEPTION_QUOTA_EXCEEDED = 22;\r\n/**\r\n * FirestoreClient is a top-level class that constructs and owns all of the\r\n * pieces of the client SDK architecture. It is responsible for creating the\r\n * async queue that is shared by all of the other components in the system.\r\n */\r\nvar FirestoreClient = /** @class */ (function () {\r\n    function FirestoreClient(platform, databaseInfo, credentials, \r\n    /**\r\n     * Asynchronous queue responsible for all of our internal processing. When\r\n     * we get incoming work from the user (via public API) or the network\r\n     * (incoming GRPC messages), we should always schedule onto this queue.\r\n     * This ensures all of our work is properly serialized (e.g. we don't\r\n     * start processing a new operation while the previous one is waiting for\r\n     * an async I/O to complete).\r\n     */\r\n    asyncQueue) {\r\n        this.platform = platform;\r\n        this.databaseInfo = databaseInfo;\r\n        this.credentials = credentials;\r\n        this.asyncQueue = asyncQueue;\r\n    }\r\n    /**\r\n     * Starts up the FirestoreClient, returning only whether or not enabling\r\n     * persistence succeeded.\r\n     *\r\n     * The intent here is to \"do the right thing\" as far as users are concerned.\r\n     * Namely, in cases where offline persistence is requested and possible,\r\n     * enable it, but otherwise fall back to persistence disabled. For the most\r\n     * part we expect this to succeed one way or the other so we don't expect our\r\n     * users to actually wait on the firestore.enablePersistence Promise since\r\n     * they generally won't care.\r\n     *\r\n     * Of course some users actually do care about whether or not persistence\r\n     * was successfully enabled, so the Promise returned from this method\r\n     * indicates this outcome.\r\n     *\r\n     * This presents a problem though: even before enablePersistence resolves or\r\n     * rejects, users may have made calls to e.g. firestore.collection() which\r\n     * means that the FirestoreClient in there will be available and will be\r\n     * enqueuing actions on the async queue.\r\n     *\r\n     * Meanwhile any failure of an operation on the async queue causes it to\r\n     * panic and reject any further work, on the premise that unhandled errors\r\n     * are fatal.\r\n     *\r\n     * Consequently the fallback is handled internally here in start, and if the\r\n     * fallback succeeds we signal success to the async queue even though the\r\n     * start() itself signals failure.\r\n     *\r\n     * @param usePersistence Whether or not to attempt to enable persistence.\r\n     * @returns A deferred result indicating the user-visible result of enabling\r\n     *     offline persistence. This method will reject this if IndexedDB fails to\r\n     *     start for any reason. If usePersistence is false this is\r\n     *     unconditionally resolved.\r\n     */\r\n    FirestoreClient.prototype.start = function (usePersistence) {\r\n        var _this = this;\r\n        // We defer our initialization until we get the current user from\r\n        // setUserChangeListener(). We block the async queue until we got the\r\n        // initial user and the initialization is completed. This will prevent\r\n        // any scheduled work from happening before initialization is completed.\r\n        //\r\n        // If initializationDone resolved then the FirestoreClient is in a usable\r\n        // state.\r\n        var initializationDone = new Deferred$1();\r\n        // If usePersistence is true, certain classes of errors while starting are\r\n        // recoverable but only by falling back to persistence disabled.\r\n        //\r\n        // If there's an error in the first case but not in recovery we cannot\r\n        // reject the promise blocking the async queue because this will cause the\r\n        // async queue to panic.\r\n        var persistenceResult = new Deferred$1();\r\n        var initialized = false;\r\n        this.credentials.setUserChangeListener(function (user) {\r\n            if (!initialized) {\r\n                initialized = true;\r\n                _this.initializePersistence(usePersistence, persistenceResult)\r\n                    .then(function () { return _this.initializeRest(user); })\r\n                    .then(initializationDone.resolve, initializationDone.reject);\r\n            }\r\n            else {\r\n                _this.asyncQueue.enqueue(function () {\r\n                    return _this.handleUserChange(user);\r\n                });\r\n            }\r\n        });\r\n        // Block the async queue until initialization is done\r\n        this.asyncQueue.enqueue(function () {\r\n            return initializationDone.promise;\r\n        });\r\n        // Return only the result of enabling persistence. Note that this does not\r\n        // need to await the completion of initializationDone because the result of\r\n        // this method should not reflect any other kind of failure to start.\r\n        return persistenceResult.promise;\r\n    };\r\n    /** Enables the network connection and requeues all pending operations. */\r\n    FirestoreClient.prototype.enableNetwork = function () {\r\n        var _this = this;\r\n        return this.asyncQueue.enqueue(function () {\r\n            return _this.remoteStore.enableNetwork();\r\n        });\r\n    };\r\n    /**\r\n     * Initializes persistent storage, attempting to use IndexedDB if\r\n     * usePersistence is true or memory-only if false.\r\n     *\r\n     * If IndexedDB fails because it's already open in another tab or because the\r\n     * platform can't possibly support our implementation then this method rejects\r\n     * the persistenceResult and falls back on memory-only persistence.\r\n     *\r\n     * @param usePersistence indicates whether or not to use offline persistence\r\n     * @param persistenceResult A deferred result indicating the user-visible\r\n     *     result of enabling offline persistence. This method will reject this if\r\n     *     IndexedDB fails to start for any reason. If usePersistence is false\r\n     *     this is unconditionally resolved.\r\n     * @returns a Promise indicating whether or not initialization should\r\n     *     continue, i.e. that one of the persistence implementations actually\r\n     *     succeeded.\r\n     */\r\n    FirestoreClient.prototype.initializePersistence = function (usePersistence, persistenceResult) {\r\n        var _this = this;\r\n        if (usePersistence) {\r\n            return this.startIndexedDbPersistence()\r\n                .then(persistenceResult.resolve)\r\n                .catch(function (error$$1) {\r\n                // Regardless of whether or not the retry succeeds, from an user\r\n                // perspective, offline persistence has failed.\r\n                persistenceResult.reject(error$$1);\r\n                // An unknown failure on the first stage shuts everything down.\r\n                if (!_this.canFallback(error$$1)) {\r\n                    return Promise.reject(error$$1);\r\n                }\r\n                console.warn('Error enabling offline storage. Falling back to' +\r\n                    ' storage disabled: ' +\r\n                    error$$1);\r\n                return _this.startMemoryPersistence();\r\n            });\r\n        }\r\n        else {\r\n            // When usePersistence == false, enabling offline persistence is defined\r\n            // to unconditionally succeed. This allows start() to have the same\r\n            // signature for both cases, despite the fact that the returned promise\r\n            // is only used in the enablePersistence call.\r\n            persistenceResult.resolve();\r\n            return this.startMemoryPersistence();\r\n        }\r\n    };\r\n    /**\r\n     * Decides whether the provided error allows us to gracefully disable\r\n     * persistence (as opposed to crashing the client).\r\n     */\r\n    FirestoreClient.prototype.canFallback = function (error$$1) {\r\n        if (error$$1 instanceof FirestoreError) {\r\n            return (error$$1.code === Code.FAILED_PRECONDITION ||\r\n                error$$1.code === Code.UNIMPLEMENTED);\r\n        }\r\n        else if (typeof DOMException !== 'undefined' &&\r\n            error$$1 instanceof DOMException) {\r\n            return error$$1.code === DOM_EXCEPTION_QUOTA_EXCEEDED;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Starts IndexedDB-based persistence.\r\n     *\r\n     * @returns A promise indicating success or failure.\r\n     */\r\n    FirestoreClient.prototype.startIndexedDbPersistence = function () {\r\n        // TODO(http://b/33384523): For now we just disable garbage collection\r\n        // when persistence is enabled.\r\n        this.garbageCollector = new NoOpGarbageCollector();\r\n        var storagePrefix = IndexedDbPersistence.buildStoragePrefix(this.databaseInfo);\r\n        // Opt to use proto3 JSON in case the platform doesn't support Uint8Array.\r\n        var serializer = new JsonProtoSerializer(this.databaseInfo.databaseId, {\r\n            useProto3Json: true\r\n        });\r\n        this.persistence = new IndexedDbPersistence(storagePrefix, serializer);\r\n        return this.persistence.start();\r\n    };\r\n    /**\r\n     * Starts Memory-backed persistence. In practice this cannot fail.\r\n     *\r\n     * @returns A promise that will successfully resolve.\r\n     */\r\n    FirestoreClient.prototype.startMemoryPersistence = function () {\r\n        this.garbageCollector = new EagerGarbageCollector();\r\n        this.persistence = new MemoryPersistence();\r\n        return this.persistence.start();\r\n    };\r\n    /**\r\n     * Initializes the rest of the FirestoreClient, assuming the initial user\r\n     * has been obtained from the credential provider and some persistence\r\n     * implementation is available in this.persistence.\r\n     */\r\n    FirestoreClient.prototype.initializeRest = function (user) {\r\n        var _this = this;\r\n        return this.platform\r\n            .loadConnection(this.databaseInfo)\r\n            .then(function (connection) {\r\n            _this.localStore = new LocalStore(_this.persistence, user, _this.garbageCollector);\r\n            var serializer = _this.platform.newSerializer(_this.databaseInfo.databaseId);\r\n            var datastore = new Datastore(_this.asyncQueue, connection, _this.credentials, serializer);\r\n            var onlineStateChangedHandler = function (onlineState) {\r\n                _this.syncEngine.applyOnlineStateChange(onlineState);\r\n                _this.eventMgr.applyOnlineStateChange(onlineState);\r\n            };\r\n            _this.remoteStore = new RemoteStore(_this.localStore, datastore, _this.asyncQueue, onlineStateChangedHandler);\r\n            _this.syncEngine = new SyncEngine(_this.localStore, _this.remoteStore, user);\r\n            // Setup wiring between sync engine and remote store\r\n            _this.remoteStore.syncEngine = _this.syncEngine;\r\n            _this.eventMgr = new EventManager(_this.syncEngine);\r\n            // NOTE: RemoteStore depends on LocalStore (for persisting stream\r\n            // tokens, refilling mutation queue, etc.) so must be started after\r\n            // LocalStore.\r\n            return _this.localStore.start();\r\n        })\r\n            .then(function () {\r\n            return _this.remoteStore.start();\r\n        });\r\n    };\r\n    FirestoreClient.prototype.handleUserChange = function (user) {\r\n        this.asyncQueue.verifyOperationInProgress();\r\n        debug(LOG_TAG$10, 'User Changed: ' + user.uid);\r\n        return this.syncEngine.handleUserChange(user);\r\n    };\r\n    /** Disables the network connection. Pending operations will not complete. */\r\n    FirestoreClient.prototype.disableNetwork = function () {\r\n        var _this = this;\r\n        return this.asyncQueue.enqueue(function () {\r\n            return _this.remoteStore.disableNetwork();\r\n        });\r\n    };\r\n    FirestoreClient.prototype.shutdown = function (options) {\r\n        var _this = this;\r\n        return this.asyncQueue\r\n            .enqueue(function () {\r\n            _this.credentials.removeUserChangeListener();\r\n            return _this.remoteStore.shutdown();\r\n        })\r\n            .then(function () {\r\n            // PORTING NOTE: LocalStore does not need an explicit shutdown on web.\r\n            return _this.persistence.shutdown(options && options.purgePersistenceWithDataLoss);\r\n        });\r\n    };\r\n    FirestoreClient.prototype.listen = function (query, observer, options) {\r\n        var _this = this;\r\n        var listener = new QueryListener(query, observer, options);\r\n        this.asyncQueue.enqueue(function () {\r\n            return _this.eventMgr.listen(listener);\r\n        });\r\n        return listener;\r\n    };\r\n    FirestoreClient.prototype.unlisten = function (listener) {\r\n        var _this = this;\r\n        this.asyncQueue.enqueue(function () {\r\n            return _this.eventMgr.unlisten(listener);\r\n        });\r\n    };\r\n    FirestoreClient.prototype.getDocumentFromLocalCache = function (docKey) {\r\n        var _this = this;\r\n        return this.asyncQueue\r\n            .enqueue(function () {\r\n            return _this.localStore.readDocument(docKey);\r\n        })\r\n            .then(function (maybeDoc) {\r\n            if (maybeDoc instanceof Document) {\r\n                return maybeDoc;\r\n            }\r\n            else {\r\n                throw new FirestoreError(Code.UNAVAILABLE, 'Failed to get document from cache. (However, this document may ' +\r\n                    \"exist on the server. Run again without setting 'source' in \" +\r\n                    'the GetOptions to attempt to retrieve the document from the ' +\r\n                    'server.)');\r\n            }\r\n        });\r\n    };\r\n    FirestoreClient.prototype.getDocumentsFromLocalCache = function (query) {\r\n        var _this = this;\r\n        return this.asyncQueue\r\n            .enqueue(function () {\r\n            return _this.localStore.executeQuery(query);\r\n        })\r\n            .then(function (docs) {\r\n            var remoteKeys = documentKeySet();\r\n            var view = new View(query, remoteKeys);\r\n            var viewDocChanges = view.computeDocChanges(docs);\r\n            return view.applyChanges(viewDocChanges).snapshot;\r\n        });\r\n    };\r\n    FirestoreClient.prototype.write = function (mutations) {\r\n        var _this = this;\r\n        var deferred = new Deferred$1();\r\n        this.asyncQueue.enqueue(function () { return _this.syncEngine.write(mutations, deferred); });\r\n        return deferred.promise;\r\n    };\r\n    FirestoreClient.prototype.databaseId = function () {\r\n        return this.databaseInfo.databaseId;\r\n    };\r\n    FirestoreClient.prototype.transaction = function (updateFunction) {\r\n        var _this = this;\r\n        // We have to wait for the async queue to be sure syncEngine is initialized.\r\n        return this.asyncQueue\r\n            .enqueue(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {\r\n            return [2 /*return*/];\r\n        }); }); })\r\n            .then(function () { return _this.syncEngine.runTransaction(updateFunction); });\r\n    };\r\n    return FirestoreClient;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/*\r\n * A wrapper implementation of Observer<T> that will dispatch events\r\n * asynchronously. To allow immediate silencing, a mute call is added which\r\n * causes events scheduled to no longer be raised.\r\n */\r\nvar AsyncObserver = /** @class */ (function () {\r\n    function AsyncObserver(observer) {\r\n        this.observer = observer;\r\n        /**\r\n         * When set to true, will not raise future events. Necessary to deal with\r\n         * async detachment of listener.\r\n         */\r\n        this.muted = false;\r\n    }\r\n    AsyncObserver.prototype.next = function (value) {\r\n        this.scheduleEvent(this.observer.next, value);\r\n    };\r\n    AsyncObserver.prototype.error = function (error) {\r\n        this.scheduleEvent(this.observer.error, error);\r\n    };\r\n    AsyncObserver.prototype.mute = function () {\r\n        this.muted = true;\r\n    };\r\n    AsyncObserver.prototype.scheduleEvent = function (eventHandler, event) {\r\n        var _this = this;\r\n        if (!this.muted) {\r\n            setTimeout(function () {\r\n                if (!_this.muted) {\r\n                    eventHandler(event);\r\n                }\r\n            }, 0);\r\n        }\r\n    };\r\n    return AsyncObserver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Simple wrapper around a nullable UID. Mostly exists to make code more\r\n * readable.\r\n */\r\nvar User = /** @class */ (function () {\r\n    function User(uid) {\r\n        this.uid = uid;\r\n    }\r\n    User.prototype.isAuthenticated = function () {\r\n        return this.uid != null;\r\n    };\r\n    /**\r\n     * Returns a key representing this user, suitable for inclusion in a\r\n     * dictionary.\r\n     */\r\n    User.prototype.toKey = function () {\r\n        if (this.isAuthenticated()) {\r\n            return 'uid:' + this.uid;\r\n        }\r\n        else {\r\n            return 'anonymous-user';\r\n        }\r\n    };\r\n    User.prototype.isEqual = function (otherUser) {\r\n        return otherUser.uid === this.uid;\r\n    };\r\n    /** A user with a null UID. */\r\n    User.UNAUTHENTICATED = new User(null);\r\n    // TODO(mikelehen): Look into getting a proper uid-equivalent for\r\n    // non-FirebaseAuth providers.\r\n    User.GOOGLE_CREDENTIALS = new User('google-credentials-uid');\r\n    User.FIRST_PARTY = new User('first-party-uid');\r\n    return User;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OAuthToken = /** @class */ (function () {\r\n    function OAuthToken(value, user) {\r\n        this.user = user;\r\n        this.type = 'OAuth';\r\n        this.authHeaders = { Authorization: \"Bearer \" + value };\r\n    }\r\n    return OAuthToken;\r\n}());\r\n/** A CredentialsProvider that always yields an empty token. */\r\nvar EmptyCredentialsProvider = /** @class */ (function () {\r\n    function EmptyCredentialsProvider() {\r\n        /**\r\n         * Stores the User listener registered with setUserChangeListener()\r\n         * This isn't actually necessary since the UID never changes, but we use this\r\n         * to verify the listen contract is adhered to in tests.\r\n         */\r\n        this.userListener = null;\r\n    }\r\n    EmptyCredentialsProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve(null);\r\n    };\r\n    EmptyCredentialsProvider.prototype.setUserChangeListener = function (listener) {\r\n        assert(!this.userListener, 'Can only call setUserChangeListener() once.');\r\n        this.userListener = listener;\r\n        // Fire with initial user.\r\n        listener(User.UNAUTHENTICATED);\r\n    };\r\n    EmptyCredentialsProvider.prototype.removeUserChangeListener = function () {\r\n        assert(this.userListener !== null, 'removeUserChangeListener() when no listener registered');\r\n        this.userListener = null;\r\n    };\r\n    return EmptyCredentialsProvider;\r\n}());\r\nvar FirebaseCredentialsProvider = /** @class */ (function () {\r\n    function FirebaseCredentialsProvider(app) {\r\n        var _this = this;\r\n        this.app = app;\r\n        /**\r\n         * The auth token listener registered with FirebaseApp, retained here so we\r\n         * can unregister it.\r\n         */\r\n        this.tokenListener = null;\r\n        /**\r\n         * Counter used to detect if the user changed while a getToken request was\r\n         * outstanding.\r\n         */\r\n        this.userCounter = 0;\r\n        /** The User listener registered with setUserChangeListener(). */\r\n        this.userListener = null;\r\n        // We listen for token changes but all we really care about is knowing when\r\n        // the uid may have changed.\r\n        this.tokenListener = function () {\r\n            var newUser = _this.getUser();\r\n            if (!_this.currentUser || !newUser.isEqual(_this.currentUser)) {\r\n                _this.currentUser = newUser;\r\n                _this.userCounter++;\r\n                if (_this.userListener) {\r\n                    _this.userListener(_this.currentUser);\r\n                }\r\n            }\r\n        };\r\n        this.userCounter = 0;\r\n        // Will fire at least once where we set this.currentUser\r\n        this.app.INTERNAL.addAuthTokenListener(this.tokenListener);\r\n    }\r\n    FirebaseCredentialsProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        assert(this.tokenListener != null, 'getToken cannot be called after listener removed.');\r\n        // Take note of the current value of the userCounter so that this method can\r\n        // fail (with an ABORTED error) if there is a user change while the request\r\n        // is outstanding.\r\n        var initialUserCounter = this.userCounter;\r\n        return this.app.INTERNAL.getToken(forceRefresh).then(function (tokenData) {\r\n            // Cancel the request since the user changed while the request was\r\n            // outstanding so the response is likely for a previous user (which\r\n            // user, we can't be sure).\r\n            if (_this.userCounter !== initialUserCounter) {\r\n                throw new FirestoreError(Code.ABORTED, 'getToken aborted due to uid change.');\r\n            }\r\n            else {\r\n                if (tokenData) {\r\n                    assert(typeof tokenData.accessToken === 'string', 'Invalid tokenData returned from getToken():' + tokenData);\r\n                    return new OAuthToken(tokenData.accessToken, _this.currentUser);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    FirebaseCredentialsProvider.prototype.setUserChangeListener = function (listener) {\r\n        assert(!this.userListener, 'Can only call setUserChangeListener() once.');\r\n        this.userListener = listener;\r\n        // Fire the initial event, but only if we received the initial user\r\n        if (this.currentUser) {\r\n            listener(this.currentUser);\r\n        }\r\n    };\r\n    FirebaseCredentialsProvider.prototype.removeUserChangeListener = function () {\r\n        assert(this.tokenListener != null, 'removeUserChangeListener() called twice');\r\n        assert(this.userListener !== null, 'removeUserChangeListener() called when no listener registered');\r\n        this.app.INTERNAL.removeAuthTokenListener(this.tokenListener);\r\n        this.tokenListener = null;\r\n        this.userListener = null;\r\n    };\r\n    FirebaseCredentialsProvider.prototype.getUser = function () {\r\n        // TODO(mikelehen): Remove this check once we're shipping with firebase.js.\r\n        if (typeof this.app.INTERNAL.getUid !== 'function') {\r\n            fail('This version of the Firestore SDK requires at least version' +\r\n                ' 3.7.0 of firebase.js.');\r\n        }\r\n        var currentUid = this.app.INTERNAL.getUid();\r\n        assert(currentUid === null || typeof currentUid === 'string', 'Received invalid UID: ' + currentUid);\r\n        return new User(currentUid);\r\n    };\r\n    return FirebaseCredentialsProvider;\r\n}());\r\n/*\r\n * FirstPartyToken provides a fresh token each time its value\r\n * is requested, because if the token is too old, requests will be rejected.\r\n * TODO(b/33147818) this implementation violates the current assumption that\r\n * tokens are immutable.  We need to either revisit this assumption or come\r\n * up with some way for FPA to use the listen/unlisten interface.\r\n */\r\nvar FirstPartyToken = /** @class */ (function () {\r\n    function FirstPartyToken(gapi, sessionIndex) {\r\n        this.gapi = gapi;\r\n        this.sessionIndex = sessionIndex;\r\n        this.type = 'FirstParty';\r\n        this.user = User.FIRST_PARTY;\r\n        assert(this.gapi &&\r\n            this.gapi['auth'] &&\r\n            this.gapi['auth']['getAuthHeaderValueForFirstParty'], 'unexpected gapi interface');\r\n    }\r\n    Object.defineProperty(FirstPartyToken.prototype, \"authHeaders\", {\r\n        get: function () {\r\n            return {\r\n                Authorization: this.gapi['auth']['getAuthHeaderValueForFirstParty']([]),\r\n                'X-Goog-AuthUser': this.sessionIndex\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirstPartyToken;\r\n}());\r\n/*\r\n * Provides user credentials required for the Firestore JavaScript SDK\r\n * to authenticate the user, using technique that is only available\r\n * to applications hosted by Google.\r\n */\r\nvar FirstPartyCredentialsProvider = /** @class */ (function () {\r\n    function FirstPartyCredentialsProvider(gapi, sessionIndex) {\r\n        this.gapi = gapi;\r\n        this.sessionIndex = sessionIndex;\r\n        assert(this.gapi &&\r\n            this.gapi['auth'] &&\r\n            this.gapi['auth']['getAuthHeaderValueForFirstParty'], 'unexpected gapi interface');\r\n    }\r\n    FirstPartyCredentialsProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve(new FirstPartyToken(this.gapi, this.sessionIndex));\r\n    };\r\n    // TODO(33108925): can someone switch users w/o a page refresh?\r\n    // TODO(33110621): need to understand token/session lifecycle\r\n    FirstPartyCredentialsProvider.prototype.setUserChangeListener = function (listener) {\r\n        // Fire with initial uid.\r\n        listener(User.FIRST_PARTY);\r\n    };\r\n    FirstPartyCredentialsProvider.prototype.removeUserChangeListener = function () { };\r\n    return FirstPartyCredentialsProvider;\r\n}());\r\n/**\r\n * Builds a CredentialsProvider depending on the type of\r\n * the credentials passed in.\r\n */\r\nfunction makeCredentialsProvider(credentials) {\r\n    if (!credentials) {\r\n        return new EmptyCredentialsProvider();\r\n    }\r\n    switch (credentials.type) {\r\n        case 'gapi':\r\n            return new FirstPartyCredentialsProvider(credentials.client, credentials.sessionIndex || '0');\r\n        case 'provider':\r\n            return credentials.client;\r\n        default:\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'makeCredentialsProvider failed due to invalid credential type');\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isPartialObserver(obj) {\r\n    return implementsAnyMethods$1(obj, ['next', 'error', 'complete']);\r\n}\r\n/**\r\n * Returns true if obj is an object and contains at least one of the specified\r\n * methods.\r\n */\r\nfunction implementsAnyMethods$1(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    var object = obj;\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in object && typeof object[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An opaque base class for FieldValue sentinel objects in our public API,\r\n * with public static methods for creating said sentinel objects.\r\n */\r\n// tslint:disable-next-line:class-as-namespace  We use this as a base class.\r\nvar FieldValueImpl = /** @class */ (function () {\r\n    function FieldValueImpl(methodName) {\r\n        this.methodName = methodName;\r\n    }\r\n    FieldValueImpl.delete = function () {\r\n        return DeleteFieldValueImpl.instance;\r\n    };\r\n    FieldValueImpl.serverTimestamp = function () {\r\n        return ServerTimestampFieldValueImpl.instance;\r\n    };\r\n    // TODO(array-features): Expose this once backend support lands.\r\n    FieldValueImpl._arrayUnion = function () {\r\n        var elements = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            elements[_i] = arguments[_i];\r\n        }\r\n        validateAtLeastNumberOfArgs('FieldValue.arrayUnion', arguments, 1);\r\n        // NOTE: We don't actually parse the data until it's used in set() or\r\n        // update() since we need access to the Firestore instance.\r\n        return new ArrayUnionFieldValueImpl(elements);\r\n    };\r\n    // TODO(array-features): Expose this once backend support lands.\r\n    FieldValueImpl._arrayRemove = function () {\r\n        var elements = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            elements[_i] = arguments[_i];\r\n        }\r\n        validateAtLeastNumberOfArgs('FieldValue.arrayRemove', arguments, 1);\r\n        // NOTE: We don't actually parse the data until it's used in set() or\r\n        // update() since we need access to the Firestore instance.\r\n        return new ArrayRemoveFieldValueImpl(elements);\r\n    };\r\n    FieldValueImpl.prototype.isEqual = function (other) {\r\n        return this === other;\r\n    };\r\n    return FieldValueImpl;\r\n}());\r\nvar DeleteFieldValueImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DeleteFieldValueImpl, _super);\r\n    function DeleteFieldValueImpl() {\r\n        return _super.call(this, 'FieldValue.delete') || this;\r\n    }\r\n    /** Singleton instance. */\r\n    DeleteFieldValueImpl.instance = new DeleteFieldValueImpl();\r\n    return DeleteFieldValueImpl;\r\n}(FieldValueImpl));\r\nvar ServerTimestampFieldValueImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ServerTimestampFieldValueImpl, _super);\r\n    function ServerTimestampFieldValueImpl() {\r\n        return _super.call(this, 'FieldValue.serverTimestamp') || this;\r\n    }\r\n    /** Singleton instance. */\r\n    ServerTimestampFieldValueImpl.instance = new ServerTimestampFieldValueImpl();\r\n    return ServerTimestampFieldValueImpl;\r\n}(FieldValueImpl));\r\nvar ArrayUnionFieldValueImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ArrayUnionFieldValueImpl, _super);\r\n    function ArrayUnionFieldValueImpl(_elements) {\r\n        var _this = _super.call(this, 'FieldValue.arrayUnion') || this;\r\n        _this._elements = _elements;\r\n        return _this;\r\n    }\r\n    return ArrayUnionFieldValueImpl;\r\n}(FieldValueImpl));\r\nvar ArrayRemoveFieldValueImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ArrayRemoveFieldValueImpl, _super);\r\n    function ArrayRemoveFieldValueImpl(_elements) {\r\n        var _this = _super.call(this, 'FieldValue.arrayRemove') || this;\r\n        _this._elements = _elements;\r\n        return _this;\r\n    }\r\n    return ArrayRemoveFieldValueImpl;\r\n}(FieldValueImpl));\r\n// Public instance that disallows construction at runtime. This constructor is\r\n// used when exporting FieldValueImpl on firebase.firestore.FieldValue and will\r\n// be called FieldValue publicly. Internally we still use FieldValueImpl which\r\n// has a type-checked private constructor. Note that FieldValueImpl and\r\n// PublicFieldValue can be used interchangeably in instanceof checks.\r\n// For our internal TypeScript code PublicFieldValue doesn't exist as a type,\r\n// and so we need to use FieldValueImpl as type and export it too.\r\n// tslint:disable-next-line:variable-name  We treat this as a class name.\r\nvar PublicFieldValue = makeConstructorPrivate(FieldValueImpl, 'Use FieldValue.<field>() instead.');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RESERVED_FIELD_REGEX = /^__.*__$/;\r\n/** The result of parsing document data (e.g. for a setData call). */\r\nvar ParsedSetData = /** @class */ (function () {\r\n    function ParsedSetData(data, fieldMask, fieldTransforms) {\r\n        this.data = data;\r\n        this.fieldMask = fieldMask;\r\n        this.fieldTransforms = fieldTransforms;\r\n    }\r\n    ParsedSetData.prototype.toMutations = function (key, precondition) {\r\n        var mutations = [];\r\n        if (this.fieldMask !== null) {\r\n            mutations.push(new PatchMutation(key, this.data, this.fieldMask, precondition));\r\n        }\r\n        else {\r\n            mutations.push(new SetMutation(key, this.data, precondition));\r\n        }\r\n        if (this.fieldTransforms.length > 0) {\r\n            mutations.push(new TransformMutation(key, this.fieldTransforms));\r\n        }\r\n        return mutations;\r\n    };\r\n    return ParsedSetData;\r\n}());\r\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\r\nvar ParsedUpdateData = /** @class */ (function () {\r\n    function ParsedUpdateData(data, fieldMask, fieldTransforms) {\r\n        this.data = data;\r\n        this.fieldMask = fieldMask;\r\n        this.fieldTransforms = fieldTransforms;\r\n    }\r\n    ParsedUpdateData.prototype.toMutations = function (key, precondition) {\r\n        var mutations = [\r\n            new PatchMutation(key, this.data, this.fieldMask, precondition)\r\n        ];\r\n        if (this.fieldTransforms.length > 0) {\r\n            mutations.push(new TransformMutation(key, this.fieldTransforms));\r\n        }\r\n        return mutations;\r\n    };\r\n    return ParsedUpdateData;\r\n}());\r\n/*\r\n * Represents what type of API method provided the data being parsed; useful\r\n * for determining which error conditions apply during parsing and providing\r\n * better error messages.\r\n */\r\nvar UserDataSource;\r\n(function (UserDataSource) {\r\n    UserDataSource[UserDataSource[\"Set\"] = 0] = \"Set\";\r\n    UserDataSource[UserDataSource[\"Update\"] = 1] = \"Update\";\r\n    UserDataSource[UserDataSource[\"MergeSet\"] = 2] = \"MergeSet\";\r\n    /**\r\n     * Indicates the source is a where clause, cursor bound, arrayUnion()\r\n     * element, etc. Of note, isWrite(source) will return false.\r\n     */\r\n    UserDataSource[UserDataSource[\"Argument\"] = 3] = \"Argument\";\r\n})(UserDataSource || (UserDataSource = {}));\r\nfunction isWrite(dataSource) {\r\n    switch (dataSource) {\r\n        case UserDataSource.Set: // fall through\r\n        case UserDataSource.MergeSet: // fall through\r\n        case UserDataSource.Update:\r\n            return true;\r\n        case UserDataSource.Argument:\r\n            return false;\r\n        default:\r\n            throw fail(\"Unexpected case for UserDataSource: \" + dataSource);\r\n    }\r\n}\r\n/** A \"context\" object passed around while parsing user data. */\r\nvar ParseContext = /** @class */ (function () {\r\n    /**\r\n     * Initializes a ParseContext with the given source and path.\r\n     *\r\n     * @param dataSource Indicates what kind of API method this data came from.\r\n     * @param methodName The name of the method the user called to create this\r\n     *     ParseContext.\r\n     * @param path A path within the object being parsed. This could be an empty\r\n     *     path (in which case the context represents the root of the data being\r\n     *     parsed), or a nonempty path (indicating the context represents a nested\r\n     *     location within the data).\r\n     * @param arrayElement Whether or not this context corresponds to an element\r\n     *     of an array.\r\n     * @param fieldTransforms A mutable list of field transforms encountered while\r\n     *     parsing the data.\r\n     * @param fieldMask A mutable list of field paths encountered while parsing\r\n     *     the data.\r\n     *\r\n     * TODO(b/34871131): We don't support array paths right now, so path can be\r\n     * null to indicate the context represents any location within an array (in\r\n     * which case certain features will not work and errors will be somewhat\r\n     * compromised).\r\n     */\r\n    function ParseContext(dataSource, methodName, path, arrayElement, fieldTransforms, fieldMask) {\r\n        this.dataSource = dataSource;\r\n        this.methodName = methodName;\r\n        this.path = path;\r\n        this.arrayElement = arrayElement;\r\n        // Minor hack: If fieldTransforms is undefined, we assume this is an\r\n        // external call and we need to validate the entire path.\r\n        if (fieldTransforms === undefined) {\r\n            this.validatePath();\r\n        }\r\n        this.arrayElement = arrayElement !== undefined ? arrayElement : false;\r\n        this.fieldTransforms = fieldTransforms || [];\r\n        this.fieldMask = fieldMask || [];\r\n    }\r\n    ParseContext.prototype.childContextForField = function (field) {\r\n        var childPath = this.path == null ? null : this.path.child(field);\r\n        var context = new ParseContext(this.dataSource, this.methodName, childPath, \r\n        /*arrayElement=*/ false, this.fieldTransforms, this.fieldMask);\r\n        context.validatePathSegment(field);\r\n        return context;\r\n    };\r\n    ParseContext.prototype.childContextForFieldPath = function (field) {\r\n        var childPath = this.path == null ? null : this.path.child(field);\r\n        var context = new ParseContext(this.dataSource, this.methodName, childPath, \r\n        /*arrayElement=*/ false, this.fieldTransforms, this.fieldMask);\r\n        context.validatePath();\r\n        return context;\r\n    };\r\n    ParseContext.prototype.childContextForArray = function (index) {\r\n        // TODO(b/34871131): We don't support array paths right now; so make path\r\n        // null.\r\n        return new ParseContext(this.dataSource, this.methodName, \r\n        /*path=*/ null, \r\n        /*arrayElement=*/ true, this.fieldTransforms, this.fieldMask);\r\n    };\r\n    ParseContext.prototype.createError = function (reason) {\r\n        var fieldDescription = this.path === null || this.path.isEmpty()\r\n            ? ''\r\n            : \" (found in field \" + this.path.toString() + \")\";\r\n        return new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + this.methodName + \"() called with invalid data. \" +\r\n            reason +\r\n            fieldDescription);\r\n    };\r\n    ParseContext.prototype.validatePath = function () {\r\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\r\n        // within arrays.\r\n        if (this.path === null) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < this.path.length; i++) {\r\n            this.validatePathSegment(this.path.get(i));\r\n        }\r\n    };\r\n    ParseContext.prototype.validatePathSegment = function (segment) {\r\n        if (isWrite(this.dataSource) && RESERVED_FIELD_REGEX.test(segment)) {\r\n            throw this.createError('Document fields cannot begin and end with __');\r\n        }\r\n    };\r\n    return ParseContext;\r\n}());\r\n/**\r\n * A placeholder object for DocumentReferences in this file, in order to\r\n * avoid a circular dependency. See the comments for `DataPreConverter` for\r\n * the full context.\r\n */\r\nvar DocumentKeyReference = /** @class */ (function () {\r\n    function DocumentKeyReference(databaseId, key) {\r\n        this.databaseId = databaseId;\r\n        this.key = key;\r\n    }\r\n    return DocumentKeyReference;\r\n}());\r\n/**\r\n * Helper for parsing raw user input (provided via the API) into internal model\r\n * classes.\r\n */\r\nvar UserDataConverter = /** @class */ (function () {\r\n    function UserDataConverter(preConverter) {\r\n        this.preConverter = preConverter;\r\n    }\r\n    /** Parse document data from a non-merge set() call. */\r\n    UserDataConverter.prototype.parseSetData = function (methodName, input) {\r\n        var context = new ParseContext(UserDataSource.Set, methodName, FieldPath.EMPTY_PATH);\r\n        validatePlainObject('Data must be an object, but it was:', context, input);\r\n        var updateData = this.parseData(input, context);\r\n        return new ParsedSetData(updateData, \r\n        /* fieldMask= */ null, context.fieldTransforms);\r\n    };\r\n    /** Parse document data from a set() call with '{merge:true}'. */\r\n    UserDataConverter.prototype.parseMergeData = function (methodName, input, fieldPaths) {\r\n        var context = new ParseContext(UserDataSource.MergeSet, methodName, FieldPath.EMPTY_PATH);\r\n        validatePlainObject('Data must be an object, but it was:', context, input);\r\n        var updateData = this.parseData(input, context);\r\n        var fieldMask;\r\n        var fieldTransforms;\r\n        if (!fieldPaths) {\r\n            fieldMask = new FieldMask(context.fieldMask);\r\n            fieldTransforms = context.fieldTransforms;\r\n        }\r\n        else {\r\n            var validatedFieldPaths = [];\r\n            for (var _i = 0, fieldPaths_1 = fieldPaths; _i < fieldPaths_1.length; _i++) {\r\n                var stringOrFieldPath = fieldPaths_1[_i];\r\n                var fieldPath = void 0;\r\n                if (stringOrFieldPath instanceof FieldPath$1) {\r\n                    fieldPath = stringOrFieldPath;\r\n                }\r\n                else if (typeof stringOrFieldPath === 'string') {\r\n                    fieldPath = fieldPathFromDotSeparatedString(methodName, stringOrFieldPath);\r\n                }\r\n                else {\r\n                    fail('Expected stringOrFieldPath to be a string or a FieldPath');\r\n                }\r\n                if (!updateData.contains(fieldPath)) {\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Field '\" + fieldPath + \"' is specified in your field mask but missing from your input data.\");\r\n                }\r\n                validatedFieldPaths.push(fieldPath);\r\n            }\r\n            fieldMask = new FieldMask(validatedFieldPaths);\r\n            fieldTransforms = context.fieldTransforms.filter(function (transform) {\r\n                return fieldMask.covers(transform.field);\r\n            });\r\n        }\r\n        return new ParsedSetData(updateData, fieldMask, fieldTransforms);\r\n    };\r\n    /** Parse update data from an update() call. */\r\n    UserDataConverter.prototype.parseUpdateData = function (methodName, input) {\r\n        var _this = this;\r\n        var context = new ParseContext(UserDataSource.Update, methodName, FieldPath.EMPTY_PATH);\r\n        validatePlainObject('Data must be an object, but it was:', context, input);\r\n        var fieldMaskPaths = [];\r\n        var updateData = ObjectValue.EMPTY;\r\n        forEach(input, function (key, value) {\r\n            var path = fieldPathFromDotSeparatedString(methodName, key);\r\n            var childContext = context.childContextForFieldPath(path);\r\n            value = _this.runPreConverter(value, childContext);\r\n            if (value instanceof DeleteFieldValueImpl) {\r\n                // Add it to the field mask, but don't add anything to updateData.\r\n                fieldMaskPaths.push(path);\r\n            }\r\n            else {\r\n                var parsedValue = _this.parseData(value, childContext);\r\n                if (parsedValue != null) {\r\n                    fieldMaskPaths.push(path);\r\n                    updateData = updateData.set(path, parsedValue);\r\n                }\r\n            }\r\n        });\r\n        var mask = new FieldMask(fieldMaskPaths);\r\n        return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\r\n    };\r\n    /** Parse update data from a list of field/value arguments. */\r\n    UserDataConverter.prototype.parseUpdateVarargs = function (methodName, field, value, moreFieldsAndValues) {\r\n        var context = new ParseContext(UserDataSource.Update, methodName, FieldPath.EMPTY_PATH);\r\n        var keys = [fieldPathFromArgument(methodName, field)];\r\n        var values = [value];\r\n        if (moreFieldsAndValues.length % 2 !== 0) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + methodName + \"() needs to be called with an even number \" +\r\n                'of arguments that alternate between field names and values.');\r\n        }\r\n        for (var i = 0; i < moreFieldsAndValues.length; i += 2) {\r\n            keys.push(fieldPathFromArgument(methodName, moreFieldsAndValues[i]));\r\n            values.push(moreFieldsAndValues[i + 1]);\r\n        }\r\n        var fieldMaskPaths = [];\r\n        var updateData = ObjectValue.EMPTY;\r\n        for (var i = 0; i < keys.length; ++i) {\r\n            var path = keys[i];\r\n            var childContext = context.childContextForFieldPath(path);\r\n            var value_1 = this.runPreConverter(values[i], childContext);\r\n            if (value_1 instanceof DeleteFieldValueImpl) {\r\n                // Add it to the field mask, but don't add anything to updateData.\r\n                fieldMaskPaths.push(path);\r\n            }\r\n            else {\r\n                var parsedValue = this.parseData(value_1, childContext);\r\n                if (parsedValue != null) {\r\n                    fieldMaskPaths.push(path);\r\n                    updateData = updateData.set(path, parsedValue);\r\n                }\r\n            }\r\n        }\r\n        var mask = new FieldMask(fieldMaskPaths);\r\n        return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\r\n    };\r\n    /**\r\n     * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\r\n     * bound).\r\n     */\r\n    UserDataConverter.prototype.parseQueryValue = function (methodName, input) {\r\n        var context = new ParseContext(UserDataSource.Argument, methodName, FieldPath.EMPTY_PATH);\r\n        var parsed = this.parseData(input, context);\r\n        assert(parsed != null, 'Parsed data should not be null.');\r\n        assert(context.fieldTransforms.length === 0, 'Field transforms should have been disallowed.');\r\n        return parsed;\r\n    };\r\n    /** Sends data through this.preConverter, handling any thrown errors. */\r\n    UserDataConverter.prototype.runPreConverter = function (input, context) {\r\n        try {\r\n            return this.preConverter(input);\r\n        }\r\n        catch (e) {\r\n            var message = errorMessage(e);\r\n            throw context.createError(message);\r\n        }\r\n    };\r\n    /**\r\n     * Internal helper for parsing user data.\r\n     *\r\n     * @param input Data to be parsed.\r\n     * @param context A context object representing the current path being parsed,\r\n     * the source of the data being parsed, etc.\r\n     * @return The parsed value, or null if the value was a FieldValue sentinel\r\n     * that should not be included in the resulting parsed data.\r\n     */\r\n    UserDataConverter.prototype.parseData = function (input, context) {\r\n        input = this.runPreConverter(input, context);\r\n        if (looksLikeJsonObject(input)) {\r\n            validatePlainObject('Unsupported field value:', context, input);\r\n            return this.parseObject(input, context);\r\n        }\r\n        else if (input instanceof FieldValueImpl) {\r\n            // FieldValues usually parse into transforms (except FieldValue.delete())\r\n            // in which case we do not want to include this field in our parsed data\r\n            // (as doing so will overwrite the field directly prior to the transform\r\n            // trying to transform it). So we don't add this location to\r\n            // context.fieldMask and we return null as our parsing result.\r\n            this.parseSentinelFieldValue(input, context);\r\n            return null;\r\n        }\r\n        else {\r\n            // If context.path is null we are inside an array and we don't support\r\n            // field mask paths more granular than the top-level array.\r\n            if (context.path) {\r\n                context.fieldMask.push(context.path);\r\n            }\r\n            if (input instanceof Array) {\r\n                // TODO(b/34871131): Include the path containing the array in the error\r\n                // message.\r\n                if (context.arrayElement) {\r\n                    throw context.createError('Nested arrays are not supported');\r\n                }\r\n                return this.parseArray(input, context);\r\n            }\r\n            else {\r\n                return this.parseScalarValue(input, context);\r\n            }\r\n        }\r\n    };\r\n    UserDataConverter.prototype.parseObject = function (obj, context) {\r\n        var _this = this;\r\n        var result = new SortedMap(primitiveComparator);\r\n        forEach(obj, function (key, val) {\r\n            var parsedValue = _this.parseData(val, context.childContextForField(key));\r\n            if (parsedValue != null) {\r\n                result = result.insert(key, parsedValue);\r\n            }\r\n        });\r\n        return new ObjectValue(result);\r\n    };\r\n    UserDataConverter.prototype.parseArray = function (array, context) {\r\n        var result = [];\r\n        var entryIndex = 0;\r\n        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\r\n            var entry = array_1[_i];\r\n            var parsedEntry = this.parseData(entry, context.childContextForArray(entryIndex));\r\n            if (parsedEntry == null) {\r\n                // Just include nulls in the array for fields being replaced with a\r\n                // sentinel.\r\n                parsedEntry = NullValue.INSTANCE;\r\n            }\r\n            result.push(parsedEntry);\r\n            entryIndex++;\r\n        }\r\n        return new ArrayValue(result);\r\n    };\r\n    /**\r\n     * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\r\n     * context.fieldTransforms.\r\n     */\r\n    UserDataConverter.prototype.parseSentinelFieldValue = function (value, context) {\r\n        // Sentinels are only supported with writes, and not within arrays.\r\n        if (!isWrite(context.dataSource)) {\r\n            throw context.createError(value.methodName + \"() can only be used with update() and set()\");\r\n        }\r\n        if (context.path === null) {\r\n            throw context.createError(value.methodName + \"() is not currently supported inside arrays\");\r\n        }\r\n        if (value instanceof DeleteFieldValueImpl) {\r\n            if (context.dataSource === UserDataSource.MergeSet) {\r\n                // No transform to add for a delete, but we need to add it to our\r\n                // fieldMask so it gets deleted.\r\n                context.fieldMask.push(context.path);\r\n            }\r\n            else if (context.dataSource === UserDataSource.Update) {\r\n                assert(context.path.length > 0, 'FieldValue.delete() at the top level should have already' +\r\n                    ' been handled.');\r\n                throw context.createError('FieldValue.delete() can only appear at the top level ' +\r\n                    'of your update data');\r\n            }\r\n            else {\r\n                // We shouldn't encounter delete sentinels for queries or non-merge set() calls.\r\n                throw context.createError('FieldValue.delete() cannot be used with set() unless you pass ' +\r\n                    '{merge:true}');\r\n            }\r\n        }\r\n        else if (value instanceof ServerTimestampFieldValueImpl) {\r\n            context.fieldTransforms.push(new FieldTransform(context.path, ServerTimestampTransform.instance));\r\n        }\r\n        else if (value instanceof ArrayUnionFieldValueImpl) {\r\n            var parsedElements = this.parseArrayTransformElements(value.methodName, value._elements);\r\n            var arrayUnion = new ArrayUnionTransformOperation(parsedElements);\r\n            context.fieldTransforms.push(new FieldTransform(context.path, arrayUnion));\r\n        }\r\n        else if (value instanceof ArrayRemoveFieldValueImpl) {\r\n            var parsedElements = this.parseArrayTransformElements(value.methodName, value._elements);\r\n            var arrayRemove = new ArrayRemoveTransformOperation(parsedElements);\r\n            context.fieldTransforms.push(new FieldTransform(context.path, arrayRemove));\r\n        }\r\n        else {\r\n            fail('Unknown FieldValue type: ' + value);\r\n        }\r\n    };\r\n    /**\r\n     * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\r\n     *\r\n     * @return The parsed value\r\n     */\r\n    UserDataConverter.prototype.parseScalarValue = function (value, context) {\r\n        if (value === null) {\r\n            return NullValue.INSTANCE;\r\n        }\r\n        else if (typeof value === 'number') {\r\n            if (isSafeInteger(value)) {\r\n                return new IntegerValue(value);\r\n            }\r\n            else {\r\n                return new DoubleValue(value);\r\n            }\r\n        }\r\n        else if (typeof value === 'boolean') {\r\n            return BooleanValue.of(value);\r\n        }\r\n        else if (typeof value === 'string') {\r\n            return new StringValue(value);\r\n        }\r\n        else if (value instanceof Date) {\r\n            return new TimestampValue(Timestamp.fromDate(value));\r\n        }\r\n        else if (value instanceof Timestamp) {\r\n            // Firestore backend truncates precision down to microseconds. To ensure\r\n            // offline mode works the same with regards to truncation, perform the\r\n            // truncation immediately without waiting for the backend to do that.\r\n            return new TimestampValue(new Timestamp(value.seconds, Math.floor(value.nanoseconds / 1000) * 1000));\r\n        }\r\n        else if (value instanceof GeoPoint) {\r\n            return new GeoPointValue(value);\r\n        }\r\n        else if (value instanceof Blob) {\r\n            return new BlobValue(value);\r\n        }\r\n        else if (value instanceof DocumentKeyReference) {\r\n            return new RefValue(value.databaseId, value.key);\r\n        }\r\n        else {\r\n            throw context.createError(\"Unsupported field value: \" + valueDescription(value));\r\n        }\r\n    };\r\n    UserDataConverter.prototype.parseArrayTransformElements = function (methodName, elements) {\r\n        var _this = this;\r\n        return elements.map(function (element, i) {\r\n            // Although array transforms are used with writes, the actual elements\r\n            // being unioned or removed are not considered writes since they cannot\r\n            // contain any FieldValue sentinels, etc.\r\n            var context = new ParseContext(UserDataSource.Argument, methodName, FieldPath.EMPTY_PATH);\r\n            return _this.parseData(element, context.childContextForArray(i));\r\n        });\r\n    };\r\n    return UserDataConverter;\r\n}());\r\n/**\r\n * Checks whether an object looks like a JSON object that should be converted\r\n * into a struct. Normal class/prototype instances are considered to look like\r\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\r\n * GeoPoints, etc. are not considered to look like JSON objects since they map\r\n * to specific FieldValue types other than ObjectValue.\r\n */\r\nfunction looksLikeJsonObject(input) {\r\n    return (typeof input === 'object' &&\r\n        input !== null &&\r\n        !(input instanceof Array) &&\r\n        !(input instanceof Date) &&\r\n        !(input instanceof Timestamp) &&\r\n        !(input instanceof GeoPoint) &&\r\n        !(input instanceof Blob) &&\r\n        !(input instanceof DocumentKeyReference) &&\r\n        !(input instanceof FieldValueImpl));\r\n}\r\nfunction validatePlainObject(message, context, input) {\r\n    if (!looksLikeJsonObject(input) || !isPlainObject(input)) {\r\n        var description = valueDescription(input);\r\n        if (description === 'an object') {\r\n            // Massage the error if it was an object.\r\n            throw context.createError(message + ' a custom object');\r\n        }\r\n        else {\r\n            throw context.createError(message + ' ' + description);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\r\n */\r\nfunction fieldPathFromArgument(methodName, path) {\r\n    if (path instanceof FieldPath$1) {\r\n        return path._internalPath;\r\n    }\r\n    else if (typeof path === 'string') {\r\n        return fieldPathFromDotSeparatedString(methodName, path);\r\n    }\r\n    else {\r\n        var message = 'Field path arguments must be of type string or FieldPath.';\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + methodName + \"() called with invalid data. \" + message);\r\n    }\r\n}\r\n/**\r\n * Wraps fromDotSeparatedString with an error message about the method that\r\n * was thrown.\r\n * @param methodName The publicly visible method name\r\n * @param path The dot-separated string form of a field path which will be split\r\n * on dots.\r\n */\r\nfunction fieldPathFromDotSeparatedString(methodName, path) {\r\n    try {\r\n        return fromDotSeparatedString(path)._internalPath;\r\n    }\r\n    catch (e) {\r\n        var message = errorMessage(e);\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function \" + methodName + \"() called with invalid data. \" + message);\r\n    }\r\n}\r\n/**\r\n * Extracts the message from a caught exception, which should be an Error object\r\n * though JS doesn't guarantee that.\r\n */\r\nfunction errorMessage(error) {\r\n    return error instanceof Error ? error.message : error.toString();\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// The objects that are a part of this API are exposed to third-parties as\r\n// compiled javascript so we want to flag our private members with a leading\r\n// underscore to discourage their use.\r\n// tslint:disable:strip-private-property-underscore\r\nvar DEFAULT_HOST = 'firestore.googleapis.com';\r\nvar DEFAULT_SSL = true;\r\nvar DEFAULT_TIMESTAMPS_IN_SNAPSHOTS = false;\r\n/**\r\n * A concrete type describing all the values that can be applied via a\r\n * user-supplied firestore.Settings object. This is a separate type so that\r\n * defaults can be supplied and the value can be checked for equality.\r\n */\r\nvar FirestoreSettings = /** @class */ (function () {\r\n    function FirestoreSettings(settings) {\r\n        if (settings.host === undefined) {\r\n            if (settings.ssl !== undefined) {\r\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Can't provide ssl option if host option is not set\");\r\n            }\r\n            this.host = DEFAULT_HOST;\r\n            this.ssl = DEFAULT_SSL;\r\n        }\r\n        else {\r\n            validateNamedType('settings', 'string', 'host', settings.host);\r\n            this.host = settings.host;\r\n            validateNamedOptionalType('settings', 'boolean', 'ssl', settings.ssl);\r\n            this.ssl = defaulted(settings.ssl, DEFAULT_SSL);\r\n        }\r\n        validateOptionNames('settings', settings, [\r\n            'host',\r\n            'ssl',\r\n            'credentials',\r\n            'timestampsInSnapshots'\r\n        ]);\r\n        validateNamedOptionalType('settings', 'object', 'credentials', settings.credentials);\r\n        this.credentials = settings.credentials;\r\n        validateNamedOptionalType('settings', 'boolean', 'timestampsInSnapshots', settings.timestampsInSnapshots);\r\n        this.timestampsInSnapshots = defaulted(settings.timestampsInSnapshots, DEFAULT_TIMESTAMPS_IN_SNAPSHOTS);\r\n    }\r\n    FirestoreSettings.prototype.isEqual = function (other) {\r\n        return (this.host === other.host &&\r\n            this.ssl === other.ssl &&\r\n            this.timestampsInSnapshots === other.timestampsInSnapshots &&\r\n            this.credentials === other.credentials);\r\n    };\r\n    return FirestoreSettings;\r\n}());\r\nvar FirestoreConfig = /** @class */ (function () {\r\n    function FirestoreConfig() {\r\n    }\r\n    return FirestoreConfig;\r\n}());\r\n/**\r\n * The root reference to the database.\r\n */\r\nvar Firestore = /** @class */ (function () {\r\n    function Firestore(databaseIdOrApp) {\r\n        var _this = this;\r\n        // Public for use in tests.\r\n        // TODO(mikelehen): Use modularized initialization instead.\r\n        this._queue = new AsyncQueue();\r\n        this.INTERNAL = {\r\n            delete: function (options) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                return tslib_1.__generator(this, function (_a) {\r\n                    if (this._firestoreClient) {\r\n                        return [2 /*return*/, this._firestoreClient.shutdown(options)];\r\n                    }\r\n                    return [2 /*return*/];\r\n                });\r\n            }); }\r\n        };\r\n        var config = new FirestoreConfig();\r\n        if (typeof databaseIdOrApp.options === 'object') {\r\n            // This is very likely a Firebase app object\r\n            // TODO(b/34177605): Can we somehow use instanceof?\r\n            var app = databaseIdOrApp;\r\n            config.firebaseApp = app;\r\n            config.databaseId = Firestore.databaseIdFromApp(app);\r\n            config.persistenceKey = config.firebaseApp.name;\r\n            config.credentials = new FirebaseCredentialsProvider(app);\r\n        }\r\n        else {\r\n            var external_1 = databaseIdOrApp;\r\n            if (!external_1.projectId) {\r\n                throw new FirestoreError(Code.INVALID_ARGUMENT, 'Must provide projectId');\r\n            }\r\n            config.databaseId = new DatabaseId(external_1.projectId, external_1.database);\r\n            // Use a default persistenceKey that lines up with FirebaseApp.\r\n            config.persistenceKey = '[DEFAULT]';\r\n            config.credentials = new EmptyCredentialsProvider();\r\n        }\r\n        config.settings = new FirestoreSettings({});\r\n        this._config = config;\r\n        this._databaseId = config.databaseId;\r\n    }\r\n    Firestore.prototype.settings = function (settingsLiteral) {\r\n        validateExactNumberOfArgs('Firestore.settings', arguments, 1);\r\n        validateArgType('Firestore.settings', 'object', 1, settingsLiteral);\r\n        if (contains(settingsLiteral, 'persistence')) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, '\"persistence\" is now specified with a separate call to ' +\r\n                'firestore.enablePersistence().');\r\n        }\r\n        var newSettings = new FirestoreSettings(settingsLiteral);\r\n        if (this._firestoreClient && !this._config.settings.isEqual(newSettings)) {\r\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'Firestore has already been started and its settings can no longer ' +\r\n                'be changed. You can only call settings() before calling any other ' +\r\n                'methods on a Firestore object.');\r\n        }\r\n        this._config.settings = newSettings;\r\n        if (newSettings.credentials !== undefined) {\r\n            this._config.credentials = makeCredentialsProvider(newSettings.credentials);\r\n        }\r\n    };\r\n    Firestore.prototype.enableNetwork = function () {\r\n        this.ensureClientConfigured();\r\n        return this._firestoreClient.enableNetwork();\r\n    };\r\n    Firestore.prototype.disableNetwork = function () {\r\n        this.ensureClientConfigured();\r\n        return this._firestoreClient.disableNetwork();\r\n    };\r\n    Firestore.prototype.enablePersistence = function () {\r\n        if (this._firestoreClient) {\r\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'Firestore has already been started and persistence can no longer ' +\r\n                'be enabled. You can only call enablePersistence() before calling ' +\r\n                'any other methods on a Firestore object.');\r\n        }\r\n        return this.configureClient(/* persistence= */ true);\r\n    };\r\n    Firestore.prototype.ensureClientConfigured = function () {\r\n        if (!this._firestoreClient) {\r\n            this.configureClient(/* persistence= */ false);\r\n        }\r\n        return this._firestoreClient;\r\n    };\r\n    Firestore.prototype.configureClient = function (persistence) {\r\n        var _this = this;\r\n        assert(!!this._config.settings.host, 'FirestoreSettings.host cannot be falsey');\r\n        if (!this._config.settings.timestampsInSnapshots) {\r\n            error(\"\\nThe behavior for Date objects stored in Firestore is going to change\\nAND YOUR APP MAY BREAK.\\nTo hide this warning and ensure your app does not break, you need to add the\\nfollowing code to your app before calling any other Cloud Firestore methods:\\n\\n  const firestore = firebase.firestore();\\n  const settings = {/* your settings... */ timestampsInSnapshots: true};\\n  firestore.settings(settings);\\n\\nWith this change, timestamps stored in Cloud Firestore will be read back as\\nFirebase Timestamp objects instead of as system Date objects. So you will also\\nneed to update code expecting a Date to instead expect a Timestamp. For example:\\n\\n  // Old:\\n  const date = snapshot.get('created_at');\\n  // New:\\n  const timestamp = snapshot.get('created_at');\\n  const date = timestamp.toDate();\\n\\nPlease audit all existing usages of Date when you enable the new behavior. In a\\nfuture release, the behavior will change to the new behavior, so if you do not\\nfollow these steps, YOUR APP MAY BREAK.\");\r\n        }\r\n        assert(!this._firestoreClient, 'configureClient() called multiple times');\r\n        var databaseInfo = new DatabaseInfo(this._config.databaseId, this._config.persistenceKey, this._config.settings.host, this._config.settings.ssl);\r\n        var preConverter = function (value) {\r\n            if (value instanceof DocumentReference) {\r\n                var thisDb = _this._config.databaseId;\r\n                var otherDb = value.firestore._config.databaseId;\r\n                if (!otherDb.isEqual(thisDb)) {\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Document reference is for database ' +\r\n                        (otherDb.projectId + \"/\" + otherDb.database + \" but should be \") +\r\n                        (\"for database \" + thisDb.projectId + \"/\" + thisDb.database));\r\n                }\r\n                return new DocumentKeyReference(_this._config.databaseId, value._key);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        };\r\n        this._dataConverter = new UserDataConverter(preConverter);\r\n        this._firestoreClient = new FirestoreClient(PlatformSupport.getPlatform(), databaseInfo, this._config.credentials, this._queue);\r\n        return this._firestoreClient.start(persistence);\r\n    };\r\n    Firestore.databaseIdFromApp = function (app) {\r\n        var options = app.options;\r\n        if (!contains(options, 'projectId')) {\r\n            // TODO(b/62673263): We can safely remove the special handling of\r\n            // 'firestoreId' once alpha testers have upgraded.\r\n            if (contains(options, 'firestoreId')) {\r\n                throw new FirestoreError(Code.INVALID_ARGUMENT, '\"firestoreId\" is now specified as \"projectId\" in ' +\r\n                    'firebase.initializeApp.');\r\n            }\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, '\"projectId\" not provided in firebase.initializeApp.');\r\n        }\r\n        if (contains(options, 'firestoreOptions')) {\r\n            // TODO(b/62673263): We can safely remove the special handling of\r\n            // 'firestoreOptions' once alpha testers have upgraded.\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, '\"firestoreOptions\" values are now specified with ' +\r\n                'Firestore.settings()');\r\n        }\r\n        var projectId = options['projectId'];\r\n        if (!projectId || typeof projectId !== 'string') {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'projectId must be a string in FirebaseApp.options');\r\n        }\r\n        return new DatabaseId(projectId);\r\n    };\r\n    Object.defineProperty(Firestore.prototype, \"app\", {\r\n        get: function () {\r\n            if (!this._config.firebaseApp) {\r\n                throw new FirestoreError(Code.FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is \" +\r\n                    'not available');\r\n            }\r\n            return this._config.firebaseApp;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Firestore.prototype.collection = function (pathString) {\r\n        validateExactNumberOfArgs('Firestore.collection', arguments, 1);\r\n        validateArgType('Firestore.collection', 'string', 1, pathString);\r\n        if (!pathString) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Must provide a non-empty collection path to collection()');\r\n        }\r\n        this.ensureClientConfigured();\r\n        return new CollectionReference(ResourcePath.fromString(pathString), this);\r\n    };\r\n    Firestore.prototype.doc = function (pathString) {\r\n        validateExactNumberOfArgs('Firestore.doc', arguments, 1);\r\n        validateArgType('Firestore.doc', 'string', 1, pathString);\r\n        if (!pathString) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Must provide a non-empty document path to doc()');\r\n        }\r\n        this.ensureClientConfigured();\r\n        return DocumentReference.forPath(ResourcePath.fromString(pathString), this);\r\n    };\r\n    Firestore.prototype.runTransaction = function (updateFunction) {\r\n        var _this = this;\r\n        validateExactNumberOfArgs('Firestore.runTransaction', arguments, 1);\r\n        validateArgType('Firestore.runTransaction', 'function', 1, updateFunction);\r\n        return this.ensureClientConfigured().transaction(function (transaction) {\r\n            return updateFunction(new Transaction$1(_this, transaction));\r\n        });\r\n    };\r\n    Firestore.prototype.batch = function () {\r\n        this.ensureClientConfigured();\r\n        return new WriteBatch(this);\r\n    };\r\n    Object.defineProperty(Firestore, \"logLevel\", {\r\n        get: function () {\r\n            switch (getLogLevel()) {\r\n                case LogLevel.DEBUG:\r\n                    return 'debug';\r\n                case LogLevel.ERROR:\r\n                    return 'error';\r\n                case LogLevel.SILENT:\r\n                    return 'silent';\r\n                default:\r\n                    return fail('Unknown log level: ' + getLogLevel());\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Firestore.setLogLevel = function (level) {\r\n        validateExactNumberOfArgs('Firestore.setLogLevel', arguments, 1);\r\n        validateArgType('Firestore.setLogLevel', 'string', 1, level);\r\n        switch (level) {\r\n            case 'debug':\r\n                setLogLevel(LogLevel.DEBUG);\r\n                break;\r\n            case 'error':\r\n                setLogLevel(LogLevel.ERROR);\r\n                break;\r\n            case 'silent':\r\n                setLogLevel(LogLevel.SILENT);\r\n                break;\r\n            default:\r\n                throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid log level: ' + level);\r\n        }\r\n    };\r\n    // Note: this is not a property because the minifier can't work correctly with\r\n    // the way TypeScript compiler outputs properties.\r\n    Firestore.prototype._areTimestampsInSnapshotsEnabled = function () {\r\n        return this._config.settings.timestampsInSnapshots;\r\n    };\r\n    return Firestore;\r\n}());\r\n/**\r\n * A reference to a transaction.\r\n */\r\nvar Transaction$1 = /** @class */ (function () {\r\n    function Transaction(_firestore, _transaction) {\r\n        this._firestore = _firestore;\r\n        this._transaction = _transaction;\r\n    }\r\n    Transaction.prototype.get = function (documentRef) {\r\n        var _this = this;\r\n        validateExactNumberOfArgs('Transaction.get', arguments, 1);\r\n        var ref = validateReference('Transaction.get', documentRef, this._firestore);\r\n        return this._transaction\r\n            .lookup([ref._key])\r\n            .then(function (docs) {\r\n            if (!docs || docs.length !== 1) {\r\n                return fail('Mismatch in docs returned from document lookup.');\r\n            }\r\n            var doc = docs[0];\r\n            if (doc instanceof NoDocument) {\r\n                return new DocumentSnapshot(_this._firestore, ref._key, null, false);\r\n            }\r\n            return new DocumentSnapshot(_this._firestore, ref._key, doc, false);\r\n        });\r\n    };\r\n    Transaction.prototype.set = function (documentRef, value, options) {\r\n        validateBetweenNumberOfArgs('Transaction.set', arguments, 2, 3);\r\n        var ref = validateReference('Transaction.set', documentRef, this._firestore);\r\n        options = validateSetOptions('Transaction.set', options);\r\n        var parsed = options.merge || options.mergeFields\r\n            ? this._firestore._dataConverter.parseMergeData('Transaction.set', value, options.mergeFields)\r\n            : this._firestore._dataConverter.parseSetData('Transaction.set', value);\r\n        this._transaction.set(ref._key, parsed);\r\n        return this;\r\n    };\r\n    Transaction.prototype.update = function (documentRef, fieldOrUpdateData, value) {\r\n        var moreFieldsAndValues = [];\r\n        for (var _i = 3; _i < arguments.length; _i++) {\r\n            moreFieldsAndValues[_i - 3] = arguments[_i];\r\n        }\r\n        var ref;\r\n        var parsed;\r\n        if (typeof fieldOrUpdateData === 'string' ||\r\n            fieldOrUpdateData instanceof FieldPath$1) {\r\n            validateAtLeastNumberOfArgs('Transaction.update', arguments, 3);\r\n            ref = validateReference('Transaction.update', documentRef, this._firestore);\r\n            parsed = this._firestore._dataConverter.parseUpdateVarargs('Transaction.update', fieldOrUpdateData, value, moreFieldsAndValues);\r\n        }\r\n        else {\r\n            validateExactNumberOfArgs('Transaction.update', arguments, 2);\r\n            ref = validateReference('Transaction.update', documentRef, this._firestore);\r\n            parsed = this._firestore._dataConverter.parseUpdateData('Transaction.update', fieldOrUpdateData);\r\n        }\r\n        this._transaction.update(ref._key, parsed);\r\n        return this;\r\n    };\r\n    Transaction.prototype.delete = function (documentRef) {\r\n        validateExactNumberOfArgs('Transaction.delete', arguments, 1);\r\n        var ref = validateReference('Transaction.delete', documentRef, this._firestore);\r\n        this._transaction.delete(ref._key);\r\n        return this;\r\n    };\r\n    return Transaction;\r\n}());\r\nvar WriteBatch = /** @class */ (function () {\r\n    function WriteBatch(_firestore) {\r\n        this._firestore = _firestore;\r\n        this._mutations = [];\r\n        this._committed = false;\r\n    }\r\n    WriteBatch.prototype.set = function (documentRef, value, options) {\r\n        validateBetweenNumberOfArgs('WriteBatch.set', arguments, 2, 3);\r\n        this.verifyNotCommitted();\r\n        var ref = validateReference('WriteBatch.set', documentRef, this._firestore);\r\n        options = validateSetOptions('WriteBatch.set', options);\r\n        var parsed = options.merge || options.mergeFields\r\n            ? this._firestore._dataConverter.parseMergeData('WriteBatch.set', value, options.mergeFields)\r\n            : this._firestore._dataConverter.parseSetData('WriteBatch.set', value);\r\n        this._mutations = this._mutations.concat(parsed.toMutations(ref._key, Precondition.NONE));\r\n        return this;\r\n    };\r\n    WriteBatch.prototype.update = function (documentRef, fieldOrUpdateData, value) {\r\n        var moreFieldsAndValues = [];\r\n        for (var _i = 3; _i < arguments.length; _i++) {\r\n            moreFieldsAndValues[_i - 3] = arguments[_i];\r\n        }\r\n        this.verifyNotCommitted();\r\n        var ref;\r\n        var parsed;\r\n        if (typeof fieldOrUpdateData === 'string' ||\r\n            fieldOrUpdateData instanceof FieldPath$1) {\r\n            validateAtLeastNumberOfArgs('WriteBatch.update', arguments, 3);\r\n            ref = validateReference('WriteBatch.update', documentRef, this._firestore);\r\n            parsed = this._firestore._dataConverter.parseUpdateVarargs('WriteBatch.update', fieldOrUpdateData, value, moreFieldsAndValues);\r\n        }\r\n        else {\r\n            validateExactNumberOfArgs('WriteBatch.update', arguments, 2);\r\n            ref = validateReference('WriteBatch.update', documentRef, this._firestore);\r\n            parsed = this._firestore._dataConverter.parseUpdateData('WriteBatch.update', fieldOrUpdateData);\r\n        }\r\n        this._mutations = this._mutations.concat(parsed.toMutations(ref._key, Precondition.exists(true)));\r\n        return this;\r\n    };\r\n    WriteBatch.prototype.delete = function (documentRef) {\r\n        validateExactNumberOfArgs('WriteBatch.delete', arguments, 1);\r\n        this.verifyNotCommitted();\r\n        var ref = validateReference('WriteBatch.delete', documentRef, this._firestore);\r\n        this._mutations = this._mutations.concat(new DeleteMutation(ref._key, Precondition.NONE));\r\n        return this;\r\n    };\r\n    WriteBatch.prototype.commit = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.verifyNotCommitted();\r\n                this._committed = true;\r\n                if (this._mutations.length > 0) {\r\n                    return [2 /*return*/, this._firestore.ensureClientConfigured().write(this._mutations)];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    WriteBatch.prototype.verifyNotCommitted = function () {\r\n        if (this._committed) {\r\n            throw new FirestoreError(Code.FAILED_PRECONDITION, 'A write batch can no longer be used after commit() ' +\r\n                'has been called.');\r\n        }\r\n    };\r\n    return WriteBatch;\r\n}());\r\n/**\r\n * A reference to a particular document in a collection in the database.\r\n */\r\nvar DocumentReference = /** @class */ (function () {\r\n    function DocumentReference(_key, firestore) {\r\n        this._key = _key;\r\n        this.firestore = firestore;\r\n        this._firestoreClient = this.firestore.ensureClientConfigured();\r\n    }\r\n    DocumentReference.forPath = function (path, firestore) {\r\n        if (path.length % 2 !== 0) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid document reference. Document ' +\r\n                'references must have an even number of segments, but ' +\r\n                (path.canonicalString() + \" has \" + path.length));\r\n        }\r\n        return new DocumentReference(new DocumentKey(path), firestore);\r\n    };\r\n    Object.defineProperty(DocumentReference.prototype, \"id\", {\r\n        get: function () {\r\n            return this._key.path.lastSegment();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DocumentReference.prototype, \"parent\", {\r\n        get: function () {\r\n            return new CollectionReference(this._key.path.popLast(), this.firestore);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DocumentReference.prototype, \"path\", {\r\n        get: function () {\r\n            return this._key.path.canonicalString();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DocumentReference.prototype.collection = function (pathString) {\r\n        validateExactNumberOfArgs('DocumentReference.collection', arguments, 1);\r\n        validateArgType('DocumentReference.collection', 'string', 1, pathString);\r\n        if (!pathString) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Must provide a non-empty collection name to collection()');\r\n        }\r\n        var path = ResourcePath.fromString(pathString);\r\n        return new CollectionReference(this._key.path.child(path), this.firestore);\r\n    };\r\n    DocumentReference.prototype.isEqual = function (other) {\r\n        if (!(other instanceof DocumentReference)) {\r\n            throw invalidClassError('isEqual', 'DocumentReference', 1, other);\r\n        }\r\n        return this.firestore === other.firestore && this._key.isEqual(other._key);\r\n    };\r\n    DocumentReference.prototype.set = function (value, options) {\r\n        validateBetweenNumberOfArgs('DocumentReference.set', arguments, 1, 2);\r\n        options = validateSetOptions('DocumentReference.set', options);\r\n        var parsed = options.merge || options.mergeFields\r\n            ? this.firestore._dataConverter.parseMergeData('DocumentReference.set', value, options.mergeFields)\r\n            : this.firestore._dataConverter.parseSetData('DocumentReference.set', value);\r\n        return this._firestoreClient.write(parsed.toMutations(this._key, Precondition.NONE));\r\n    };\r\n    DocumentReference.prototype.update = function (fieldOrUpdateData, value) {\r\n        var moreFieldsAndValues = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            moreFieldsAndValues[_i - 2] = arguments[_i];\r\n        }\r\n        var parsed;\r\n        if (typeof fieldOrUpdateData === 'string' ||\r\n            fieldOrUpdateData instanceof FieldPath$1) {\r\n            validateAtLeastNumberOfArgs('DocumentReference.update', arguments, 2);\r\n            parsed = this.firestore._dataConverter.parseUpdateVarargs('DocumentReference.update', fieldOrUpdateData, value, moreFieldsAndValues);\r\n        }\r\n        else {\r\n            validateExactNumberOfArgs('DocumentReference.update', arguments, 1);\r\n            parsed = this.firestore._dataConverter.parseUpdateData('DocumentReference.update', fieldOrUpdateData);\r\n        }\r\n        return this._firestoreClient.write(parsed.toMutations(this._key, Precondition.exists(true)));\r\n    };\r\n    DocumentReference.prototype.delete = function () {\r\n        validateExactNumberOfArgs('DocumentReference.delete', arguments, 0);\r\n        return this._firestoreClient.write([\r\n            new DeleteMutation(this._key, Precondition.NONE)\r\n        ]);\r\n    };\r\n    DocumentReference.prototype.onSnapshot = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        validateBetweenNumberOfArgs('DocumentReference.onSnapshot', arguments, 1, 4);\r\n        var options = {\r\n            includeMetadataChanges: false\r\n        };\r\n        var observer;\r\n        var currArg = 0;\r\n        if (typeof args[currArg] === 'object' &&\r\n            !isPartialObserver(args[currArg])) {\r\n            options = args[currArg];\r\n            validateOptionNames('DocumentReference.onSnapshot', options, [\r\n                'includeMetadataChanges'\r\n            ]);\r\n            validateNamedOptionalType('DocumentReference.onSnapshot', 'boolean', 'includeMetadataChanges', options.includeMetadataChanges);\r\n            currArg++;\r\n        }\r\n        var internalOptions = {\r\n            includeMetadataChanges: options.includeMetadataChanges\r\n        };\r\n        if (isPartialObserver(args[currArg])) {\r\n            observer = args[currArg];\r\n        }\r\n        else {\r\n            validateArgType('DocumentReference.onSnapshot', 'function', currArg, args[currArg]);\r\n            validateOptionalArgType('DocumentReference.onSnapshot', 'function', currArg + 1, args[currArg + 1]);\r\n            validateOptionalArgType('DocumentReference.onSnapshot', 'function', currArg + 2, args[currArg + 2]);\r\n            observer = {\r\n                next: args[currArg],\r\n                error: args[currArg + 1],\r\n                complete: args[currArg + 2]\r\n            };\r\n        }\r\n        return this.onSnapshotInternal(internalOptions, observer);\r\n    };\r\n    DocumentReference.prototype.onSnapshotInternal = function (options, observer) {\r\n        var _this = this;\r\n        var errHandler = function (err) {\r\n            console.error('Uncaught Error in onSnapshot:', err);\r\n        };\r\n        if (observer.error) {\r\n            errHandler = observer.error.bind(observer);\r\n        }\r\n        var asyncObserver = new AsyncObserver({\r\n            next: function (snapshot) {\r\n                if (observer.next) {\r\n                    assert(snapshot.docs.size <= 1, 'Too many documents returned on a document query');\r\n                    var doc = snapshot.docs.get(_this._key);\r\n                    observer.next(new DocumentSnapshot(_this.firestore, _this._key, doc, snapshot.fromCache));\r\n                }\r\n            },\r\n            error: errHandler\r\n        });\r\n        var internalListener = this._firestoreClient.listen(Query.atPath(this._key.path), asyncObserver, options);\r\n        return function () {\r\n            asyncObserver.mute();\r\n            _this._firestoreClient.unlisten(internalListener);\r\n        };\r\n    };\r\n    DocumentReference.prototype.get = function (options) {\r\n        var _this = this;\r\n        validateOptionNames('DocumentReference.get', options, ['source']);\r\n        if (options) {\r\n            validateNamedOptionalPropertyEquals('DocumentReference.get', 'options', 'source', options.source, ['default', 'server', 'cache']);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            if (options && options.source === 'cache') {\r\n                _this.firestore\r\n                    .ensureClientConfigured()\r\n                    .getDocumentFromLocalCache(_this._key)\r\n                    .then(function (doc) {\r\n                    resolve(new DocumentSnapshot(_this.firestore, _this._key, doc, \r\n                    /*fromCache=*/ true));\r\n                }, reject);\r\n            }\r\n            else {\r\n                _this.getViaSnapshotListener(resolve, reject, options);\r\n            }\r\n        });\r\n    };\r\n    DocumentReference.prototype.getViaSnapshotListener = function (resolve, reject, options) {\r\n        var unlisten = this.onSnapshotInternal({\r\n            includeMetadataChanges: true,\r\n            waitForSyncWhenOnline: true\r\n        }, {\r\n            next: function (snap) {\r\n                // Remove query first before passing event to user to avoid\r\n                // user actions affecting the now stale query.\r\n                unlisten();\r\n                if (!snap.exists && snap.metadata.fromCache) {\r\n                    // TODO(dimond): If we're online and the document doesn't\r\n                    // exist then we resolve with a doc.exists set to false. If\r\n                    // we're offline however, we reject the Promise in this\r\n                    // case. Two options: 1) Cache the negative response from\r\n                    // the server so we can deliver that even when you're\r\n                    // offline 2) Actually reject the Promise in the online case\r\n                    // if the document doesn't exist.\r\n                    reject(new FirestoreError(Code.UNAVAILABLE, 'Failed to get document because the client is ' + 'offline.'));\r\n                }\r\n                else if (snap.exists &&\r\n                    snap.metadata.fromCache &&\r\n                    options &&\r\n                    options.source === 'server') {\r\n                    reject(new FirestoreError(Code.UNAVAILABLE, 'Failed to get document from server. (However, this ' +\r\n                        'document does exist in the local cache. Run again ' +\r\n                        'without setting source to \"server\" to ' +\r\n                        'retrieve the cached document.)'));\r\n                }\r\n                else {\r\n                    resolve(snap);\r\n                }\r\n            },\r\n            error: reject\r\n        });\r\n    };\r\n    return DocumentReference;\r\n}());\r\nvar SnapshotMetadata = /** @class */ (function () {\r\n    function SnapshotMetadata(hasPendingWrites, fromCache) {\r\n        this.hasPendingWrites = hasPendingWrites;\r\n        this.fromCache = fromCache;\r\n    }\r\n    SnapshotMetadata.prototype.isEqual = function (other) {\r\n        return (this.hasPendingWrites === other.hasPendingWrites &&\r\n            this.fromCache === other.fromCache);\r\n    };\r\n    return SnapshotMetadata;\r\n}());\r\nvar DocumentSnapshot = /** @class */ (function () {\r\n    function DocumentSnapshot(_firestore, _key, _document, _fromCache) {\r\n        this._firestore = _firestore;\r\n        this._key = _key;\r\n        this._document = _document;\r\n        this._fromCache = _fromCache;\r\n    }\r\n    DocumentSnapshot.prototype.data = function (options) {\r\n        validateBetweenNumberOfArgs('DocumentSnapshot.data', arguments, 0, 1);\r\n        options = validateSnapshotOptions('DocumentSnapshot.data', options);\r\n        return !this._document\r\n            ? undefined\r\n            : this.convertObject(this._document.data, FieldValueOptions.fromSnapshotOptions(options, this._firestore._areTimestampsInSnapshotsEnabled()));\r\n    };\r\n    DocumentSnapshot.prototype.get = function (fieldPath, options) {\r\n        validateBetweenNumberOfArgs('DocumentSnapshot.get', arguments, 1, 2);\r\n        options = validateSnapshotOptions('DocumentSnapshot.get', options);\r\n        if (this._document) {\r\n            var value = this._document.data.field(fieldPathFromArgument('DocumentSnapshot.get', fieldPath));\r\n            if (value !== undefined) {\r\n                return this.convertValue(value, FieldValueOptions.fromSnapshotOptions(options, this._firestore._areTimestampsInSnapshotsEnabled()));\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    Object.defineProperty(DocumentSnapshot.prototype, \"id\", {\r\n        get: function () {\r\n            return this._key.path.lastSegment();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DocumentSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return new DocumentReference(this._key, this._firestore);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DocumentSnapshot.prototype, \"exists\", {\r\n        get: function () {\r\n            return this._document !== null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DocumentSnapshot.prototype, \"metadata\", {\r\n        get: function () {\r\n            return new SnapshotMetadata(this._document !== null && this._document.hasLocalMutations, this._fromCache);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DocumentSnapshot.prototype.isEqual = function (other) {\r\n        if (!(other instanceof DocumentSnapshot)) {\r\n            throw invalidClassError('isEqual', 'DocumentSnapshot', 1, other);\r\n        }\r\n        return (this._firestore === other._firestore &&\r\n            this._fromCache === other._fromCache &&\r\n            this._key.isEqual(other._key) &&\r\n            (this._document === null\r\n                ? other._document === null\r\n                : this._document.isEqual(other._document)));\r\n    };\r\n    DocumentSnapshot.prototype.convertObject = function (data, options) {\r\n        var _this = this;\r\n        var result = {};\r\n        data.forEach(function (key, value) {\r\n            result[key] = _this.convertValue(value, options);\r\n        });\r\n        return result;\r\n    };\r\n    DocumentSnapshot.prototype.convertValue = function (value, options) {\r\n        if (value instanceof ObjectValue) {\r\n            return this.convertObject(value, options);\r\n        }\r\n        else if (value instanceof ArrayValue) {\r\n            return this.convertArray(value, options);\r\n        }\r\n        else if (value instanceof RefValue) {\r\n            var key = value.value(options);\r\n            var database = this._firestore.ensureClientConfigured().databaseId();\r\n            if (!value.databaseId.isEqual(database)) {\r\n                // TODO(b/64130202): Somehow support foreign references.\r\n                error(\"Document \" + this._key.path + \" contains a document \" +\r\n                    \"reference within a different database (\" +\r\n                    (value.databaseId.projectId + \"/\" + value.databaseId.database + \") which is not \") +\r\n                    \"supported. It will be treated as a reference in the current \" +\r\n                    (\"database (\" + database.projectId + \"/\" + database.database + \") \") +\r\n                    \"instead.\");\r\n            }\r\n            return new DocumentReference(key, this._firestore);\r\n        }\r\n        else {\r\n            return value.value(options);\r\n        }\r\n    };\r\n    DocumentSnapshot.prototype.convertArray = function (data, options) {\r\n        var _this = this;\r\n        return data.internalValue.map(function (value) {\r\n            return _this.convertValue(value, options);\r\n        });\r\n    };\r\n    return DocumentSnapshot;\r\n}());\r\nvar QueryDocumentSnapshot = /** @class */ (function (_super) {\r\n    tslib_1.__extends(QueryDocumentSnapshot, _super);\r\n    function QueryDocumentSnapshot(firestore, key, document, fromCache) {\r\n        return _super.call(this, firestore, key, document, fromCache) || this;\r\n    }\r\n    QueryDocumentSnapshot.prototype.data = function (options) {\r\n        var data = _super.prototype.data.call(this, options);\r\n        assert(typeof data === 'object', 'Document in a QueryDocumentSnapshot should exist');\r\n        return data;\r\n    };\r\n    return QueryDocumentSnapshot;\r\n}(DocumentSnapshot));\r\nvar Query$1 = /** @class */ (function () {\r\n    function Query$$1(_query, firestore) {\r\n        this._query = _query;\r\n        this.firestore = firestore;\r\n    }\r\n    Query$$1.prototype.where = function (field, opStr, value) {\r\n        validateExactNumberOfArgs('Query.where', arguments, 3);\r\n        validateArgType('Query.where', 'string', 2, opStr);\r\n        validateDefined('Query.where', 3, value);\r\n        var fieldValue;\r\n        var fieldPath = fieldPathFromArgument('Query.where', field);\r\n        var relationOp = RelationOp.fromString(opStr);\r\n        if (fieldPath.isKeyField()) {\r\n            if (relationOp === RelationOp.ARRAY_CONTAINS) {\r\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid Query. You can't perform array-contains queries on \" +\r\n                    'FieldPath.documentId() since document IDs are not arrays.');\r\n            }\r\n            if (typeof value === 'string') {\r\n                if (value.indexOf('/') !== -1) {\r\n                    // TODO(dimond): Allow slashes once ancestor queries are supported\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Function Query.where() requires its third parameter to be a ' +\r\n                        'valid document ID if the first parameter is ' +\r\n                        'FieldPath.documentId(), but it contains a slash.');\r\n                }\r\n                if (value === '') {\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Function Query.where() requires its third parameter to be a ' +\r\n                        'valid document ID if the first parameter is ' +\r\n                        'FieldPath.documentId(), but it was an empty string.');\r\n                }\r\n                var path = this._query.path.child(new ResourcePath([value]));\r\n                assert(path.length % 2 === 0, 'Path should be a document key');\r\n                fieldValue = new RefValue(this.firestore._databaseId, new DocumentKey(path));\r\n            }\r\n            else if (value instanceof DocumentReference) {\r\n                var ref = value;\r\n                fieldValue = new RefValue(this.firestore._databaseId, ref._key);\r\n            }\r\n            else {\r\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function Query.where() requires its third parameter to be a \" +\r\n                    \"string or a DocumentReference if the first parameter is \" +\r\n                    \"FieldPath.documentId(), but it was: \" +\r\n                    (valueDescription(value) + \".\"));\r\n            }\r\n        }\r\n        else {\r\n            fieldValue = this.firestore._dataConverter.parseQueryValue('Query.where', value);\r\n        }\r\n        var filter = fieldFilter(fieldPath, relationOp, fieldValue);\r\n        this.validateNewFilter(filter);\r\n        return new Query$$1(this._query.addFilter(filter), this.firestore);\r\n    };\r\n    Query$$1.prototype.orderBy = function (field, directionStr) {\r\n        validateBetweenNumberOfArgs('Query.orderBy', arguments, 1, 2);\r\n        validateOptionalArgType('Query.orderBy', 'string', 2, directionStr);\r\n        var direction;\r\n        if (directionStr === undefined || directionStr === 'asc') {\r\n            direction = Direction.ASCENDING;\r\n        }\r\n        else if (directionStr === 'desc') {\r\n            direction = Direction.DESCENDING;\r\n        }\r\n        else {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Function Query.orderBy() has unknown direction '\" + directionStr + \"', \" +\r\n                \"expected 'asc' or 'desc'.\");\r\n        }\r\n        if (this._query.startAt !== null) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You must not call Query.startAt() or ' +\r\n                'Query.startAfter() before calling Query.orderBy().');\r\n        }\r\n        if (this._query.endAt !== null) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. You must not call Query.endAt() or ' +\r\n                'Query.endBefore() before calling Query.orderBy().');\r\n        }\r\n        var fieldPath = fieldPathFromArgument('Query.orderBy', field);\r\n        var orderBy = new OrderBy(fieldPath, direction);\r\n        this.validateNewOrderBy(orderBy);\r\n        return new Query$$1(this._query.addOrderBy(orderBy), this.firestore);\r\n    };\r\n    Query$$1.prototype.limit = function (n) {\r\n        validateExactNumberOfArgs('Query.limit', arguments, 1);\r\n        validateArgType('Query.limit', 'number', 1, n);\r\n        if (n <= 0) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid Query. Query limit (\" + n + \") is invalid. Limit must be \" +\r\n                'positive.');\r\n        }\r\n        return new Query$$1(this._query.withLimit(n), this.firestore);\r\n    };\r\n    Query$$1.prototype.startAt = function (docOrField) {\r\n        var fields = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            fields[_i - 1] = arguments[_i];\r\n        }\r\n        validateAtLeastNumberOfArgs('Query.startAt', arguments, 1);\r\n        var bound = this.boundFromDocOrFields('Query.startAt', docOrField, fields, \r\n        /*before=*/ true);\r\n        return new Query$$1(this._query.withStartAt(bound), this.firestore);\r\n    };\r\n    Query$$1.prototype.startAfter = function (docOrField) {\r\n        var fields = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            fields[_i - 1] = arguments[_i];\r\n        }\r\n        validateAtLeastNumberOfArgs('Query.startAfter', arguments, 1);\r\n        var bound = this.boundFromDocOrFields('Query.startAfter', docOrField, fields, \r\n        /*before=*/ false);\r\n        return new Query$$1(this._query.withStartAt(bound), this.firestore);\r\n    };\r\n    Query$$1.prototype.endBefore = function (docOrField) {\r\n        var fields = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            fields[_i - 1] = arguments[_i];\r\n        }\r\n        validateAtLeastNumberOfArgs('Query.endBefore', arguments, 1);\r\n        var bound = this.boundFromDocOrFields('Query.endBefore', docOrField, fields, \r\n        /*before=*/ true);\r\n        return new Query$$1(this._query.withEndAt(bound), this.firestore);\r\n    };\r\n    Query$$1.prototype.endAt = function (docOrField) {\r\n        var fields = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            fields[_i - 1] = arguments[_i];\r\n        }\r\n        validateAtLeastNumberOfArgs('Query.endAt', arguments, 1);\r\n        var bound = this.boundFromDocOrFields('Query.endAt', docOrField, fields, \r\n        /*before=*/ false);\r\n        return new Query$$1(this._query.withEndAt(bound), this.firestore);\r\n    };\r\n    Query$$1.prototype.isEqual = function (other) {\r\n        if (!(other instanceof Query$$1)) {\r\n            throw invalidClassError('isEqual', 'Query', 1, other);\r\n        }\r\n        return (this.firestore === other.firestore && this._query.isEqual(other._query));\r\n    };\r\n    /** Helper function to create a bound from a document or fields */\r\n    Query$$1.prototype.boundFromDocOrFields = function (methodName, docOrField, fields, before) {\r\n        validateDefined(methodName, 1, docOrField);\r\n        if (docOrField instanceof DocumentSnapshot) {\r\n            if (fields.length > 0) {\r\n                throw new FirestoreError(Code.INVALID_ARGUMENT, \"Too many arguments provided to \" + methodName + \"().\");\r\n            }\r\n            var snap = docOrField;\r\n            if (!snap.exists) {\r\n                throw new FirestoreError(Code.NOT_FOUND, \"Can't use a DocumentSnapshot that doesn't exist for \" +\r\n                    (methodName + \"().\"));\r\n            }\r\n            return this.boundFromDocument(methodName, snap._document, before);\r\n        }\r\n        else {\r\n            var allFields = [docOrField].concat(fields);\r\n            return this.boundFromFields(methodName, allFields, before);\r\n        }\r\n    };\r\n    /**\r\n     * Create a Bound from a query and a document.\r\n     *\r\n     * Note that the Bound will always include the key of the document\r\n     * and so only the provided document will compare equal to the returned\r\n     * position.\r\n     *\r\n     * Will throw if the document does not contain all fields of the order by\r\n     * of the query.\r\n     */\r\n    Query$$1.prototype.boundFromDocument = function (methodName, doc, before) {\r\n        var components = [];\r\n        // Because people expect to continue/end a query at the exact document\r\n        // provided, we need to use the implicit sort order rather than the explicit\r\n        // sort order, because it's guaranteed to contain the document key. That way\r\n        // the position becomes unambiguous and the query continues/ends exactly at\r\n        // the provided document. Without the key (by using the explicit sort\r\n        // orders), multiple documents could match the position, yielding duplicate\r\n        // results.\r\n        for (var _i = 0, _a = this._query.orderBy; _i < _a.length; _i++) {\r\n            var orderBy = _a[_i];\r\n            if (orderBy.field.isKeyField()) {\r\n                components.push(new RefValue(this.firestore._databaseId, doc.key));\r\n            }\r\n            else {\r\n                var value = doc.field(orderBy.field);\r\n                if (value !== undefined) {\r\n                    components.push(value);\r\n                }\r\n                else {\r\n                    var field = orderBy.field.canonicalString();\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. You are trying to start or end a query using a \" +\r\n                        (\"document for which the field '\" + field + \"' (used as the \") +\r\n                        \"orderBy) does not exist.\");\r\n                }\r\n            }\r\n        }\r\n        return new Bound(components, before);\r\n    };\r\n    /**\r\n     * Converts a list of field values to a Bound for the given query.\r\n     */\r\n    Query$$1.prototype.boundFromFields = function (methodName, values, before) {\r\n        // Use explicit order by's because it has to match the query the user made\r\n        var orderBy = this._query.explicitOrderBy;\r\n        if (values.length > orderBy.length) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Too many arguments provided to \" + methodName + \"(). \" +\r\n                \"The number of arguments must be less than or equal to the \" +\r\n                \"number of Query.orderBy() clauses\");\r\n        }\r\n        var components = [];\r\n        for (var i = 0; i < values.length; i++) {\r\n            var rawValue = values[i];\r\n            var orderByComponent = orderBy[i];\r\n            if (orderByComponent.field.isKeyField()) {\r\n                if (typeof rawValue !== 'string') {\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. Expected a string for document ID in \" +\r\n                        (methodName + \"(), but got a \" + typeof rawValue));\r\n                }\r\n                if (rawValue.indexOf('/') !== -1) {\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. Document ID '\" + rawValue + \"' contains a slash in \" +\r\n                        (methodName + \"()\"));\r\n                }\r\n                var key = new DocumentKey(this._query.path.child(rawValue));\r\n                components.push(new RefValue(this.firestore._databaseId, key));\r\n            }\r\n            else {\r\n                var wrapped = this.firestore._dataConverter.parseQueryValue(methodName, rawValue);\r\n                components.push(wrapped);\r\n            }\r\n        }\r\n        return new Bound(components, before);\r\n    };\r\n    Query$$1.prototype.onSnapshot = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        validateBetweenNumberOfArgs('Query.onSnapshot', arguments, 1, 4);\r\n        var options = {};\r\n        var observer;\r\n        var currArg = 0;\r\n        if (typeof args[currArg] === 'object' &&\r\n            !isPartialObserver(args[currArg])) {\r\n            options = args[currArg];\r\n            validateOptionNames('Query.onSnapshot', options, [\r\n                'includeMetadataChanges'\r\n            ]);\r\n            validateNamedOptionalType('Query.onSnapshot', 'boolean', 'includeMetadataChanges', options.includeMetadataChanges);\r\n            currArg++;\r\n        }\r\n        if (isPartialObserver(args[currArg])) {\r\n            observer = args[currArg];\r\n        }\r\n        else {\r\n            validateArgType('Query.onSnapshot', 'function', currArg, args[currArg]);\r\n            validateOptionalArgType('Query.onSnapshot', 'function', currArg + 1, args[currArg + 1]);\r\n            validateOptionalArgType('Query.onSnapshot', 'function', currArg + 2, args[currArg + 2]);\r\n            observer = {\r\n                next: args[currArg],\r\n                error: args[currArg + 1],\r\n                complete: args[currArg + 2]\r\n            };\r\n        }\r\n        return this.onSnapshotInternal(options, observer);\r\n    };\r\n    Query$$1.prototype.onSnapshotInternal = function (options, observer) {\r\n        var _this = this;\r\n        var errHandler = function (err) {\r\n            console.error('Uncaught Error in onSnapshot:', err);\r\n        };\r\n        if (observer.error) {\r\n            errHandler = observer.error.bind(observer);\r\n        }\r\n        var asyncObserver = new AsyncObserver({\r\n            next: function (result) {\r\n                if (observer.next) {\r\n                    observer.next(new QuerySnapshot(_this.firestore, _this._query, result));\r\n                }\r\n            },\r\n            error: errHandler\r\n        });\r\n        var firestoreClient = this.firestore.ensureClientConfigured();\r\n        var internalListener = firestoreClient.listen(this._query, asyncObserver, options);\r\n        return function () {\r\n            asyncObserver.mute();\r\n            firestoreClient.unlisten(internalListener);\r\n        };\r\n    };\r\n    Query$$1.prototype.get = function (options) {\r\n        var _this = this;\r\n        validateBetweenNumberOfArgs('Query.get', arguments, 0, 1);\r\n        return new Promise(function (resolve, reject) {\r\n            if (options && options.source === 'cache') {\r\n                _this.firestore\r\n                    .ensureClientConfigured()\r\n                    .getDocumentsFromLocalCache(_this._query)\r\n                    .then(function (viewSnap) {\r\n                    resolve(new QuerySnapshot(_this.firestore, _this._query, viewSnap));\r\n                }, reject);\r\n            }\r\n            else {\r\n                _this.getViaSnapshotListener(resolve, reject, options);\r\n            }\r\n        });\r\n    };\r\n    Query$$1.prototype.getViaSnapshotListener = function (resolve, reject, options) {\r\n        var unlisten = this.onSnapshotInternal({\r\n            includeMetadataChanges: true,\r\n            waitForSyncWhenOnline: true\r\n        }, {\r\n            next: function (result) {\r\n                // Remove query first before passing event to user to avoid\r\n                // user actions affecting the now stale query.\r\n                unlisten();\r\n                if (result.metadata.fromCache &&\r\n                    options &&\r\n                    options.source === 'server') {\r\n                    reject(new FirestoreError(Code.UNAVAILABLE, 'Failed to get documents from server. (However, these ' +\r\n                        'documents may exist in the local cache. Run again ' +\r\n                        'without setting source to \"server\" to ' +\r\n                        'retrieve the cached documents.)'));\r\n                }\r\n                else {\r\n                    resolve(result);\r\n                }\r\n            },\r\n            error: reject\r\n        });\r\n    };\r\n    Query$$1.prototype.validateNewFilter = function (filter) {\r\n        if (filter instanceof RelationFilter) {\r\n            if (filter.isInequality()) {\r\n                var existingField = this._query.getInequalityFilterField();\r\n                if (existingField !== null && !existingField.isEqual(filter.field)) {\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. All where filters with an inequality' +\r\n                        ' (<, <=, >, or >=) must be on the same field. But you have' +\r\n                        (\" inequality filters on '\" + existingField.toString() + \"'\") +\r\n                        (\" and '\" + filter.field.toString() + \"'\"));\r\n                }\r\n                var firstOrderByField = this._query.getFirstOrderByField();\r\n                if (firstOrderByField !== null) {\r\n                    this.validateOrderByAndInequalityMatch(filter.field, firstOrderByField);\r\n                }\r\n            }\r\n            else if (filter.op === RelationOp.ARRAY_CONTAINS) {\r\n                if (this._query.hasArrayContainsFilter()) {\r\n                    throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid query. Queries only support a single array-contains ' +\r\n                        'filter.');\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Query$$1.prototype.validateNewOrderBy = function (orderBy) {\r\n        if (this._query.getFirstOrderByField() === null) {\r\n            // This is the first order by. It must match any inequality.\r\n            var inequalityField = this._query.getInequalityFilterField();\r\n            if (inequalityField !== null) {\r\n                this.validateOrderByAndInequalityMatch(inequalityField, orderBy.field);\r\n            }\r\n        }\r\n    };\r\n    Query$$1.prototype.validateOrderByAndInequalityMatch = function (inequality, orderBy) {\r\n        if (!orderBy.isEqual(inequality)) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid query. You have a where filter with an inequality \" +\r\n                (\"(<, <=, >, or >=) on field '\" + inequality.toString() + \"' \") +\r\n                (\"and so you must also use '\" + inequality.toString() + \"' \") +\r\n                \"as your first Query.orderBy(), but your first Query.orderBy() \" +\r\n                (\"is on field '\" + orderBy.toString() + \"' instead.\"));\r\n        }\r\n    };\r\n    return Query$$1;\r\n}());\r\nvar QuerySnapshot = /** @class */ (function () {\r\n    function QuerySnapshot(_firestore, _originalQuery, _snapshot) {\r\n        this._firestore = _firestore;\r\n        this._originalQuery = _originalQuery;\r\n        this._snapshot = _snapshot;\r\n        this._cachedChanges = null;\r\n        this._cachedChangesIncludeMetadataChanges = null;\r\n        this.metadata = new SnapshotMetadata(_snapshot.hasPendingWrites, _snapshot.fromCache);\r\n    }\r\n    Object.defineProperty(QuerySnapshot.prototype, \"docs\", {\r\n        get: function () {\r\n            var result = [];\r\n            this.forEach(function (doc) { return result.push(doc); });\r\n            return result;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QuerySnapshot.prototype, \"empty\", {\r\n        get: function () {\r\n            return this._snapshot.docs.isEmpty();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QuerySnapshot.prototype, \"size\", {\r\n        get: function () {\r\n            return this._snapshot.docs.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    QuerySnapshot.prototype.forEach = function (callback, thisArg) {\r\n        var _this = this;\r\n        validateBetweenNumberOfArgs('QuerySnapshot.forEach', arguments, 1, 2);\r\n        validateArgType('QuerySnapshot.forEach', 'function', 1, callback);\r\n        this._snapshot.docs.forEach(function (doc) {\r\n            callback.call(thisArg, _this.convertToDocumentImpl(doc));\r\n        });\r\n    };\r\n    Object.defineProperty(QuerySnapshot.prototype, \"query\", {\r\n        get: function () {\r\n            return new Query$1(this._originalQuery, this._firestore);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    QuerySnapshot.prototype.docChanges = function (options) {\r\n        validateOptionNames('QuerySnapshot.docChanges', options, [\r\n            'includeMetadataChanges'\r\n        ]);\r\n        if (options) {\r\n            validateNamedOptionalType('QuerySnapshot.docChanges', 'boolean', 'includeMetadataChanges', options.includeMetadataChanges);\r\n        }\r\n        var includeMetadataChanges = options && options.includeMetadataChanges;\r\n        if (includeMetadataChanges && this._snapshot.excludesMetadataChanges) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'To include metadata changes with your document changes, you must ' +\r\n                'also pass { includeMetadataChanges:true } to onSnapshot().');\r\n        }\r\n        if (!this._cachedChanges ||\r\n            this._cachedChangesIncludeMetadataChanges !== includeMetadataChanges) {\r\n            this._cachedChanges = changesFromSnapshot(this._firestore, includeMetadataChanges, this._snapshot);\r\n            this._cachedChangesIncludeMetadataChanges = includeMetadataChanges;\r\n        }\r\n        return this._cachedChanges;\r\n    };\r\n    /** Check the equality. The call can be very expensive. */\r\n    QuerySnapshot.prototype.isEqual = function (other) {\r\n        if (!(other instanceof QuerySnapshot)) {\r\n            throw invalidClassError('isEqual', 'QuerySnapshot', 1, other);\r\n        }\r\n        return (this._firestore === other._firestore &&\r\n            this._originalQuery.isEqual(other._originalQuery) &&\r\n            this._snapshot.isEqual(other._snapshot));\r\n    };\r\n    QuerySnapshot.prototype.convertToDocumentImpl = function (doc) {\r\n        return new QueryDocumentSnapshot(this._firestore, doc.key, doc, this.metadata.fromCache);\r\n    };\r\n    return QuerySnapshot;\r\n}());\r\n// TODO(2018/11/01): As of 2018/04/17 we're changing docChanges from an array\r\n// into a method. Because this is a runtime breaking change and somewhat subtle\r\n// (both Array and Function have a .length, etc.), we'll replace commonly-used\r\n// properties (including Symbol.iterator) to throw a custom error message. In\r\n// ~6 months we can delete the custom error as most folks will have hopefully\r\n// migrated.\r\nfunction throwDocChangesMethodError() {\r\n    throw new FirestoreError(Code.INVALID_ARGUMENT, 'QuerySnapshot.docChanges has been changed from a property into a ' +\r\n        'method, so usages like \"querySnapshot.docChanges\" should become ' +\r\n        '\"querySnapshot.docChanges()\"');\r\n}\r\nvar docChangesPropertiesToOverride = [\r\n    'length',\r\n    'forEach',\r\n    'map'\r\n].concat((typeof Symbol !== 'undefined' ? [Symbol.iterator] : []));\r\ndocChangesPropertiesToOverride.forEach(function (property) {\r\n    /**\r\n     * We are (re-)defining properties on QuerySnapshot.prototype.docChanges which\r\n     * is a Function. This could fail, in particular in the case of 'length' which\r\n     * already exists on Function.prototype and on IE11 is improperly defined with\r\n     * `{ configurable: false }`. So we wrap this in a try/catch to ensure that we\r\n     * still have a functional SDK.\r\n     */\r\n    try {\r\n        Object.defineProperty(QuerySnapshot.prototype.docChanges, property, {\r\n            get: function () { return throwDocChangesMethodError(); }\r\n        });\r\n    }\r\n    catch (err) { } // Ignore this failure intentionally\r\n});\r\nvar CollectionReference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CollectionReference, _super);\r\n    function CollectionReference(path, firestore) {\r\n        var _this = _super.call(this, Query.atPath(path), firestore) || this;\r\n        if (path.length % 2 !== 1) {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Invalid collection reference. Collection ' +\r\n                'references must have an odd number of segments, but ' +\r\n                (path.canonicalString() + \" has \" + path.length));\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(CollectionReference.prototype, \"id\", {\r\n        get: function () {\r\n            return this._query.path.lastSegment();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CollectionReference.prototype, \"parent\", {\r\n        get: function () {\r\n            var parentPath = this._query.path.popLast();\r\n            if (parentPath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                return new DocumentReference(new DocumentKey(parentPath), this.firestore);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CollectionReference.prototype, \"path\", {\r\n        get: function () {\r\n            return this._query.path.canonicalString();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CollectionReference.prototype.doc = function (pathString) {\r\n        validateBetweenNumberOfArgs('CollectionReference.doc', arguments, 0, 1);\r\n        // We allow omission of 'pathString' but explicitly prohibit passing in both\r\n        // 'undefined' and 'null'.\r\n        if (arguments.length === 0) {\r\n            pathString = AutoId.newId();\r\n        }\r\n        validateArgType('CollectionReference.doc', 'string', 1, pathString);\r\n        if (pathString === '') {\r\n            throw new FirestoreError(Code.INVALID_ARGUMENT, 'Document path must be a non-empty string');\r\n        }\r\n        var path = ResourcePath.fromString(pathString);\r\n        return DocumentReference.forPath(this._query.path.child(path), this.firestore);\r\n    };\r\n    CollectionReference.prototype.add = function (value) {\r\n        validateExactNumberOfArgs('CollectionReference.add', arguments, 1);\r\n        validateArgType('CollectionReference.add', 'object', 1, value);\r\n        var docRef = this.doc();\r\n        return docRef.set(value).then(function () { return docRef; });\r\n    };\r\n    return CollectionReference;\r\n}(Query$1));\r\nfunction validateSetOptions(methodName, options) {\r\n    if (options === undefined) {\r\n        return {\r\n            merge: false\r\n        };\r\n    }\r\n    validateOptionNames(methodName, options, ['merge', 'mergeFields']);\r\n    validateNamedOptionalType(methodName, 'boolean', 'merge', options.merge);\r\n    validateOptionalArrayElements(methodName, 'mergeFields', 'a string or a FieldPath', options.mergeFields, function (element) {\r\n        return typeof element === 'string' || element instanceof FieldPath$1;\r\n    });\r\n    if (options.mergeFields !== undefined && options.merge !== undefined) {\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, \"Invalid options passed to function \" + methodName + \"(): You cannot specify both \\\"merge\\\" and \\\"mergeFields\\\".\");\r\n    }\r\n    return options;\r\n}\r\nfunction validateSnapshotOptions(methodName, options) {\r\n    if (options === undefined) {\r\n        return {};\r\n    }\r\n    validateOptionNames(methodName, options, ['serverTimestamps']);\r\n    validateNamedOptionalPropertyEquals(methodName, 'options', 'serverTimestamps', options.serverTimestamps, ['estimate', 'previous', 'none']);\r\n    return options;\r\n}\r\nfunction validateReference(methodName, documentRef, firestore) {\r\n    if (!(documentRef instanceof DocumentReference)) {\r\n        throw invalidClassError(methodName, 'DocumentReference', 1, documentRef);\r\n    }\r\n    else if (documentRef.firestore !== firestore) {\r\n        throw new FirestoreError(Code.INVALID_ARGUMENT, 'Provided document reference is from a different Firestore instance.');\r\n    }\r\n    else {\r\n        return documentRef;\r\n    }\r\n}\r\n/**\r\n * Calculates the array of firestore.DocumentChange's for a given ViewSnapshot.\r\n *\r\n * Exported for testing.\r\n */\r\nfunction changesFromSnapshot(firestore, includeMetadataChanges, snapshot) {\r\n    if (snapshot.oldDocs.isEmpty()) {\r\n        // Special case the first snapshot because index calculation is easy and\r\n        // fast\r\n        var lastDoc_1;\r\n        var index_1 = 0;\r\n        return snapshot.docChanges.map(function (change) {\r\n            var doc = new QueryDocumentSnapshot(firestore, change.doc.key, change.doc, snapshot.fromCache);\r\n            assert(change.type === ChangeType.Added, 'Invalid event type for first snapshot');\r\n            assert(!lastDoc_1 || snapshot.query.docComparator(lastDoc_1, change.doc) < 0, 'Got added events in wrong order');\r\n            lastDoc_1 = change.doc;\r\n            return {\r\n                type: 'added',\r\n                doc: doc,\r\n                oldIndex: -1,\r\n                newIndex: index_1++\r\n            };\r\n        });\r\n    }\r\n    else {\r\n        // A DocumentSet that is updated incrementally as changes are applied to use\r\n        // to lookup the index of a document.\r\n        var indexTracker_1 = snapshot.oldDocs;\r\n        return snapshot.docChanges\r\n            .filter(function (change) { return includeMetadataChanges || change.type !== ChangeType.Metadata; })\r\n            .map(function (change) {\r\n            var doc = new QueryDocumentSnapshot(firestore, change.doc.key, change.doc, snapshot.fromCache);\r\n            var oldIndex = -1;\r\n            var newIndex = -1;\r\n            if (change.type !== ChangeType.Added) {\r\n                oldIndex = indexTracker_1.indexOf(change.doc.key);\r\n                assert(oldIndex >= 0, 'Index for document not found');\r\n                indexTracker_1 = indexTracker_1.delete(change.doc.key);\r\n            }\r\n            if (change.type !== ChangeType.Removed) {\r\n                indexTracker_1 = indexTracker_1.add(change.doc);\r\n                newIndex = indexTracker_1.indexOf(change.doc.key);\r\n            }\r\n            return { type: resultChangeType(change.type), doc: doc, oldIndex: oldIndex, newIndex: newIndex };\r\n        });\r\n    }\r\n}\r\nfunction resultChangeType(type) {\r\n    switch (type) {\r\n        case ChangeType.Added:\r\n            return 'added';\r\n        case ChangeType.Modified:\r\n        case ChangeType.Metadata:\r\n            return 'modified';\r\n        case ChangeType.Removed:\r\n            return 'removed';\r\n        default:\r\n            return fail('Unknown change type: ' + type);\r\n    }\r\n}\r\n// Export the classes with a private constructor (it will fail if invoked\r\n// at runtime). Note that this still allows instanceof checks.\r\n// We're treating the variables as class names, so disable checking for lower\r\n// case variable names.\r\n// tslint:disable:variable-name\r\nvar PublicFirestore = makeConstructorPrivate(Firestore, 'Use firebase.firestore() instead.');\r\nvar PublicTransaction = makeConstructorPrivate(Transaction$1, 'Use firebase.firestore().runTransaction() instead.');\r\nvar PublicWriteBatch = makeConstructorPrivate(WriteBatch, 'Use firebase.firestore().batch() instead.');\r\nvar PublicDocumentReference = makeConstructorPrivate(DocumentReference, 'Use firebase.firestore().doc() instead.');\r\nvar PublicDocumentSnapshot = makeConstructorPrivate(DocumentSnapshot);\r\nvar PublicQueryDocumentSnapshot = makeConstructorPrivate(QueryDocumentSnapshot);\r\nvar PublicQuery = makeConstructorPrivate(Query$1);\r\nvar PublicQuerySnapshot = makeConstructorPrivate(QuerySnapshot);\r\nvar PublicCollectionReference = makeConstructorPrivate(CollectionReference, 'Use firebase.firestore().collection() instead.');\r\n// tslint:enable:variable-name\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firestoreNamespace = {\r\n    Firestore: PublicFirestore,\r\n    GeoPoint: GeoPoint,\r\n    Timestamp: Timestamp,\r\n    Blob: PublicBlob,\r\n    Transaction: PublicTransaction,\r\n    WriteBatch: PublicWriteBatch,\r\n    DocumentReference: PublicDocumentReference,\r\n    DocumentSnapshot: PublicDocumentSnapshot,\r\n    Query: PublicQuery,\r\n    QueryDocumentSnapshot: PublicQueryDocumentSnapshot,\r\n    QuerySnapshot: PublicQuerySnapshot,\r\n    CollectionReference: PublicCollectionReference,\r\n    FieldPath: FieldPath$1,\r\n    FieldValue: PublicFieldValue,\r\n    setLogLevel: Firestore.setLogLevel\r\n};\r\n/**\r\n * Configures Firestore as part of the Firebase SDK by calling registerService.\r\n */\r\nfunction configureForFirebase(firebase$$1) {\r\n    firebase$$1.INTERNAL.registerService('firestore', function (app) { return new Firestore(app); }, shallowCopy(firestoreNamespace));\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerFirestore(instance) {\r\n    configureForFirebase(instance);\r\n}\r\nregisterFirestore(firebase);\n\nexports.registerFirestore = registerFirestore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/firestore/dist/index.cjs.js\n// module id = Wk+B\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nvar errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nvar HttpsErrorImpl = /** @class */ (function (_super) {\r\n    __extends(HttpsErrorImpl, _super);\r\n    function HttpsErrorImpl(code, message, details) {\r\n        var _this = _super.call(this, message) || this;\r\n        // This is a workaround for a bug in TypeScript when extending Error:\r\n        // tslint:disable-next-line\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\r\n        _this.code = code;\r\n        _this.details = details;\r\n        return _this;\r\n    }\r\n    return HttpsErrorImpl;\r\n}(Error));\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON, serializer) {\r\n    var code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    var description = code;\r\n    var details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        var errorJSON = bodyJSON.error;\r\n        if (errorJSON) {\r\n            var status_1 = errorJSON.status;\r\n            if (typeof status_1 === 'string') {\r\n                if (!errorCodeMap[status_1]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new HttpsErrorImpl('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status_1];\r\n            }\r\n            // TODO(klimt): Add better default descriptions for error enums.\r\n            // The default description needs to be updated for the new code.\r\n            description = status_1;\r\n            var message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = serializer.decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new HttpsErrorImpl(code, description, details);\r\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\r\nvar ContextProvider = /** @class */ (function () {\r\n    function ContextProvider(app) {\r\n        this.app = app;\r\n    }\r\n    ContextProvider.prototype.getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.app.INTERNAL.getToken()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token.accessToken];\r\n                    case 2:\r\n                        e_1 = _a.sent();\r\n                        // If there's any error when trying to get the auth token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getInstanceIdToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var messaging, token, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        // HACK: Until we have a separate instanceId package, this is a quick way\r\n                        // to load in the messaging instance for this app.\r\n                        if (!this.app.messaging) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        messaging = this.app.messaging();\r\n                        return [4 /*yield*/, messaging.getToken()];\r\n                    case 1:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token];\r\n                    case 2:\r\n                        e_2 = _a.sent();\r\n                        // We don't warn on this, because it usually means messaging isn't set up.\r\n                        // console.warn('Failed to retrieve instance id token.', e);\r\n                        // If there's any error when trying to get the token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authToken, instanceIdToken;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAuthToken()];\r\n                    case 1:\r\n                        authToken = _a.sent();\r\n                        return [4 /*yield*/, this.getInstanceIdToken()];\r\n                    case 2:\r\n                        instanceIdToken = _a.sent();\r\n                        return [2 /*return*/, { authToken: authToken, instanceIdToken: instanceIdToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContextProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(o, f) {\r\n    var result = {};\r\n    for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer() {\r\n    }\r\n    // Takes data and encodes it in a JSON-friendly way, such that types such as\r\n    // Date are preserved.\r\n    Serializer.prototype.encode = function (data) {\r\n        var _this = this;\r\n        if (data === null || data === undefined) {\r\n            return null;\r\n        }\r\n        if (data instanceof Number) {\r\n            data = data.valueOf();\r\n        }\r\n        if (typeof data === 'number' && isFinite(data)) {\r\n            // Any number in JS is safe to put directly in JSON and parse as a double\r\n            // without any loss of precision.\r\n            return data;\r\n        }\r\n        if (data === true || data === false) {\r\n            return data;\r\n        }\r\n        if (Object.prototype.toString.call(data) === '[object String]') {\r\n            return data;\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(function (x) { return _this.encode(x); });\r\n        }\r\n        if (typeof data === 'function' || typeof data === 'object') {\r\n            return mapValues(data, function (x) { return _this.encode(x); });\r\n        }\r\n        // If we got this far, the data is not encodable.\r\n        throw new Error('Data cannot be encoded in JSON: ' + data);\r\n    };\r\n    // Takes data that's been encoded in a JSON-friendly form and returns a form\r\n    // with richer datatypes, such as Dates, etc.\r\n    Serializer.prototype.decode = function (json) {\r\n        var _this = this;\r\n        if (json === null) {\r\n            return json;\r\n        }\r\n        if (json['@type']) {\r\n            switch (json['@type']) {\r\n                case LONG_TYPE:\r\n                // Fall through and handle this the same as unsigned.\r\n                case UNSIGNED_LONG_TYPE: {\r\n                    // Technically, this could work return a valid number for malformed\r\n                    // data if there was a number followed by garbage. But it's just not\r\n                    // worth all the extra code to detect that case.\r\n                    var value = parseFloat(json.value);\r\n                    if (isNaN(value)) {\r\n                        throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                    }\r\n                    return value;\r\n                }\r\n                default: {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n            }\r\n        }\r\n        if (Array.isArray(json)) {\r\n            return json.map(function (x) { return _this.decode(x); });\r\n        }\r\n        if (typeof json === 'function' || typeof json === 'object') {\r\n            return mapValues(json, function (x) { return _this.decode(x); });\r\n        }\r\n        // Anything else is safe to return.\r\n        return json;\r\n    };\r\n    return Serializer;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\r\nvar Service = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Functions service for the given app and (optional) region.\r\n     * @param app_ The FirebaseApp to use.\r\n     * @param region_ The region to call functions in.\r\n     */\r\n    function Service(app_, region_) {\r\n        if (region_ === void 0) { region_ = 'us-central1'; }\r\n        this.app_ = app_;\r\n        this.region_ = region_;\r\n        this.serializer = new Serializer();\r\n        this.contextProvider = new ContextProvider(app_);\r\n    }\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name The name of the callable.\r\n     */\r\n    Service.prototype._url = function (name) {\r\n        var projectId = this.app_.options.projectId;\r\n        var region = this.region_;\r\n        return \"https://\" + region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\r\n    };\r\n    /**\r\n     * Returns a reference to the callable https trigger with the given name.\r\n     * @param name The name of the trigger.\r\n     */\r\n    Service.prototype.httpsCallable = function (name) {\r\n        var _this = this;\r\n        var callable = function (data) {\r\n            return _this.call(name, data);\r\n        };\r\n        return callable;\r\n    };\r\n    /**\r\n     * Does an HTTP POST and returns the completed response.\r\n     * @param url The url to post to.\r\n     * @param body The JSON body of the post.\r\n     * @param headers The HTTP headers to include in the request.\r\n     * @return A Promise that will succeed when the request finishes.\r\n     */\r\n    Service.prototype.postJSON = function (url, body, headers) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, json, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        headers.append('Content-Type', 'application/json');\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, fetch(url, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify(body),\r\n                                headers: headers\r\n                            })];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // This could be an unhandled error on the backend, or it could be a\r\n                        // network error. There's no way to no, since an unhandled error on the\r\n                        // backend will fail to set the proper CORS header, and thus will be\r\n                        // treated as a network error by fetch.\r\n                        return [2 /*return*/, {\r\n                                status: 0,\r\n                                json: null\r\n                            }];\r\n                    case 4:\r\n                        json = null;\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 6:\r\n                        json = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        e_2 = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 8: return [2 /*return*/, {\r\n                            status: response.status,\r\n                            json: json\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callable function asynchronously and returns the result.\r\n     * @param name The name of the callable trigger.\r\n     * @param data The data to pass as params to the function.s\r\n     */\r\n    Service.prototype.call = function (name, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, body, headers, context, response, error, responseData, decodedData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        url = this._url(name);\r\n                        // Encode any special types, such as dates, in the input data.\r\n                        data = this.serializer.encode(data);\r\n                        body = { data: data };\r\n                        headers = new Headers();\r\n                        return [4 /*yield*/, this.contextProvider.getContext()];\r\n                    case 1:\r\n                        context = _a.sent();\r\n                        if (context.authToken) {\r\n                            headers.append('Authorization', 'Bearer ' + context.authToken);\r\n                        }\r\n                        if (context.instanceIdToken) {\r\n                            headers.append('Firebase-Instance-ID-Token', context.instanceIdToken);\r\n                        }\r\n                        return [4 /*yield*/, this.postJSON(url, body, headers)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        error = _errorForResponse(response.status, response.json, this.serializer);\r\n                        if (error) {\r\n                            throw error;\r\n                        }\r\n                        if (!response.json) {\r\n                            throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\r\n                        }\r\n                        responseData = response.json.data;\r\n                        // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n                        // backwards compatibility.\r\n                        if (typeof responseData === 'undefined') {\r\n                            responseData = response.json.result;\r\n                        }\r\n                        if (typeof responseData === 'undefined') {\r\n                            // Consider the response malformed.\r\n                            throw new HttpsErrorImpl('internal', 'Response is missing data field.');\r\n                        }\r\n                        decodedData = this.serializer.decode(responseData);\r\n                        return [2 /*return*/, { data: decodedData }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Service;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nvar FUNCTIONS_TYPE = 'functions';\r\nfunction factory(app, unused, region) {\r\n    return new Service(app, region);\r\n}\r\nfunction registerFunctions(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Functions: Service\r\n    };\r\n    instance.INTERNAL.registerService(FUNCTIONS_TYPE, factory, namespaceExports, \r\n    // We don't need to wait on any AppHooks.\r\n    undefined, \r\n    // Allow multiple functions instances per app.\r\n    true);\r\n}\r\nregisterFunctions(firebase);\n\nexports.registerFunctions = registerFunctions;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/functions/dist/index.cjs.js\n// module id = aEs4\n// module chunks = 0","import { ErrorFactory, createSubscribe } from '@firebase/util';\nimport { __extends, __awaiter, __generator, __assign } from 'tslib';\nimport firebase from '@firebase/app';\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ERROR_CODES = {\r\n    AVAILABLE_IN_WINDOW: 'only-available-in-window',\r\n    AVAILABLE_IN_SW: 'only-available-in-sw',\r\n    SHOULD_BE_INHERITED: 'should-be-overriden',\r\n    BAD_SENDER_ID: 'bad-sender-id',\r\n    INCORRECT_GCM_SENDER_ID: 'incorrect-gcm-sender-id',\r\n    PERMISSION_DEFAULT: 'permission-default',\r\n    PERMISSION_BLOCKED: 'permission-blocked',\r\n    UNSUPPORTED_BROWSER: 'unsupported-browser',\r\n    NOTIFICATIONS_BLOCKED: 'notifications-blocked',\r\n    FAILED_DEFAULT_REGISTRATION: 'failed-serviceworker-registration',\r\n    SW_REGISTRATION_EXPECTED: 'sw-registration-expected',\r\n    GET_SUBSCRIPTION_FAILED: 'get-subscription-failed',\r\n    INVALID_SAVED_TOKEN: 'invalid-saved-token',\r\n    SW_REG_REDUNDANT: 'sw-reg-redundant',\r\n    TOKEN_SUBSCRIBE_FAILED: 'token-subscribe-failed',\r\n    TOKEN_SUBSCRIBE_NO_TOKEN: 'token-subscribe-no-token',\r\n    TOKEN_SUBSCRIBE_NO_PUSH_SET: 'token-subscribe-no-push-set',\r\n    TOKEN_UNSUBSCRIBE_FAILED: 'token-unsubscribe-failed',\r\n    TOKEN_UPDATE_FAILED: 'token-update-failed',\r\n    TOKEN_UPDATE_NO_TOKEN: 'token-update-no-token',\r\n    USE_SW_BEFORE_GET_TOKEN: 'use-sw-before-get-token',\r\n    INVALID_DELETE_TOKEN: 'invalid-delete-token',\r\n    DELETE_TOKEN_NOT_FOUND: 'delete-token-not-found',\r\n    DELETE_SCOPE_NOT_FOUND: 'delete-scope-not-found',\r\n    BG_HANDLER_FUNCTION_EXPECTED: 'bg-handler-function-expected',\r\n    NO_WINDOW_CLIENT_TO_MSG: 'no-window-client-to-msg',\r\n    UNABLE_TO_RESUBSCRIBE: 'unable-to-resubscribe',\r\n    NO_FCM_TOKEN_FOR_RESUBSCRIBE: 'no-fcm-token-for-resubscribe',\r\n    FAILED_TO_DELETE_TOKEN: 'failed-to-delete-token',\r\n    NO_SW_IN_REG: 'no-sw-in-reg',\r\n    BAD_SCOPE: 'bad-scope',\r\n    BAD_VAPID_KEY: 'bad-vapid-key',\r\n    BAD_SUBSCRIPTION: 'bad-subscription',\r\n    BAD_TOKEN: 'bad-token',\r\n    BAD_PUSH_SET: 'bad-push-set',\r\n    FAILED_DELETE_VAPID_KEY: 'failed-delete-vapid-key',\r\n    INVALID_PUBLIC_VAPID_KEY: 'invalid-public-vapid-key',\r\n    USE_PUBLIC_KEY_BEFORE_GET_TOKEN: 'use-public-key-before-get-token',\r\n    PUBLIC_KEY_DECRYPTION_FAILED: 'public-vapid-key-decryption-failed'\r\n};\r\nvar ERROR_MAP = (_a = {}, _a[ERROR_CODES.AVAILABLE_IN_WINDOW] = 'This method is available in a Window context.', _a[ERROR_CODES.AVAILABLE_IN_SW] = 'This method is available in a service worker ' + 'context.', _a[ERROR_CODES.SHOULD_BE_INHERITED] = 'This method should be overriden by ' + 'extended classes.', _a[ERROR_CODES.BAD_SENDER_ID] = \"Please ensure that 'messagingSenderId' is set \" +\r\n        'correctly in the options passed into firebase.initializeApp().', _a[ERROR_CODES.PERMISSION_DEFAULT] = 'The required permissions were not granted and ' + 'dismissed instead.', _a[ERROR_CODES.PERMISSION_BLOCKED] = 'The required permissions were not granted and ' + 'blocked instead.', _a[ERROR_CODES.UNSUPPORTED_BROWSER] = \"This browser doesn't support the API's \" +\r\n        'required to use the firebase SDK.', _a[ERROR_CODES.NOTIFICATIONS_BLOCKED] = 'Notifications have been blocked.', _a[ERROR_CODES.FAILED_DEFAULT_REGISTRATION] = 'We are unable to register the ' +\r\n        'default service worker. {$browserErrorMessage}', _a[ERROR_CODES.SW_REGISTRATION_EXPECTED] = 'A service worker registration was the ' + 'expected input.', _a[ERROR_CODES.GET_SUBSCRIPTION_FAILED] = 'There was an error when trying to get ' +\r\n        'any existing Push Subscriptions.', _a[ERROR_CODES.INVALID_SAVED_TOKEN] = 'Unable to access details of the saved token.', _a[ERROR_CODES.SW_REG_REDUNDANT] = 'The service worker being used for push was made ' + 'redundant.', _a[ERROR_CODES.TOKEN_SUBSCRIBE_FAILED] = 'A problem occured while subscribing the ' + 'user to FCM: {$message}', _a[ERROR_CODES.TOKEN_SUBSCRIBE_NO_TOKEN] = 'FCM returned no token when subscribing ' + 'the user to push.', _a[ERROR_CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET] = 'FCM returned an invalid response ' + 'when getting an FCM token.', _a[ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED] = 'A problem occured while unsubscribing the ' + 'user from FCM: {$message}', _a[ERROR_CODES.TOKEN_UPDATE_FAILED] = 'A problem occured while updating the ' + 'user from FCM: {$message}', _a[ERROR_CODES.TOKEN_UPDATE_NO_TOKEN] = 'FCM returned no token when updating ' + 'the user to push.', _a[ERROR_CODES.USE_SW_BEFORE_GET_TOKEN] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.', _a[ERROR_CODES.INVALID_DELETE_TOKEN] = 'You must pass a valid token into ' +\r\n        'deleteToken(), i.e. the token from getToken().', _a[ERROR_CODES.DELETE_TOKEN_NOT_FOUND] = 'The deletion attempt for token could not ' +\r\n        'be performed as the token was not found.', _a[ERROR_CODES.DELETE_SCOPE_NOT_FOUND] = 'The deletion attempt for service worker ' +\r\n        'scope could not be performed as the scope was not found.', _a[ERROR_CODES.BG_HANDLER_FUNCTION_EXPECTED] = 'The input to ' + 'setBackgroundMessageHandler() must be a function.', _a[ERROR_CODES.NO_WINDOW_CLIENT_TO_MSG] = 'An attempt was made to message a ' + 'non-existant window client.', _a[ERROR_CODES.UNABLE_TO_RESUBSCRIBE] = 'There was an error while re-subscribing ' +\r\n        'the FCM token for push messaging. Will have to resubscribe the ' +\r\n        'user on next visit. {$message}', _a[ERROR_CODES.NO_FCM_TOKEN_FOR_RESUBSCRIBE] = 'Could not find an FCM token ' +\r\n        'and as a result, unable to resubscribe. Will have to resubscribe the ' +\r\n        'user on next visit.', _a[ERROR_CODES.FAILED_TO_DELETE_TOKEN] = 'Unable to delete the currently saved token.', _a[ERROR_CODES.NO_SW_IN_REG] = 'Even though the service worker registration was ' +\r\n        'successful, there was a problem accessing the service worker itself.', _a[ERROR_CODES.INCORRECT_GCM_SENDER_ID] = \"Please change your web app manifest's \" +\r\n        \"'gcm_sender_id' value to '103953800507' to use Firebase messaging.\", _a[ERROR_CODES.BAD_SCOPE] = 'The service worker scope must be a string with at ' +\r\n        'least one character.', _a[ERROR_CODES.BAD_VAPID_KEY] = 'The public VAPID key is not a Uint8Array with 65 bytes.', _a[ERROR_CODES.BAD_SUBSCRIPTION] = 'The subscription must be a valid ' + 'PushSubscription.', _a[ERROR_CODES.BAD_TOKEN] = 'The FCM Token used for storage / lookup was not ' +\r\n        'a valid token string.', _a[ERROR_CODES.BAD_PUSH_SET] = 'The FCM push set used for storage / lookup was not ' +\r\n        'not a valid push set string.', _a[ERROR_CODES.FAILED_DELETE_VAPID_KEY] = 'The VAPID key could not be deleted.', _a[ERROR_CODES.INVALID_PUBLIC_VAPID_KEY] = 'The public VAPID key must be a string.', _a[ERROR_CODES.PUBLIC_KEY_DECRYPTION_FAILED] = 'The public VAPID key did not equal ' + '65 bytes when decrypted.', _a);\r\nvar errorFactory = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\r\nvar _a;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_PUBLIC_VAPID_KEY = new Uint8Array([\r\n    0x04,\r\n    0x33,\r\n    0x94,\r\n    0xf7,\r\n    0xdf,\r\n    0xa1,\r\n    0xeb,\r\n    0xb1,\r\n    0xdc,\r\n    0x03,\r\n    0xa2,\r\n    0x5e,\r\n    0x15,\r\n    0x71,\r\n    0xdb,\r\n    0x48,\r\n    0xd3,\r\n    0x2e,\r\n    0xed,\r\n    0xed,\r\n    0xb2,\r\n    0x34,\r\n    0xdb,\r\n    0xb7,\r\n    0x47,\r\n    0x3a,\r\n    0x0c,\r\n    0x8f,\r\n    0xc4,\r\n    0xcc,\r\n    0xe1,\r\n    0x6f,\r\n    0x3c,\r\n    0x8c,\r\n    0x84,\r\n    0xdf,\r\n    0xab,\r\n    0xb6,\r\n    0x66,\r\n    0x3e,\r\n    0xf2,\r\n    0x0c,\r\n    0xd4,\r\n    0x8b,\r\n    0xfe,\r\n    0xe3,\r\n    0xf9,\r\n    0x76,\r\n    0x2f,\r\n    0x14,\r\n    0x1c,\r\n    0x63,\r\n    0x08,\r\n    0x6a,\r\n    0x6f,\r\n    0x2d,\r\n    0xb1,\r\n    0x1a,\r\n    0x95,\r\n    0xb0,\r\n    0xce,\r\n    0x37,\r\n    0xc0,\r\n    0x9c,\r\n    0x6e\r\n]);\r\nvar ENDPOINT = 'https://fcm.googleapis.com';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MessageParameter;\r\n(function (MessageParameter) {\r\n    MessageParameter[\"TYPE_OF_MSG\"] = \"firebase-messaging-msg-type\";\r\n    MessageParameter[\"DATA\"] = \"firebase-messaging-msg-data\";\r\n})(MessageParameter || (MessageParameter = {}));\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_MSG_RECEIVED\"] = \"push-msg-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isArrayBufferEqual(a, b) {\r\n    if (a == null || b == null) {\r\n        return false;\r\n    }\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a.byteLength !== b.byteLength) {\r\n        return false;\r\n    }\r\n    var viewA = new DataView(a);\r\n    var viewB = new DataView(b);\r\n    for (var i = 0; i < a.byteLength; i++) {\r\n        if (viewA.getUint8(i) !== viewB.getUint8(i)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction toBase64(arrayBuffer) {\r\n    var uint8Version = new Uint8Array(arrayBuffer);\r\n    return btoa(String.fromCharCode.apply(null, uint8Version));\r\n}\r\nfunction arrayBufferToBase64(arrayBuffer) {\r\n    var base64String = toBase64(arrayBuffer);\r\n    return base64String\r\n        .replace(/=/g, '')\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar IidModel = /** @class */ (function () {\r\n    function IidModel() {\r\n    }\r\n    IidModel.prototype.getToken = function (senderId, subscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmSubscribeBody, applicationPubKey, headers, subscribeOptions, responseData, response, err_1, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmSubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (publicVapidKey !== DEFAULT_PUBLIC_VAPID_KEY) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmSubscribeBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        subscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmSubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', subscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_FAILED);\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_NO_TOKEN);\r\n                        }\r\n                        if (!responseData.pushSet) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET);\r\n                        }\r\n                        return [2 /*return*/, {\r\n                                token: responseData.token,\r\n                                pushSet: responseData.pushSet\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update the underlying token details for fcmToken.\r\n     */\r\n    IidModel.prototype.updateToken = function (senderId, fcmToken, fcmPushSet, subscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var p256dh, auth, fcmUpdateBody, applicationPubKey, headers, updateOptions, responseData, response, err_2, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n                        auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n                        fcmUpdateBody = \"push_set=\" + fcmPushSet + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"authorized_entity=\" + senderId + \"&\") +\r\n                            (\"endpoint=\" + subscription.endpoint + \"&\") +\r\n                            (\"encryption_key=\" + p256dh + \"&\") +\r\n                            (\"encryption_auth=\" + auth);\r\n                        if (publicVapidKey !== DEFAULT_PUBLIC_VAPID_KEY) {\r\n                            applicationPubKey = arrayBufferToBase64(publicVapidKey);\r\n                            fcmUpdateBody += \"&application_pub_key=\" + applicationPubKey;\r\n                        }\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        updateOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUpdateBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/subscribe', updateOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_2 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_FAILED);\r\n                    case 5:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UPDATE_NO_TOKEN);\r\n                        }\r\n                        return [2 /*return*/, responseData.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a fcmToken, pushSet and messagingSenderId, delete an FCM token.\r\n     */\r\n    IidModel.prototype.deleteToken = function (senderId, fcmToken, fcmPushSet) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var fcmUnsubscribeBody, headers, unsubscribeOptions, response, responseData, message, err_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        fcmUnsubscribeBody = \"authorized_entity=\" + senderId + \"&\" +\r\n                            (\"token=\" + fcmToken + \"&\") +\r\n                            (\"pushSet=\" + fcmPushSet);\r\n                        headers = new Headers();\r\n                        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n                        unsubscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: fcmUnsubscribeBody\r\n                        };\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        return [4 /*yield*/, fetch(ENDPOINT + '/fcm/connect/unsubscribe', unsubscribeOptions)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 3:\r\n                        responseData = _a.sent();\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED, {\r\n                                message: message\r\n                            });\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        err_3 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.TOKEN_UNSUBSCRIBE_FAILED);\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return IidModel;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction base64ToArrayBuffer(base64String) {\r\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'undefined';\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction handleDb(db) {\r\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n        // We found a database with the name 'undefined', but our expected object\r\n        // store isn't defined.\r\n        return;\r\n    }\r\n    var transaction = db.transaction(OLD_OBJECT_STORE_NAME);\r\n    var objectStore = transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n    var iidModel = new IidModel();\r\n    var openCursorRequest = objectStore.openCursor();\r\n    openCursorRequest.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n        console.warn('Unable to cleanup old IDB.', event);\r\n    };\r\n    openCursorRequest.onsuccess = function () {\r\n        var cursor = openCursorRequest.result;\r\n        if (cursor) {\r\n            // cursor.value contains the current record being iterated through\r\n            // this is where you'd do something with the result\r\n            var tokenDetails = cursor.value;\r\n            iidModel.deleteToken(tokenDetails.fcmSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet);\r\n            cursor.continue();\r\n        }\r\n        else {\r\n            db.close();\r\n            indexedDB.deleteDatabase(OLD_DB_NAME);\r\n        }\r\n    };\r\n}\r\nfunction cleanV1() {\r\n    var request = indexedDB.open(OLD_DB_NAME);\r\n    request.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n    };\r\n    request.onsuccess = function (event) {\r\n        var db = request.result;\r\n        handleDb(db);\r\n    };\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DbInterface = /** @class */ (function () {\r\n    function DbInterface() {\r\n        this.dbPromise = null;\r\n    }\r\n    /** Gets record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.get = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.get(key); });\r\n    };\r\n    /** Gets record(s) from the objectStore that match the given index. */\r\n    DbInterface.prototype.getIndex = function (index, key) {\r\n        function runRequest(objectStore) {\r\n            var idbIndex = objectStore.index(index);\r\n            return idbIndex.get(key);\r\n        }\r\n        return this.createTransaction(runRequest);\r\n    };\r\n    /** Assigns or overwrites the record for the given value. */\r\n    // tslint:disable-next-line:no-any IndexedDB values are of type \"any\"\r\n    DbInterface.prototype.put = function (value) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.put(value); }, 'readwrite');\r\n    };\r\n    /** Deletes record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.delete = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.delete(key); }, 'readwrite');\r\n    };\r\n    /**\r\n     * Close the currently open database.\r\n     */\r\n    DbInterface.prototype.closeDatabase = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.dbPromise) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.dbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        db.close();\r\n                        this.dbPromise = null;\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates an IndexedDB Transaction and passes its objectStore to the\r\n     * runRequest function, which runs the database request.\r\n     *\r\n     * @return Promise that resolves with the result of the runRequest function\r\n     */\r\n    DbInterface.prototype.createTransaction = function (runRequest, mode) {\r\n        if (mode === void 0) { mode = 'readonly'; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db, transaction, request, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDb()];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        transaction = db.transaction(this.objectStoreName, mode);\r\n                        request = transaction.objectStore(this.objectStoreName);\r\n                        return [4 /*yield*/, promisify(runRequest(request))];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                transaction.oncomplete = function () {\r\n                                    resolve(result);\r\n                                };\r\n                                transaction.onerror = function () {\r\n                                    reject(transaction.error);\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Gets the cached db connection or opens a new one. */\r\n    DbInterface.prototype.getDb = function () {\r\n        var _this = this;\r\n        if (!this.dbPromise) {\r\n            this.dbPromise = new Promise(function (resolve, reject) {\r\n                var request = indexedDB.open(_this.dbName, _this.dbVersion);\r\n                request.onsuccess = function () {\r\n                    resolve(request.result);\r\n                };\r\n                request.onerror = function () {\r\n                    _this.dbPromise = null;\r\n                    reject(request.error);\r\n                };\r\n                request.onupgradeneeded = function (event) { return _this.onDbUpgrade(request, event); };\r\n            });\r\n        }\r\n        return this.dbPromise;\r\n    };\r\n    return DbInterface;\r\n}());\r\n/** Promisifies an IDBRequest. Resolves with the IDBRequest's result. */\r\nfunction promisify(request) {\r\n    return new Promise(function (resolve, reject) {\r\n        request.onsuccess = function () {\r\n            resolve(request.result);\r\n        };\r\n        request.onerror = function () {\r\n            reject(request.error);\r\n        };\r\n    });\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TokenDetailsModel = /** @class */ (function (_super) {\r\n    __extends(TokenDetailsModel, _super);\r\n    function TokenDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_token_details_db';\r\n        _this.dbVersion = 3;\r\n        _this.objectStoreName = 'fcm_token_object_Store';\r\n        return _this;\r\n    }\r\n    TokenDetailsModel.prototype.onDbUpgrade = function (request, event) {\r\n        var db = request.result;\r\n        // Lack of 'break' statements is intentional.\r\n        switch (event.oldVersion) {\r\n            case 0: {\r\n                // New IDB instance\r\n                var objectStore = db.createObjectStore(this.objectStoreName, {\r\n                    keyPath: 'swScope'\r\n                });\r\n                // Make sure the sender ID can be searched\r\n                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\r\n                    unique: false\r\n                });\r\n                objectStore.createIndex('fcmToken', 'fcmToken', { unique: true });\r\n            }\r\n            case 1: {\r\n                // Prior to version 2, we were using either 'fcm_token_details_db'\r\n                // or 'undefined' as the database name due to bug in the SDK\r\n                // So remove the old tokens and databases.\r\n                cleanV1();\r\n            }\r\n            case 2: {\r\n                var objectStore = request.transaction.objectStore(this.objectStoreName);\r\n                var cursorRequest_1 = objectStore.openCursor();\r\n                cursorRequest_1.onsuccess = function () {\r\n                    var cursor = cursorRequest_1.result;\r\n                    if (cursor) {\r\n                        var value = cursor.value;\r\n                        var newValue = __assign({}, value);\r\n                        if (!value.createTime) {\r\n                            newValue.createTime = Date.now();\r\n                        }\r\n                        if (typeof value.vapidKey === 'string') {\r\n                            newValue.vapidKey = base64ToArrayBuffer(value.vapidKey);\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.auth = base64ToArrayBuffer(value.auth).buffer;\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.p256dh = base64ToArrayBuffer(value.p256dh).buffer;\r\n                        }\r\n                        cursor.update(newValue);\r\n                        cursor.continue();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Given a token, this method will look up the details in indexedDB.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromToken = function (fcmToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!fcmToken) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n                }\r\n                validateInputs({ fcmToken: fcmToken });\r\n                return [2 /*return*/, this.getIndex('fcmToken', fcmToken)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the details in\r\n     * indexedDB.\r\n     * @return The details associated with that token.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!swScope) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                validateInputs({ swScope: swScope });\r\n                return [2 /*return*/, this.get(swScope)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save the details for the fcm token for re-use at a later date.\r\n     * @param input A plain js object containing args to save.\r\n     */\r\n    TokenDetailsModel.prototype.saveTokenDetails = function (tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!tokenDetails.swScope) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                if (!tokenDetails.vapidKey) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n                }\r\n                if (!tokenDetails.endpoint || !tokenDetails.auth || !tokenDetails.p256dh) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n                }\r\n                if (!tokenDetails.fcmSenderId) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n                }\r\n                if (!tokenDetails.fcmToken) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n                }\r\n                if (!tokenDetails.fcmPushSet) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_PUSH_SET);\r\n                }\r\n                validateInputs(tokenDetails);\r\n                return [2 /*return*/, this.put(tokenDetails)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM token.\r\n     * It's returning a promise in case we need to move to an async\r\n     * method for deleting at a later date.\r\n     *\r\n     * @return Resolves once the FCM token details have been deleted and returns\r\n     * the deleted details.\r\n     */\r\n    TokenDetailsModel.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof token !== 'string' || token.length === 0) {\r\n                            return [2 /*return*/, Promise.reject(errorFactory.create(ERROR_CODES.INVALID_DELETE_TOKEN))];\r\n                        }\r\n                        return [4 /*yield*/, this.getTokenDetailsFromToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        if (!details) {\r\n                            throw errorFactory.create(ERROR_CODES.DELETE_TOKEN_NOT_FOUND);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(details.swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, details];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TokenDetailsModel;\r\n}(DbInterface));\r\n/**\r\n * This method takes an object and will check for known arguments and\r\n * validate the input.\r\n * @return Promise that resolves if input is valid, rejects otherwise.\r\n */\r\nfunction validateInputs(input) {\r\n    if (input.fcmToken) {\r\n        if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_TOKEN);\r\n        }\r\n    }\r\n    if (input.swScope) {\r\n        if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n        }\r\n    }\r\n    if (input.vapidKey) {\r\n        if (!(input.vapidKey instanceof Uint8Array) ||\r\n            input.vapidKey.length !== 65) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n        }\r\n    }\r\n    if (input.endpoint) {\r\n        if (typeof input.endpoint !== 'string' || input.endpoint.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.auth) {\r\n        if (!(input.auth instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.p256dh) {\r\n        if (!(input.p256dh instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SUBSCRIPTION);\r\n        }\r\n    }\r\n    if (input.fcmSenderId) {\r\n        if (typeof input.fcmSenderId !== 'string' ||\r\n            input.fcmSenderId.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n        }\r\n    }\r\n    if (input.fcmPushSet) {\r\n        if (typeof input.fcmPushSet !== 'string' || input.fcmPushSet.length === 0) {\r\n            throw errorFactory.create(ERROR_CODES.BAD_PUSH_SET);\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\r\nvar VapidDetailsModel = /** @class */ (function (_super) {\r\n    __extends(VapidDetailsModel, _super);\r\n    function VapidDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_vapid_details_db';\r\n        _this.dbVersion = 1;\r\n        _this.objectStoreName = 'fcm_vapid_object_Store';\r\n        return _this;\r\n    }\r\n    VapidDetailsModel.prototype.onDbUpgrade = function (request) {\r\n        var db = request.result;\r\n        db.createObjectStore(this.objectStoreName, { keyPath: 'swScope' });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the vapid key\r\n     * in indexedDB.\r\n     */\r\n    VapidDetailsModel.prototype.getVapidFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                            throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                        }\r\n                        return [4 /*yield*/, this.get(swScope)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result ? result.vapidKey : undefined];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save a vapid key against a swScope for later date.\r\n     */\r\n    VapidDetailsModel.prototype.saveVapidDetails = function (swScope, vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_SCOPE);\r\n                }\r\n                if (vapidKey === null || vapidKey.length !== UNCOMPRESSED_PUBLIC_KEY_SIZE) {\r\n                    throw errorFactory.create(ERROR_CODES.BAD_VAPID_KEY);\r\n                }\r\n                details = {\r\n                    swScope: swScope,\r\n                    vapidKey: vapidKey\r\n                };\r\n                return [2 /*return*/, this.put(details)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM VAPID key for a SW scope.\r\n     * Resolves once the scope/vapid details have been deleted and returns the\r\n     * deleted vapid key.\r\n     */\r\n    VapidDetailsModel.prototype.deleteVapidDetails = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var vapidKey;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getVapidFromSWScope(swScope)];\r\n                    case 1:\r\n                        vapidKey = _a.sent();\r\n                        if (!vapidKey) {\r\n                            throw errorFactory.create(ERROR_CODES.DELETE_SCOPE_NOT_FOUND);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, vapidKey];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return VapidDetailsModel;\r\n}(DbInterface));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SENDER_ID_OPTION_NAME = 'messagingSenderId';\r\n// Database cache should be invalidated once a week.\r\nvar TOKEN_EXPIRATION_MILLIS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nvar BaseController = /** @class */ (function () {\r\n    /**\r\n     * An interface of the Messaging Service API\r\n     */\r\n    function BaseController(app) {\r\n        var _this = this;\r\n        if (!app.options[SENDER_ID_OPTION_NAME] ||\r\n            typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {\r\n            throw errorFactory.create(ERROR_CODES.BAD_SENDER_ID);\r\n        }\r\n        this.messagingSenderId = app.options[SENDER_ID_OPTION_NAME];\r\n        this.tokenDetailsModel = new TokenDetailsModel();\r\n        this.vapidDetailsModel = new VapidDetailsModel();\r\n        this.iidModel = new IidModel();\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this.delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * @export\r\n     */\r\n    BaseController.prototype.getToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var currentPermission, swReg, publicVapidKey, pushSubscription, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentPermission = this.getNotificationPermission_();\r\n                        if (currentPermission === 'denied') {\r\n                            throw errorFactory.create(ERROR_CODES.NOTIFICATIONS_BLOCKED);\r\n                        }\r\n                        else if (currentPermission !== 'granted') {\r\n                            // We must wait for permission to be granted\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        return [4 /*yield*/, this.getPublicVapidKey_()];\r\n                    case 2:\r\n                        publicVapidKey = _a.sent();\r\n                        return [4 /*yield*/, this.getPushSubscription(swReg, publicVapidKey)];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        return [4 /*yield*/, this.tokenDetailsModel.getTokenDetailsFromSWScope(swReg.scope)];\r\n                    case 4:\r\n                        tokenDetails = _a.sent();\r\n                        if (tokenDetails) {\r\n                            return [2 /*return*/, this.manageExistingToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                        }\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * manageExistingToken is triggered if there's an existing FCM token in the\r\n     * database and it can take 3 different actions:\r\n     * 1) Retrieve the existing FCM token from the database.\r\n     * 2) If VAPID details have changed: Delete the existing token and create a\r\n     * new one with the new VAPID key.\r\n     * 3) If the database cache is invalidated: Send a request to FCM to update\r\n     * the token, and to check if the token is still valid on FCM-side.\r\n     */\r\n    BaseController.prototype.manageExistingToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isTokenValid, now;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isTokenValid = isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails);\r\n                        if (isTokenValid) {\r\n                            now = Date.now();\r\n                            if (now < tokenDetails.createTime + TOKEN_EXPIRATION_MILLIS) {\r\n                                return [2 /*return*/, tokenDetails.fcmToken];\r\n                            }\r\n                            else {\r\n                                return [2 /*return*/, this.updateToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                            }\r\n                        }\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        return [4 /*yield*/, this.deleteTokenFromDB(tokenDetails.fcmToken)];\r\n                    case 1:\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.updateToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var updatedToken, allDetails, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 6]);\r\n                        return [4 /*yield*/, this.iidModel.updateToken(this.messagingSenderId, tokenDetails.fcmToken, tokenDetails.fcmPushSet, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        updatedToken = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: updatedToken,\r\n                            fcmPushSet: tokenDetails.fcmPushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, updatedToken];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.getNewToken = function (swReg, pushSubscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenDetails, allDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.iidModel.getToken(this.messagingSenderId, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        tokenDetails = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.messagingSenderId,\r\n                            fcmToken: tokenDetails.token,\r\n                            fcmPushSet: tokenDetails.pushSet,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, tokenDetails.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes tokens that the token manager looks after,\r\n     * unsubscribes the token from FCM  and then unregisters the push\r\n     * subscription if it exists. It returns a promise that indicates\r\n     * whether or not the unsubscribe request was processed successfully.\r\n     */\r\n    BaseController.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, pushSubscription;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // Delete the token details from the database.\r\n                    return [4 /*yield*/, this.deleteTokenFromDB(token)];\r\n                    case 1:\r\n                        // Delete the token details from the database.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        registration = _a.sent();\r\n                        if (!registration) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        if (pushSubscription) {\r\n                            return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4: \r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will delete the token from the client database, and make a\r\n     * call to FCM to remove it from the server DB. Does not temper with the\r\n     * push subscription.\r\n     */\r\n    BaseController.prototype.deleteTokenFromDB = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.tokenDetailsModel.deleteToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        return [4 /*yield*/, this.iidModel.deleteToken(details.fcmSenderId, details.fcmToken, details.fcmPushSet)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a PushSubscription for the current user.\r\n     */\r\n    BaseController.prototype.getPushSubscription = function (swRegistration, publicVapidKey) {\r\n        return swRegistration.pushManager.getSubscription().then(function (subscription) {\r\n            if (subscription) {\r\n                return subscription;\r\n            }\r\n            return swRegistration.pushManager.subscribe({\r\n                userVisibleOnly: true,\r\n                applicationServerKey: publicVapidKey\r\n            });\r\n        });\r\n    };\r\n    //\r\n    // The following methods should only be available in the window.\r\n    //\r\n    BaseController.prototype.requestPermission = function () {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    BaseController.prototype.useServiceWorker = function (registration) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    BaseController.prototype.usePublicVapidKey = function (b64PublicKey) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    BaseController.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    BaseController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_WINDOW);\r\n    };\r\n    //\r\n    // The following methods are used by the service worker only.\r\n    //\r\n    BaseController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        throw errorFactory.create(ERROR_CODES.AVAILABLE_IN_SW);\r\n    };\r\n    //\r\n    // The following methods are used by the service themselves and not exposed\r\n    // publicly or not expected to be used by developers.\r\n    //\r\n    /**\r\n     * This method is required to adhere to the Firebase interface.\r\n     * It closes any currently open indexdb database connections.\r\n     */\r\n    BaseController.prototype.delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.tokenDetailsModel.closeDatabase(),\r\n                            this.vapidDetailsModel.closeDatabase()\r\n                        ])];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the current Notification Permission state.\r\n     */\r\n    BaseController.prototype.getNotificationPermission_ = function () {\r\n        // TODO: Remove the cast when this issue is fixed:\r\n        // https://github.com/Microsoft/TypeScript/issues/14701\r\n        // tslint:disable-next-line no-any\r\n        return Notification.permission;\r\n    };\r\n    BaseController.prototype.getTokenDetailsModel = function () {\r\n        return this.tokenDetailsModel;\r\n    };\r\n    BaseController.prototype.getVapidDetailsModel = function () {\r\n        return this.vapidDetailsModel;\r\n    };\r\n    // Visible for testing\r\n    // TODO: make protected\r\n    BaseController.prototype.getIidModel = function () {\r\n        return this.iidModel;\r\n    };\r\n    return BaseController;\r\n}());\r\n/**\r\n * Checks if the tokenDetails match the details provided in the clients.\r\n */\r\nfunction isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails) {\r\n    if (!tokenDetails.vapidKey ||\r\n        !isArrayBufferEqual(publicVapidKey.buffer, tokenDetails.vapidKey.buffer)) {\r\n        return false;\r\n    }\r\n    var isEndpointEqual = pushSubscription.endpoint === tokenDetails.endpoint;\r\n    var isAuthEqual = isArrayBufferEqual(pushSubscription.getKey('auth'), tokenDetails.auth);\r\n    var isP256dhEqual = isArrayBufferEqual(pushSubscription.getKey('p256dh'), tokenDetails.p256dh);\r\n    return isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar SwController = /** @class */ (function (_super) {\r\n    __extends(SwController, _super);\r\n    function SwController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            _this.onPush(e);\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            _this.onSubChange(e);\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            _this.onNotificationClick(e);\r\n        });\r\n        return _this;\r\n    }\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onPush = function (event) {\r\n        event.waitUntil(this.onPush_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onSubChange = function (event) {\r\n        event.waitUntil(this.onSubChange_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onNotificationClick = function (event) {\r\n        event.waitUntil(this.onNotificationClick_(event));\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of\r\n     * the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The\r\n     * value of the `notification` property will be used as the NotificationOptions\r\n     * object passed to showNotification. Additionally, the `title` property of the\r\n     * notification object will be used as the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be\r\n     * shown.\r\n     */\r\n    SwController.prototype.onPush_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, hasVisibleClients, notificationDetails, notificationTitle, reg, actions, maxActions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.data) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        try {\r\n                            msgPayload = event.data.json();\r\n                        }\r\n                        catch (err) {\r\n                            // Not JSON so not an FCM message\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.hasVisibleClients_()];\r\n                    case 1:\r\n                        hasVisibleClients = _a.sent();\r\n                        if (hasVisibleClients) {\r\n                            // App in foreground. Send to page.\r\n                            return [2 /*return*/, this.sendMessageToWindowClients_(msgPayload)];\r\n                        }\r\n                        notificationDetails = this.getNotificationData_(msgPayload);\r\n                        if (!notificationDetails) return [3 /*break*/, 3];\r\n                        notificationTitle = notificationDetails.title || '';\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        reg = _a.sent();\r\n                        actions = notificationDetails.actions;\r\n                        maxActions = Notification.maxActions;\r\n                        // tslint:enable no-any\r\n                        if (actions && maxActions && actions.length > maxActions) {\r\n                            console.warn(\"This browser only supports \" + maxActions + \" actions.\" +\r\n                                \"The remaining actions will not be displayed.\");\r\n                        }\r\n                        return [2 /*return*/, reg.showNotification(notificationTitle, notificationDetails)];\r\n                    case 3:\r\n                        if (!this.bgMessageHandler) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.bgMessageHandler(msgPayload)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onSubChange_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, err_1, err_2, tokenDetailsModel, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        registration = _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(ERROR_CODES.UNABLE_TO_RESUBSCRIBE, {\r\n                            message: err_1\r\n                        });\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 8]);\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        err_2 = _a.sent();\r\n                        tokenDetailsModel = this.getTokenDetailsModel();\r\n                        return [4 /*yield*/, tokenDetailsModel.getTokenDetailsFromSWScope(registration.scope)];\r\n                    case 6:\r\n                        tokenDetails = _a.sent();\r\n                        if (!tokenDetails) {\r\n                            // This should rarely occure, but could if indexedDB\r\n                            // is corrupted or wiped\r\n                            throw err_2;\r\n                        }\r\n                        // Attempt to delete the token if we know it's bad\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 7:\r\n                        // Attempt to delete the token if we know it's bad\r\n                        _a.sent();\r\n                        throw err_2;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onNotificationClick_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, clickAction, windowClient, internalMsg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.notification ||\r\n                            !event.notification.data ||\r\n                            !event.notification.data[FCM_MSG]) {\r\n                            // Not an FCM notification, do nothing.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (event.action) {\r\n                            // User clicked on an action button.\r\n                            // This will allow devs to act on action button clicks by using a custom\r\n                            // onNotificationClick listener that they define.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        msgPayload = event.notification.data[FCM_MSG];\r\n                        if (!msgPayload.notification) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        clickAction = msgPayload.notification.click_action;\r\n                        if (!clickAction) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.getWindowClient_(clickAction)];\r\n                    case 1:\r\n                        windowClient = _a.sent();\r\n                        if (!!windowClient) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, self.clients.openWindow(clickAction)];\r\n                    case 2:\r\n                        // Unable to find window client so need to open one.\r\n                        windowClient = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, windowClient.focus()];\r\n                    case 4:\r\n                        windowClient = _a.sent();\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        if (!windowClient) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Delete notification data from payload before sending to the page.\r\n                        delete msgPayload.notification;\r\n                        internalMsg = createNewMsg(MessageType.NOTIFICATION_CLICKED, msgPayload);\r\n                        // Attempt to send a message to the client to handle the data\r\n                        // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\r\n                        return [2 /*return*/, this.attemptToMessageClient_(windowClient, internalMsg)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getNotificationData_ = function (msgPayload) {\r\n        if (!msgPayload) {\r\n            return;\r\n        }\r\n        if (typeof msgPayload.notification !== 'object') {\r\n            return;\r\n        }\r\n        var notificationInformation = __assign({}, msgPayload.notification);\r\n        // Put the message payload under FCM_MSG name so we can identify the\r\n        // notification as being an FCM notification vs a notification from\r\n        // somewhere else (i.e. normal web push or developer generated\r\n        // notification).\r\n        notificationInformation.data = __assign({}, msgPayload.notification.data, (_a = {}, _a[FCM_MSG] = msgPayload, _a));\r\n        return notificationInformation;\r\n        var _a;\r\n    };\r\n    /**\r\n     * Calling setBackgroundMessageHandler will opt in to some specific\r\n     * behaviours.\r\n     * 1.) If a notification doesn't need to be shown due to a window already\r\n     * being visible, then push messages will be sent to the page.\r\n     * 2.) If a notification needs to be shown, and the message contains no\r\n     * notification data this method will be called\r\n     * and the promise it returns will be passed to event.waitUntil.\r\n     * If you do not set this callback then all push messages will let and the\r\n     * developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received\r\n     * and a notification must be shown. The callback will be given the data from\r\n     * the push message.\r\n     */\r\n    SwController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw errorFactory.create(ERROR_CODES.BG_HANDLER_FUNCTION_EXPECTED);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    /**\r\n     * @param url The URL to look for when focusing a client.\r\n     * @return Returns an existing window client or a newly opened WindowClient.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getWindowClient_ = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parsedURL, clientList, suitableClient, i, parsedClientUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        parsedURL = new URL(url, self.location.href).href;\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        suitableClient = null;\r\n                        for (i = 0; i < clientList.length; i++) {\r\n                            parsedClientUrl = new URL(clientList[i].url, self.location.href)\r\n                                .href;\r\n                            if (parsedClientUrl === parsedURL) {\r\n                                suitableClient = clientList[i];\r\n                                break;\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, suitableClient];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This message will attempt to send the message to a window client.\r\n     * @param client The WindowClient to send the message to.\r\n     * @param message The message to send to the client.\r\n     * @returns Returns a promise that resolves after sending the message. This\r\n     * does not guarantee that the message was successfully received.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.attemptToMessageClient_ = function (client, message) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // NOTE: This returns a promise in case this API is abstracted later on to\r\n                // do additional work\r\n                if (!client) {\r\n                    throw errorFactory.create(ERROR_CODES.NO_WINDOW_CLIENT_TO_MSG);\r\n                }\r\n                client.postMessage(message);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @returns If there is currently a visible WindowClient, this method will\r\n     * resolve to true, otherwise false.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.hasVisibleClients_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientList;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        return [2 /*return*/, clientList.some(function (client) { return client.visibilityState === 'visible'; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param msgPayload The data from the push event that should be sent to all\r\n     * available pages.\r\n     * @returns Returns a promise that resolves once the message has been sent to\r\n     * all WindowClients.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var clientList, internalMsg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        internalMsg = createNewMsg(MessageType.PUSH_MSG_RECEIVED, msgPayload);\r\n                        return [4 /*yield*/, Promise.all(clientList.map(function (client) {\r\n                                return _this.attemptToMessageClient_(client, internalMsg);\r\n                            }))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration.\r\n     * @return he service worker registration to be used for the push service.\r\n     */\r\n    SwController.prototype.getSWRegistration_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, self.registration];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the\r\n     * public VAPID key provided by the developer.\r\n     */\r\n    SwController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var swReg, vapidKeyFromDatabase;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        if (!swReg) {\r\n                            throw errorFactory.create(ERROR_CODES.SW_REGISTRATION_EXPECTED);\r\n                        }\r\n                        return [4 /*yield*/, this.getVapidDetailsModel().getVapidFromSWScope(swReg.scope)];\r\n                    case 2:\r\n                        vapidKeyFromDatabase = _a.sent();\r\n                        if (vapidKeyFromDatabase == null) {\r\n                            return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n                        }\r\n                        return [2 /*return*/, vapidKeyFromDatabase];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SwController;\r\n}(BaseController));\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction createNewMsg(msgType, msgData) {\r\n    return _a = {}, _a[MessageParameter.TYPE_OF_MSG] = msgType, _a[MessageParameter.DATA] = msgData, _a;\r\n    var _a;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WindowController = /** @class */ (function (_super) {\r\n    __extends(WindowController, _super);\r\n    /**\r\n     * A service that provides a MessagingService instance.\r\n     */\r\n    function WindowController(app) {\r\n        var _this = _super.call(this, app) || this;\r\n        _this.registrationToUse = null;\r\n        _this.publicVapidKeyToUse = null;\r\n        _this.manifestCheckPromise = null;\r\n        _this.messageObserver = null;\r\n        // @ts-ignore: Unused variable error, this is not implemented yet.\r\n        _this.tokenRefreshObserver = null;\r\n        _this.onMessageInternal = createSubscribe(function (observer) {\r\n            _this.messageObserver = observer;\r\n        });\r\n        _this.onTokenRefreshInternal = createSubscribe(function (observer) {\r\n            _this.tokenRefreshObserver = observer;\r\n        });\r\n        _this.setupSWMessageListener_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * This method returns an FCM token if it can be generated.\r\n     * The return promise will reject if the browser doesn't support\r\n     * FCM, if permission is denied for notifications or it's not\r\n     * possible to generate a token.\r\n     *\r\n     * @return Returns a promise that resolves to an FCM token or null if\r\n     * permission isn't granted.\r\n     */\r\n    WindowController.prototype.getToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.manifestCheckPromise) {\r\n                            this.manifestCheckPromise = manifestCheck();\r\n                        }\r\n                        return [4 /*yield*/, this.manifestCheckPromise];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, _super.prototype.getToken.call(this)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Request permission if it is not currently granted\r\n     *\r\n     * @return Resolves if the permission was granted, otherwise rejects\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var permissionResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.getNotificationPermission_() === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        permissionResult = _a.sent();\r\n                        if (permissionResult === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (permissionResult === 'denied') {\r\n                            throw errorFactory.create(ERROR_CODES.PERMISSION_BLOCKED);\r\n                        }\r\n                        else {\r\n                            throw errorFactory.create(ERROR_CODES.PERMISSION_DEFAULT);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default service worker and\r\n     * instead use a custom service worker.\r\n     *\r\n     * @param registration The service worker registration that should be used to\r\n     * receive the push messages.\r\n     */\r\n    WindowController.prototype.useServiceWorker = function (registration) {\r\n        if (!(registration instanceof ServiceWorkerRegistration)) {\r\n            throw errorFactory.create(ERROR_CODES.SW_REGISTRATION_EXPECTED);\r\n        }\r\n        if (this.registrationToUse != null) {\r\n            throw errorFactory.create(ERROR_CODES.USE_SW_BEFORE_GET_TOKEN);\r\n        }\r\n        this.registrationToUse = registration;\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default vapid key\r\n     * and instead use a custom VAPID public key.\r\n     *\r\n     * @param publicKey A URL safe base64 encoded string.\r\n     */\r\n    WindowController.prototype.usePublicVapidKey = function (publicKey) {\r\n        if (typeof publicKey !== 'string') {\r\n            throw errorFactory.create(ERROR_CODES.INVALID_PUBLIC_VAPID_KEY);\r\n        }\r\n        if (this.publicVapidKeyToUse != null) {\r\n            throw errorFactory.create(ERROR_CODES.USE_PUBLIC_KEY_BEFORE_GET_TOKEN);\r\n        }\r\n        var parsedKey = base64ToArrayBuffer(publicKey);\r\n        if (parsedKey.length !== 65) {\r\n            throw errorFactory.create(ERROR_CODES.PUBLIC_KEY_DECRYPTION_FAILED);\r\n        }\r\n        this.publicVapidKeyToUse = parsedKey;\r\n    };\r\n    /**\r\n     * @export\r\n     * @param nextOrObserver An observer object or a function triggered on\r\n     * message.\r\n     * @param error A function triggered on message error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onMessageInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onMessageInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on token\r\n     * refresh.\r\n     * @param error A function triggered on token refresh error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onTokenRefreshInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onTokenRefreshInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * Given a registration, wait for the service worker it relates to\r\n     * become activer\r\n     * @param registration Registration to wait for service worker to become active\r\n     * @return Wait for service worker registration to become active\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\r\n        var serviceWorker = registration.installing || registration.waiting || registration.active;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!serviceWorker) {\r\n                // This is a rare scenario but has occured in firefox\r\n                reject(errorFactory.create(ERROR_CODES.NO_SW_IN_REG));\r\n                return;\r\n            }\r\n            // Because the Promise function is called on next tick there is a\r\n            // small chance that the worker became active or redundant already.\r\n            if (serviceWorker.state === 'activated') {\r\n                resolve(registration);\r\n                return;\r\n            }\r\n            if (serviceWorker.state === 'redundant') {\r\n                reject(errorFactory.create(ERROR_CODES.SW_REG_REDUNDANT));\r\n                return;\r\n            }\r\n            var stateChangeListener = function () {\r\n                if (serviceWorker.state === 'activated') {\r\n                    resolve(registration);\r\n                }\r\n                else if (serviceWorker.state === 'redundant') {\r\n                    reject(errorFactory.create(ERROR_CODES.SW_REG_REDUNDANT));\r\n                }\r\n                else {\r\n                    // Return early and wait to next state change\r\n                    return;\r\n                }\r\n                serviceWorker.removeEventListener('statechange', stateChangeListener);\r\n            };\r\n            serviceWorker.addEventListener('statechange', stateChangeListener);\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration\r\n     * @return The service worker registration to be used for the push service.\r\n     */\r\n    WindowController.prototype.getSWRegistration_ = function () {\r\n        var _this = this;\r\n        if (this.registrationToUse) {\r\n            return this.waitForRegistrationToActivate_(this.registrationToUse);\r\n        }\r\n        // Make the registration null so we know useServiceWorker will not\r\n        // use a new service worker as registrationToUse is no longer undefined\r\n        this.registrationToUse = null;\r\n        return navigator.serviceWorker\r\n            .register(DEFAULT_SW_PATH, {\r\n            scope: DEFAULT_SW_SCOPE\r\n        })\r\n            .catch(function (err) {\r\n            throw errorFactory.create(ERROR_CODES.FAILED_DEFAULT_REGISTRATION, {\r\n                browserErrorMessage: err.message\r\n            });\r\n        })\r\n            .then(function (registration) {\r\n            return _this.waitForRegistrationToActivate_(registration).then(function () {\r\n                _this.registrationToUse = registration;\r\n                // We update after activation due to an issue with Firefox v49 where\r\n                // a race condition occassionally causes the service work to not\r\n                // install\r\n                registration.update();\r\n                return registration;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the public VAPID key\r\n     * provided by the developer.\r\n     */\r\n    WindowController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.publicVapidKeyToUse) {\r\n                    return [2 /*return*/, this.publicVapidKeyToUse];\r\n                }\r\n                return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will set up a message listener to handle\r\n     * events from the service worker that should trigger\r\n     * events in the page.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.setupSWMessageListener_ = function () {\r\n        var _this = this;\r\n        navigator.serviceWorker.addEventListener('message', function (event) {\r\n            if (!event.data || !event.data[MessageParameter.TYPE_OF_MSG]) {\r\n                // Not a message from FCM\r\n                return;\r\n            }\r\n            var workerPageMessage = event.data;\r\n            switch (workerPageMessage[MessageParameter.TYPE_OF_MSG]) {\r\n                case MessageType.PUSH_MSG_RECEIVED:\r\n                case MessageType.NOTIFICATION_CLICKED:\r\n                    var pushMessage = workerPageMessage[MessageParameter.DATA];\r\n                    if (_this.messageObserver) {\r\n                        _this.messageObserver.next(pushMessage);\r\n                    }\r\n                    break;\r\n                default:\r\n                    // Noop.\r\n                    break;\r\n            }\r\n        }, false);\r\n    };\r\n    return WindowController;\r\n}(BaseController));\r\n/**\r\n * The method checks that a manifest is defined and has the correct GCM\r\n * sender ID.\r\n * @return Returns a promise that resolves if the manifest matches\r\n * our required sender ID\r\n */\r\n// Exported for testing\r\nfunction manifestCheck() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var manifestTag, manifestContent, response, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    manifestTag = document.querySelector('link[rel=\"manifest\"]');\r\n                    if (!manifestTag) {\r\n                        return [2 /*return*/];\r\n                    }\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 4, , 5]);\r\n                    return [4 /*yield*/, fetch(manifestTag.href)];\r\n                case 2:\r\n                    response = _a.sent();\r\n                    return [4 /*yield*/, response.json()];\r\n                case 3:\r\n                    manifestContent = _a.sent();\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    e_1 = _a.sent();\r\n                    // If the download or parsing fails allow check.\r\n                    // We only want to error if we KNOW that the gcm_sender_id is incorrect.\r\n                    return [2 /*return*/];\r\n                case 5:\r\n                    if (!manifestContent || !manifestContent.gcm_sender_id) {\r\n                        return [2 /*return*/];\r\n                    }\r\n                    if (manifestContent.gcm_sender_id !== '103953800507') {\r\n                        throw errorFactory.create(ERROR_CODES.INCORRECT_GCM_SENDER_ID);\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerMessaging(instance) {\r\n    var messagingName = 'messaging';\r\n    var factoryMethod = function (app) {\r\n        if (!isSupported()) {\r\n            throw errorFactory.create(ERROR_CODES.UNSUPPORTED_BROWSER);\r\n        }\r\n        if (self && 'ServiceWorkerGlobalScope' in self) {\r\n            // Running in ServiceWorker context\r\n            return new SwController(app);\r\n        }\r\n        else {\r\n            // Assume we are in the window context.\r\n            return new WindowController(app);\r\n        }\r\n    };\r\n    var namespaceExports = {\r\n        isSupported: isSupported\r\n    };\r\n    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);\r\n}\r\nregisterMessaging(firebase);\r\nfunction isSupported() {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return isSWControllerSupported();\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return isWindowControllerSupported();\r\n    }\r\n}\r\n/**\r\n * Checks to see if the required APIs exist.\r\n */\r\nfunction isWindowControllerSupported() {\r\n    return ('serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\r\nfunction isSWControllerSupported() {\r\n    return ('PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n\nexport { registerMessaging, isSupported };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/messaging/dist/index.esm.js\n// module id = dqyG\n// module chunks = 0","/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { setLogLevel, Logger, LogLevel };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/logger/dist/index.esm.js\n// module id = fjI4\n// module chunks = 0","/*!\n * vuefire v2.0.0-alpha.11\n * (c) 2018 Eduardo San Martin Morote\n * Released under the MIT License.\n */\nfunction createSnapshot (doc) {\n  // defaults everything to false, so no need to set\n  return Object.defineProperty(doc.data(), 'id', {\n    value: doc.id\n  })\n}\n\nfunction isObject (o) {\n  return o && typeof o === 'object'\n}\n\nfunction isTimestamp (o) {\n  return o.toDate\n}\n\nfunction isRef (o) {\n  return o && o.onSnapshot\n}\n\nfunction extractRefs (doc, oldDoc, path, result) {\n  if ( path === void 0 ) path = '';\n  if ( result === void 0 ) result = [{}, {}];\n\n  // must be set here because walkGet can return null or undefined\n  oldDoc = oldDoc || {};\n  var idDescriptor = Object.getOwnPropertyDescriptor(doc, 'id');\n  if (idDescriptor && !idDescriptor.enumerable) {\n    Object.defineProperty(result[0], 'id', idDescriptor);\n  }\n  return Object.keys(doc).reduce(function (tot, key) {\n    var ref = doc[key];\n    // if it's a ref\n    if (isRef(ref)) {\n      tot[0][key] = oldDoc[key] || ref.path;\n      // TODO handle subpathes?\n      tot[1][path + key] = ref;\n    } else if (Array.isArray(ref)) {\n      // TODO handle array\n      tot[0][key] = Array(ref.length).fill(null);\n      extractRefs(ref, oldDoc[key], path + key + '.', [tot[0][key], tot[1]]);\n    } else if (\n      ref == null ||\n      // Firestore < 4.13\n      ref instanceof Date ||\n      isTimestamp(ref) ||\n      (ref.longitude && ref.latitude) // GeoPoint\n    ) {\n      tot[0][key] = ref;\n    } else if (isObject(ref)) {\n      tot[0][key] = {};\n      extractRefs(ref, oldDoc[key], path + key + '.', [tot[0][key], tot[1]]);\n    } else {\n      tot[0][key] = ref;\n    }\n    return tot\n  }, result)\n}\n\nfunction callOnceWithArg (fn, argFn) {\n  var called;\n  return function () {\n    if (!called) {\n      called = true;\n      return fn(argFn())\n    }\n  }\n}\n\nfunction walkGet (obj, path) {\n  return path.split('.').reduce(function (target, key) { return target[key]; }, obj)\n}\n\nfunction walkSet (obj, path, value) {\n  // path can be a number\n  var keys = ('' + path).split('.');\n  var key = keys.pop();\n  var target = keys.reduce(function (target, key) { return target[key]; }, obj);\n  // global isFinite is different from Number.isFinite\n  // it converts values to numbers\n  if (isFinite(key)) { target.splice(key, 1, value); }\n  else { target[key] = value; }\n}\n\nfunction unsubscribeAll (subs) {\n  for (var sub in subs) {\n    subs[sub].unsub();\n  }\n}\n\n// NOTE not convinced by the naming of subscribeToRefs and subscribeToDocument\n// first one is calling the other on every ref and subscribeToDocument may call\n// updateDataFromDocumentSnapshot which may call subscribeToRefs as well\nfunction subscribeToRefs (ref, options) {\n  var subs = ref.subs;\n  var refs = ref.refs;\n  var target = ref.target;\n  var path = ref.path;\n  var data = ref.data;\n  var depth = ref.depth;\n  var resolve = ref.resolve;\n\n  var refKeys = Object.keys(refs);\n  var missingKeys = Object.keys(subs).filter(function (refKey) { return refKeys.indexOf(refKey) < 0; });\n  // unbind keys that are no longer there\n  missingKeys.forEach(function (refKey) {\n    subs[refKey].unsub();\n    delete subs[refKey];\n  });\n  if (!refKeys.length || ++depth > options.maxRefDepth) { return resolve(path) }\n\n  var resolvedCount = 0;\n  var totalToResolve = refKeys.length;\n  var validResolves = Object.create(null);\n  function deepResolve (key) {\n    if (key in validResolves) {\n      if (++resolvedCount >= totalToResolve) { resolve(path); }\n    }\n  }\n\n  refKeys.forEach(function (refKey) {\n    var sub = subs[refKey];\n    var ref = refs[refKey];\n    var docPath = path + \".\" + refKey;\n\n    validResolves[docPath] = true;\n\n    // unsubscribe if bound to a different ref\n    if (sub) {\n      if (sub.path !== ref.path) { sub.unsub(); }\n      // if has already be bound and as we always walk the objects, it will work\n      else { return }\n    }\n\n    subs[refKey] = {\n      unsub: subscribeToDocument({\n        ref: ref,\n        target: target,\n        path: docPath,\n        depth: depth,\n        resolve: deepResolve.bind(null, docPath)\n      }, options),\n      path: ref.path\n    };\n  });\n}\n\nfunction bindCollection (ref, options) {\n  var vm = ref.vm;\n  var key = ref.key;\n  var collection = ref.collection;\n  var resolve = ref.resolve;\n  var reject = ref.reject;\n\n  // TODO support pathes? nested.obj.list (walkSet)\n  var array = vm[key] = [];\n  var originalResolve = resolve;\n  var isResolved;\n\n  // contain ref subscriptions of objects\n  // arraySubs is a mirror of array\n  var arraySubs = [];\n\n  var change = {\n    added: function (ref) {\n      var newIndex = ref.newIndex;\n      var doc = ref.doc;\n\n      arraySubs.splice(newIndex, 0, Object.create(null));\n      var subs = arraySubs[newIndex];\n      var snapshot = createSnapshot(doc);\n      var ref$1 = extractRefs(snapshot);\n      var data = ref$1[0];\n      var refs = ref$1[1];\n      array.splice(newIndex, 0, data);\n      subscribeToRefs({\n        data: data,\n        refs: refs,\n        subs: subs,\n        target: array,\n        path: newIndex,\n        depth: 0,\n        resolve: resolve.bind(null, doc)\n      }, options);\n    },\n    modified: function (ref) {\n      var oldIndex = ref.oldIndex;\n      var newIndex = ref.newIndex;\n      var doc = ref.doc;\n\n      var subs = arraySubs.splice(oldIndex, 1)[0];\n      arraySubs.splice(newIndex, 0, subs);\n      var oldData = array.splice(oldIndex, 1)[0];\n      var snapshot = createSnapshot(doc);\n      var ref$1 = extractRefs(snapshot, oldData);\n      var data = ref$1[0];\n      var refs = ref$1[1];\n      array.splice(newIndex, 0, data);\n      subscribeToRefs({\n        data: data,\n        refs: refs,\n        subs: subs,\n        target: array,\n        path: newIndex,\n        depth: 0,\n        resolve: resolve\n      }, options);\n    },\n    removed: function (ref) {\n      var oldIndex = ref.oldIndex;\n\n      array.splice(oldIndex, 1);\n      unsubscribeAll(arraySubs.splice(oldIndex, 1)[0]);\n    }\n  };\n\n  var unbind = collection.onSnapshot(function (ref) {\n    // console.log('pending', metadata.hasPendingWrites)\n    // docs.forEach(d => console.log('doc', d, '\\n', 'data', d.data()))\n    // NOTE this will only be triggered once and it will be with all the documents\n    // from the query appearing as added\n    // (https://firebase.google.com/docs/firestore/query-data/listen#view_changes_between_snapshots)\n    var docChanges = typeof ref.docChanges === 'function' ? ref.docChanges() : ref.docChanges;\n\n    if (!isResolved && docChanges.length) {\n      // isResolved is only meant to make sure we do the check only once\n      isResolved = true;\n      var count = 0;\n      var expectedItems = docChanges.length;\n      var validDocs = docChanges.reduce(function (dict, ref) {\n        var doc = ref.doc;\n\n        dict[doc.id] = false;\n        return dict\n      }, Object.create(null));\n      resolve = function (ref) {\n        var id = ref.id;\n\n        if (id in validDocs) {\n          if (++count >= expectedItems) {\n            originalResolve(vm[key]);\n            // reset resolve to noop\n            resolve = function (_) {};\n          }\n        }\n      };\n    }\n    docChanges.forEach(function (c) {\n      change[c.type](c);\n    });\n\n    // resolves when array is empty\n    if (!docChanges.length) { resolve(); }\n  }, reject);\n\n  return function () {\n    unbind();\n    arraySubs.forEach(unsubscribeAll);\n  }\n}\n\nfunction updateDataFromDocumentSnapshot (ref, options) {\n  var snapshot = ref.snapshot;\n  var target = ref.target;\n  var path = ref.path;\n  var subs = ref.subs;\n  var depth = ref.depth; if ( depth === void 0 ) depth = 0;\n  var resolve = ref.resolve;\n\n  var ref$1 = extractRefs(snapshot, walkGet(target, path));\n  var data = ref$1[0];\n  var refs = ref$1[1];\n  walkSet(target, path, data);\n  subscribeToRefs({\n    data: data,\n    subs: subs,\n    refs: refs,\n    target: target,\n    path: path,\n    depth: depth,\n    resolve: resolve\n  }, options);\n}\n\nfunction subscribeToDocument (ref$1, options) {\n  var ref = ref$1.ref;\n  var target = ref$1.target;\n  var path = ref$1.path;\n  var depth = ref$1.depth;\n  var resolve = ref$1.resolve;\n\n  var subs = Object.create(null);\n  var unbind = ref.onSnapshot(function (doc) {\n    if (doc.exists) {\n      updateDataFromDocumentSnapshot({\n        snapshot: createSnapshot(doc),\n        target: target,\n        path: path,\n        subs: subs,\n        depth: depth,\n        resolve: resolve\n      }, options);\n    } else {\n      walkSet(target, path, null);\n      resolve(path);\n    }\n  });\n\n  return function () {\n    unbind();\n    unsubscribeAll(subs);\n  }\n}\n\nfunction bindDocument (ref, options) {\n  var vm = ref.vm;\n  var key = ref.key;\n  var document = ref.document;\n  var resolve = ref.resolve;\n  var reject = ref.reject;\n\n  // TODO warning check if key exists?\n  // const boundRefs = Object.create(null)\n\n  var subs = Object.create(null);\n  // bind here the function so it can be resolved anywhere\n  // this is specially useful for refs\n  // TODO use walkGet?\n  resolve = callOnceWithArg(resolve, function () { return vm[key]; });\n  var unbind = document.onSnapshot(function (doc) {\n    if (doc.exists) {\n      updateDataFromDocumentSnapshot({\n        snapshot: createSnapshot(doc),\n        target: vm,\n        path: key,\n        subs: subs,\n        resolve: resolve\n      }, options);\n    } else {\n      resolve();\n    }\n  }, reject);\n\n  return function () {\n    unbind();\n    unsubscribeAll(subs);\n  }\n}\n\nfunction bind (ref$1, options) {\n  var vm = ref$1.vm;\n  var key = ref$1.key;\n  var ref = ref$1.ref;\n  if ( options === void 0 ) options = { maxRefDepth: 2 };\n\n  return new Promise(function (resolve, reject) {\n    var unbind;\n    if (ref.where) {\n      unbind = bindCollection({\n        vm: vm,\n        key: key,\n        collection: ref,\n        resolve: resolve,\n        reject: reject\n      }, options);\n    } else {\n      unbind = bindDocument({\n        vm: vm,\n        key: key,\n        document: ref,\n        resolve: resolve,\n        reject: reject\n      }, options);\n    }\n    vm._firestoreUnbinds[key] = unbind;\n  })\n}\n\nfunction install (Vue) {\n  var strategies = Vue.config.optionMergeStrategies;\n  strategies.firestore = strategies.provide;\n\n  Vue.mixin({\n    created: function created () {\n      var this$1 = this;\n\n      var ref = this.$options;\n      var firestore = ref.firestore;\n      this._firestoreUnbinds = Object.create(null);\n      this.$firestoreRefs = Object.create(null);\n      var refs = typeof firestore === 'function'\n        ? firestore.call(this)\n        : firestore;\n      if (!refs) { return }\n      Object.keys(refs).forEach(function (key) {\n        this$1.$bind(key, refs[key]);\n      });\n    },\n\n    beforeDestroy: function beforeDestroy () {\n      var this$1 = this;\n\n      for (var subKey in this$1._firestoreUnbinds) {\n        this$1._firestoreUnbinds[subKey]();\n      }\n      this._firestoreUnbinds = null;\n      this.$firestoreRefs = null;\n    }\n  });\n\n  // TODO test if $bind exist and warns\n  Vue.prototype.$bind = function (key, ref, options) {\n    if (this._firestoreUnbinds[key]) {\n      this.$unbind(key);\n    }\n    var promise = bind({\n      vm: this,\n      key: key,\n      ref: ref\n    }, options);\n    this.$firestoreRefs[key] = ref;\n    return promise\n  };\n\n  Vue.prototype.$unbind = function (key) {\n    this._firestoreUnbinds[key]();\n    delete this._firestoreUnbinds[key];\n    delete this.$firestoreRefs[key];\n  };\n}\n\nexport default install;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vuefire/dist/vuefire.esm.js\n// module id = hnaQ\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.startsWith('?')) {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/index.cjs.js\n// module id = jE0U\n// module chunks = 0","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nrequire('@firebase/polyfill');\nvar firebase = _interopDefault(require('@firebase/app'));\nrequire('@firebase/auth');\nrequire('@firebase/database');\nrequire('@firebase/firestore');\nrequire('@firebase/functions');\nrequire('@firebase/messaging');\nrequire('@firebase/storage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconsole.warn(\"\\nIt looks like you're using the development build of the Firebase JS SDK.\\nWhen deploying Firebase apps to production, it is advisable to only import\\nthe individual SDK components you intend to use.\\n\\nFor the module builds, these are available in the following manner\\n(replace <PACKAGE> with the name of a component - i.e. auth, database, etc):\\n\\nCommonJS Modules:\\nconst firebase = require('firebase/app');\\nrequire('firebase/<PACKAGE>');\\n\\nES Modules:\\nimport firebase from 'firebase/app';\\nimport 'firebase/<PACKAGE>';\\n\");\n\nmodule.exports = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/firebase/dist/index.cjs.js\n// module id = kxiW\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = rplX\n// module chunks = 0"],"sourceRoot":""}